
Proj2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004a  00800100  00000588  0000061c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000588  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080014a  0080014a  00000666  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000666  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001c0  00000000  00000000  00000696  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000020ec  00000000  00000000  00000856  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000952  00000000  00000000  00002942  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000087b  00000000  00000000  00003294  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000003d8  00000000  00000000  00003b10  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000007b3  00000000  00000000  00003ee8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000013de  00000000  00000000  0000469b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000160  00000000  00000000  00005a79  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 49 02 	jmp	0x492	; 0x492 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e8       	ldi	r30, 0x88	; 136
  7c:	f5 e0       	ldi	r31, 0x05	; 5
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 34       	cpi	r26, 0x4A	; 74
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e4       	ldi	r26, 0x4A	; 74
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 35       	cpi	r26, 0x50	; 80
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 0f 02 	call	0x41e	; 0x41e <main>
  9e:	0c 94 c2 02 	jmp	0x584	; 0x584 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_ZN10LcdDisplay8init_lcdEv>:
 *  Author: Janakiraman
 */ 

void LcdDisplay::init_lcd()
{
	USART_Init(MYUBRR);
  a6:	87 e6       	ldi	r24, 0x67	; 103
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	0e 94 a0 02 	call	0x540	; 0x540 <_Z10USART_Initj>
  ae:	08 95       	ret

000000b0 <_ZN10LcdDisplay12clearDisplayEv>:
}

void LcdDisplay::clearDisplay()
{
	USART_Sendbyte(0xFE);
  b0:	8e ef       	ldi	r24, 0xFE	; 254
  b2:	0e 94 ab 02 	call	0x556	; 0x556 <_Z14USART_Sendbyteh>
	USART_Sendbyte(0x01);
  b6:	81 e0       	ldi	r24, 0x01	; 1
  b8:	0e 94 ab 02 	call	0x556	; 0x556 <_Z14USART_Sendbyteh>
  bc:	08 95       	ret

000000be <_ZN10LcdDisplay13displayStringEPKc>:
}

void LcdDisplay::displayString(const char *str)
{
  be:	cb 01       	movw	r24, r22
	USART_Send_string(str);
  c0:	0e 94 b3 02 	call	0x566	; 0x566 <_Z17USART_Send_stringPKc>
  c4:	08 95       	ret

000000c6 <_ZN10LcdDisplay6gotoXYEhj>:
		USART_Sendbyte(0x1C);
	}
}

void LcdDisplay::gotoXY(unsigned char row, unsigned int col)
{
  c6:	cf 93       	push	r28
  c8:	df 93       	push	r29
  ca:	c6 2f       	mov	r28, r22
  cc:	d4 2f       	mov	r29, r20
	USART_Sendbyte(0xFE);
  ce:	8e ef       	ldi	r24, 0xFE	; 254
  d0:	0e 94 ab 02 	call	0x556	; 0x556 <_Z14USART_Sendbyteh>
	if(row==1)
  d4:	c1 30       	cpi	r28, 0x01	; 1
  d6:	29 f4       	brne	.+10     	; 0xe2 <_ZN10LcdDisplay6gotoXYEhj+0x1c>
	{
		USART_Sendbyte(0+(col-1)+128);
  d8:	8f e7       	ldi	r24, 0x7F	; 127
  da:	8d 0f       	add	r24, r29
  dc:	0e 94 ab 02 	call	0x556	; 0x556 <_Z14USART_Sendbyteh>
  e0:	06 c0       	rjmp	.+12     	; 0xee <_ZN10LcdDisplay6gotoXYEhj+0x28>
	}else if(row==2)
  e2:	c2 30       	cpi	r28, 0x02	; 2
  e4:	21 f4       	brne	.+8      	; 0xee <_ZN10LcdDisplay6gotoXYEhj+0x28>
	{
		USART_Sendbyte(64+(col-1)+128);
  e6:	8f eb       	ldi	r24, 0xBF	; 191
  e8:	8d 0f       	add	r24, r29
  ea:	0e 94 ab 02 	call	0x556	; 0x556 <_Z14USART_Sendbyteh>
	}
}
  ee:	df 91       	pop	r29
  f0:	cf 91       	pop	r28
  f2:	08 95       	ret

000000f4 <_Z8adc_initv>:



void adc_init()
{
	ADMUX |= (1<<REFS0);
  f4:	ec e7       	ldi	r30, 0x7C	; 124
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	80 64       	ori	r24, 0x40	; 64
  fc:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADPS0) | (1<<ADPS1) | (1<<ADPS2) | (1<<ADEN);
  fe:	ea e7       	ldi	r30, 0x7A	; 122
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	87 68       	ori	r24, 0x87	; 135
 106:	80 83       	st	Z, r24
 108:	08 95       	ret

0000010a <_Z21timer0_interrupt_initv>:
}

void timer0_interrupt_init()
{
	
	TCCR0B |= 1<< CS01 | 1<<CS00;
 10a:	85 b5       	in	r24, 0x25	; 37
 10c:	83 60       	ori	r24, 0x03	; 3
 10e:	85 bd       	out	0x25, r24	; 37
	//| 1<<WGM02;
	TIMSK0 = 1 << OCIE0A;
 110:	82 e0       	ldi	r24, 0x02	; 2
 112:	80 93 6e 00 	sts	0x006E, r24
 116:	08 95       	ret

00000118 <_Z8adc_readh>:
//}

uint16_t adc_read(uint8_t ch)
{
	ch &= 0b00000111;
	ADMUX = (ADMUX & 0xF8)|ch;
 118:	ec e7       	ldi	r30, 0x7C	; 124
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	90 81       	ld	r25, Z
//	USART_Send_string("pt");
//}

uint16_t adc_read(uint8_t ch)
{
	ch &= 0b00000111;
 11e:	87 70       	andi	r24, 0x07	; 7
	ADMUX = (ADMUX & 0xF8)|ch;
 120:	98 7f       	andi	r25, 0xF8	; 248
 122:	98 2b       	or	r25, r24
 124:	90 83       	st	Z, r25

	ADCSRA |= (1<<ADSC);
 126:	ea e7       	ldi	r30, 0x7A	; 122
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	80 81       	ld	r24, Z
 12c:	80 64       	ori	r24, 0x40	; 64
 12e:	80 83       	st	Z, r24
	
	while(ADCSRA & (1<<ADSC));
 130:	80 81       	ld	r24, Z
 132:	86 fd       	sbrc	r24, 6
 134:	fd cf       	rjmp	.-6      	; 0x130 <_Z8adc_readh+0x18>
	
	return (ADC);
 136:	80 91 78 00 	lds	r24, 0x0078
 13a:	90 91 79 00 	lds	r25, 0x0079
}
 13e:	08 95       	ret

00000140 <_Z5readXv>:

uint16_t readX()
{
	
	DDRC &= ~(1<<DDC0 | 1<<DDC2);
 140:	87 b1       	in	r24, 0x07	; 7
 142:	8a 7f       	andi	r24, 0xFA	; 250
 144:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1<<DDC1 | 1<<DDC3);
 146:	87 b1       	in	r24, 0x07	; 7
 148:	8a 60       	ori	r24, 0x0A	; 10
 14a:	87 b9       	out	0x07, r24	; 7
	
	PORTC &= ~(1<<PORTC1);
 14c:	41 98       	cbi	0x08, 1	; 8
	PORTC |=  (1<<PORTC3);
 14e:	43 9a       	sbi	0x08, 3	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 150:	8f e1       	ldi	r24, 0x1F	; 31
 152:	9e e4       	ldi	r25, 0x4E	; 78
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <_Z5readXv+0x14>
 158:	00 c0       	rjmp	.+0      	; 0x15a <_Z5readXv+0x1a>
 15a:	00 00       	nop
	
	_delay_ms(5);
	
	return adc_read(0);
 15c:	80 e0       	ldi	r24, 0x00	; 0
 15e:	0e 94 8c 00 	call	0x118	; 0x118 <_Z8adc_readh>
	
}
 162:	08 95       	ret

00000164 <_Z5readYv>:

uint16_t readY()
{
	DDRC &= ~(1<<DDC1 | 1<<DDC3);
 164:	87 b1       	in	r24, 0x07	; 7
 166:	85 7f       	andi	r24, 0xF5	; 245
 168:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1<<DDC0 | 1<<DDC2);
 16a:	87 b1       	in	r24, 0x07	; 7
 16c:	85 60       	ori	r24, 0x05	; 5
 16e:	87 b9       	out	0x07, r24	; 7
	
	PORTC &= ~(1<<PORTC0);
 170:	40 98       	cbi	0x08, 0	; 8
	PORTC |=  (1<<PORTC2);
 172:	42 9a       	sbi	0x08, 2	; 8
 174:	8f e1       	ldi	r24, 0x1F	; 31
 176:	9e e4       	ldi	r25, 0x4E	; 78
 178:	01 97       	sbiw	r24, 0x01	; 1
 17a:	f1 f7       	brne	.-4      	; 0x178 <_Z5readYv+0x14>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <_Z5readYv+0x1a>
 17e:	00 00       	nop
	
	_delay_ms(5);
	
	return adc_read(1);
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	0e 94 8c 00 	call	0x118	; 0x118 <_Z8adc_readh>
}
 186:	08 95       	ret

00000188 <_ZN5PagesC1Ev>:
	{
		//	dispPage3();
	}
}

 Pages::Pages()
 188:	cf 93       	push	r28
 18a:	df 93       	push	r29
{
	this->lcd.init_lcd();
 18c:	ec 01       	movw	r28, r24
 18e:	22 96       	adiw	r28, 0x02	; 2
 190:	ce 01       	movw	r24, r28
 192:	0e 94 53 00 	call	0xa6	; 0xa6 <_ZN10LcdDisplay8init_lcdEv>
	this->lcd.clearDisplay();
 196:	ce 01       	movw	r24, r28
 198:	0e 94 58 00 	call	0xb0	; 0xb0 <_ZN10LcdDisplay12clearDisplayEv>
}
 19c:	df 91       	pop	r29
 19e:	cf 91       	pop	r28
 1a0:	08 95       	ret

000001a2 <_ZN5Pages9dispPage1Ev>:

void Pages::dispPage1()
{	
 1a2:	cf 93       	push	r28
 1a4:	df 93       	push	r29
	this->pageNo = 1;
 1a6:	ec 01       	movw	r28, r24
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	89 93       	st	Y+, r24
 1ae:	99 93       	st	Y+, r25
	this->lcd.clearDisplay();
 1b0:	ce 01       	movw	r24, r28
 1b2:	0e 94 58 00 	call	0xb0	; 0xb0 <_ZN10LcdDisplay12clearDisplayEv>
	this->lcd.displayString("Servo");
 1b6:	60 e0       	ldi	r22, 0x00	; 0
 1b8:	71 e0       	ldi	r23, 0x01	; 1
 1ba:	ce 01       	movw	r24, r28
 1bc:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN10LcdDisplay13displayStringEPKc>
//	this->lcd.gotoXY(1,10);
//	this->lcd.displayString("Home");
	this->lcd.gotoXY(2,10);
 1c0:	4a e0       	ldi	r20, 0x0A	; 10
 1c2:	50 e0       	ldi	r21, 0x00	; 0
 1c4:	62 e0       	ldi	r22, 0x02	; 2
 1c6:	ce 01       	movw	r24, r28
 1c8:	0e 94 63 00 	call	0xc6	; 0xc6 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("Stepper");
 1cc:	66 e0       	ldi	r22, 0x06	; 6
 1ce:	71 e0       	ldi	r23, 0x01	; 1
 1d0:	ce 01       	movw	r24, r28
 1d2:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN10LcdDisplay13displayStringEPKc>
}
 1d6:	df 91       	pop	r29
 1d8:	cf 91       	pop	r28
 1da:	08 95       	ret

000001dc <_ZN5Pages9introPageEv>:
			this->page3Action(posx,posy);
	}
}

void Pages::introPage()
{
 1dc:	0f 93       	push	r16
 1de:	1f 93       	push	r17
 1e0:	cf 93       	push	r28
 1e2:	df 93       	push	r29
 1e4:	8c 01       	movw	r16, r24
	lcd.clearDisplay();
 1e6:	ec 01       	movw	r28, r24
 1e8:	22 96       	adiw	r28, 0x02	; 2
 1ea:	ce 01       	movw	r24, r28
 1ec:	0e 94 58 00 	call	0xb0	; 0xb0 <_ZN10LcdDisplay12clearDisplayEv>
	lcd.gotoXY(1,4)	;
 1f0:	44 e0       	ldi	r20, 0x04	; 4
 1f2:	50 e0       	ldi	r21, 0x00	; 0
 1f4:	61 e0       	ldi	r22, 0x01	; 1
 1f6:	ce 01       	movw	r24, r28
 1f8:	0e 94 63 00 	call	0xc6	; 0xc6 <_ZN10LcdDisplay6gotoXYEhj>
	lcd.displayString("Welcome to ");
 1fc:	6e e0       	ldi	r22, 0x0E	; 14
 1fe:	71 e0       	ldi	r23, 0x01	; 1
 200:	ce 01       	movw	r24, r28
 202:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN10LcdDisplay13displayStringEPKc>
	lcd.gotoXY(2,4)	;
 206:	44 e0       	ldi	r20, 0x04	; 4
 208:	50 e0       	ldi	r21, 0x00	; 0
 20a:	62 e0       	ldi	r22, 0x02	; 2
 20c:	ce 01       	movw	r24, r28
 20e:	0e 94 63 00 	call	0xc6	; 0xc6 <_ZN10LcdDisplay6gotoXYEhj>
	lcd.displayString("Johny's Proj");
 212:	6a e1       	ldi	r22, 0x1A	; 26
 214:	71 e0       	ldi	r23, 0x01	; 1
 216:	ce 01       	movw	r24, r28
 218:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN10LcdDisplay13displayStringEPKc>
 21c:	2f ef       	ldi	r18, 0xFF	; 255
 21e:	87 ea       	ldi	r24, 0xA7	; 167
 220:	91 e6       	ldi	r25, 0x61	; 97
 222:	21 50       	subi	r18, 0x01	; 1
 224:	80 40       	sbci	r24, 0x00	; 0
 226:	90 40       	sbci	r25, 0x00	; 0
 228:	e1 f7       	brne	.-8      	; 0x222 <_ZN5Pages9introPageEv+0x46>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <_ZN5Pages9introPageEv+0x50>
 22c:	00 00       	nop
	_delay_ms(2000);
	this->dispPage1();
 22e:	c8 01       	movw	r24, r16
 230:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <_ZN5Pages9dispPage1Ev>
}
 234:	df 91       	pop	r29
 236:	cf 91       	pop	r28
 238:	1f 91       	pop	r17
 23a:	0f 91       	pop	r16
 23c:	08 95       	ret

0000023e <_ZN5Pages11page2ActionEjj>:
	this->lcd.displayString("- - -160");
}

bool Pages::range(int num,int max,int min)
{
	return (num<max && num>min)?true:false;
 23e:	9b 01       	movw	r18, r22
 240:	21 52       	subi	r18, 0x21	; 33
 242:	33 40       	sbci	r19, 0x03	; 3
 244:	25 39       	cpi	r18, 0x95	; 149
 246:	31 05       	cpc	r19, r1
 248:	30 f4       	brcc	.+12     	; 0x256 <_ZN5Pages11page2ActionEjj+0x18>
 24a:	9a 01       	movw	r18, r20
 24c:	21 52       	subi	r18, 0x21	; 33
 24e:	33 40       	sbci	r19, 0x03	; 3
 250:	25 39       	cpi	r18, 0x95	; 149
 252:	31 05       	cpc	r19, r1
 254:	c0 f0       	brcs	.+48     	; 0x286 <_ZN5Pages11page2ActionEjj+0x48>
 256:	9b 01       	movw	r18, r22
 258:	25 56       	subi	r18, 0x65	; 101
 25a:	31 09       	sbc	r19, r1
 25c:	23 3b       	cpi	r18, 0xB3	; 179
 25e:	31 05       	cpc	r19, r1
 260:	30 f4       	brcc	.+12     	; 0x26e <_ZN5Pages11page2ActionEjj+0x30>
 262:	9a 01       	movw	r18, r20
 264:	21 52       	subi	r18, 0x21	; 33
 266:	33 40       	sbci	r19, 0x03	; 3
 268:	25 39       	cpi	r18, 0x95	; 149
 26a:	31 05       	cpc	r19, r1
 26c:	60 f0       	brcs	.+24     	; 0x286 <_ZN5Pages11page2ActionEjj+0x48>
 26e:	61 59       	subi	r22, 0x91	; 145
 270:	71 40       	sbci	r23, 0x01	; 1
 272:	63 30       	cpi	r22, 0x03	; 3
 274:	71 40       	sbci	r23, 0x01	; 1
 276:	38 f4       	brcc	.+14     	; 0x286 <_ZN5Pages11page2ActionEjj+0x48>
 278:	41 52       	subi	r20, 0x21	; 33
 27a:	53 40       	sbci	r21, 0x03	; 3
 27c:	45 39       	cpi	r20, 0x95	; 149
 27e:	51 05       	cpc	r21, r1
 280:	10 f4       	brcc	.+4      	; 0x286 <_ZN5Pages11page2ActionEjj+0x48>
	{
	//	dispPage3();
	}
	else if(range(posx,660,400) && range(posy,950,800))
	{
		dispPage1();
 282:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <_ZN5Pages9dispPage1Ev>
 286:	08 95       	ret

00000288 <_ZN5Pages11page3ActionEjj>:
	this->lcd.displayString("- - -160");
}

bool Pages::range(int num,int max,int min)
{
	return (num<max && num>min)?true:false;
 288:	9b 01       	movw	r18, r22
 28a:	2f 54       	subi	r18, 0x4F	; 79
 28c:	32 40       	sbci	r19, 0x02	; 2
 28e:	27 36       	cpi	r18, 0x67	; 103
 290:	31 40       	sbci	r19, 0x01	; 1
 292:	30 f4       	brcc	.+12     	; 0x2a0 <_ZN5Pages11page3ActionEjj+0x18>
 294:	9a 01       	movw	r18, r20
 296:	21 52       	subi	r18, 0x21	; 33
 298:	33 40       	sbci	r19, 0x03	; 3
 29a:	25 39       	cpi	r18, 0x95	; 149
 29c:	31 05       	cpc	r19, r1
 29e:	60 f0       	brcs	.+24     	; 0x2b8 <_ZN5Pages11page3ActionEjj+0x30>
 2a0:	65 56       	subi	r22, 0x65	; 101
 2a2:	71 09       	sbc	r23, r1
 2a4:	6d 30       	cpi	r22, 0x0D	; 13
 2a6:	71 40       	sbci	r23, 0x01	; 1
 2a8:	38 f4       	brcc	.+14     	; 0x2b8 <_ZN5Pages11page3ActionEjj+0x30>
 2aa:	41 52       	subi	r20, 0x21	; 33
 2ac:	53 40       	sbci	r21, 0x03	; 3
 2ae:	45 39       	cpi	r20, 0x95	; 149
 2b0:	51 05       	cpc	r21, r1
 2b2:	10 f4       	brcc	.+4      	; 0x2b8 <_ZN5Pages11page3ActionEjj+0x30>
	{
		//	dispPage2();
	}
	else if(range(posx,370,100) && range(posy,950,800))
	{
		dispPage1();
 2b4:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <_ZN5Pages9dispPage1Ev>
 2b8:	08 95       	ret

000002ba <_ZN5Pages9dispPage2Ev>:
	this->lcd.gotoXY(2,10);
	this->lcd.displayString("Stepper");
}

void Pages::dispPage2()
{
 2ba:	cf 93       	push	r28
 2bc:	df 93       	push	r29
	this->pageNo = 2;
 2be:	ec 01       	movw	r28, r24
 2c0:	82 e0       	ldi	r24, 0x02	; 2
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	89 93       	st	Y+, r24
 2c6:	99 93       	st	Y+, r25
	this->lcd.clearDisplay();
 2c8:	ce 01       	movw	r24, r28
 2ca:	0e 94 58 00 	call	0xb0	; 0xb0 <_ZN10LcdDisplay12clearDisplayEv>
	this->lcd.displayString("CW");
 2ce:	6d e2       	ldi	r22, 0x2D	; 45
 2d0:	71 e0       	ldi	r23, 0x01	; 1
 2d2:	ce 01       	movw	r24, r28
 2d4:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(1,9);
 2d8:	49 e0       	ldi	r20, 0x09	; 9
 2da:	50 e0       	ldi	r21, 0x00	; 0
 2dc:	61 e0       	ldi	r22, 0x01	; 1
 2de:	ce 01       	movw	r24, r28
 2e0:	0e 94 63 00 	call	0xc6	; 0xc6 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("Home");
 2e4:	67 e2       	ldi	r22, 0x27	; 39
 2e6:	71 e0       	ldi	r23, 0x01	; 1
 2e8:	ce 01       	movw	r24, r28
 2ea:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(1,14);
 2ee:	4e e0       	ldi	r20, 0x0E	; 14
 2f0:	50 e0       	ldi	r21, 0x00	; 0
 2f2:	61 e0       	ldi	r22, 0x01	; 1
 2f4:	ce 01       	movw	r24, r28
 2f6:	0e 94 63 00 	call	0xc6	; 0xc6 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("CCW");
 2fa:	6c e2       	ldi	r22, 0x2C	; 44
 2fc:	71 e0       	ldi	r23, 0x01	; 1
 2fe:	ce 01       	movw	r24, r28
 300:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(2,1);
 304:	41 e0       	ldi	r20, 0x01	; 1
 306:	50 e0       	ldi	r21, 0x00	; 0
 308:	62 e0       	ldi	r22, 0x02	; 2
 30a:	ce 01       	movw	r24, r28
 30c:	0e 94 63 00 	call	0xc6	; 0xc6 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("0 - - -");
 310:	60 e3       	ldi	r22, 0x30	; 48
 312:	71 e0       	ldi	r23, 0x01	; 1
 314:	ce 01       	movw	r24, r28
 316:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(2,9);
 31a:	49 e0       	ldi	r20, 0x09	; 9
 31c:	50 e0       	ldi	r21, 0x00	; 0
 31e:	62 e0       	ldi	r22, 0x02	; 2
 320:	ce 01       	movw	r24, r28
 322:	0e 94 63 00 	call	0xc6	; 0xc6 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("- - -360");
 326:	68 e3       	ldi	r22, 0x38	; 56
 328:	71 e0       	ldi	r23, 0x01	; 1
 32a:	ce 01       	movw	r24, r28
 32c:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN10LcdDisplay13displayStringEPKc>
}
 330:	df 91       	pop	r29
 332:	cf 91       	pop	r28
 334:	08 95       	ret

00000336 <_ZN5Pages9dispPage3Ev>:

void Pages::dispPage3()
{
 336:	cf 93       	push	r28
 338:	df 93       	push	r29
	this->pageNo = 3;
 33a:	ec 01       	movw	r28, r24
 33c:	83 e0       	ldi	r24, 0x03	; 3
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	89 93       	st	Y+, r24
 342:	99 93       	st	Y+, r25
	this->lcd.clearDisplay();
 344:	ce 01       	movw	r24, r28
 346:	0e 94 58 00 	call	0xb0	; 0xb0 <_ZN10LcdDisplay12clearDisplayEv>
	this->lcd.displayString("Servo");
 34a:	60 e0       	ldi	r22, 0x00	; 0
 34c:	71 e0       	ldi	r23, 0x01	; 1
 34e:	ce 01       	movw	r24, r28
 350:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(1,13);
 354:	4d e0       	ldi	r20, 0x0D	; 13
 356:	50 e0       	ldi	r21, 0x00	; 0
 358:	61 e0       	ldi	r22, 0x01	; 1
 35a:	ce 01       	movw	r24, r28
 35c:	0e 94 63 00 	call	0xc6	; 0xc6 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("Home");
 360:	67 e2       	ldi	r22, 0x27	; 39
 362:	71 e0       	ldi	r23, 0x01	; 1
 364:	ce 01       	movw	r24, r28
 366:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(2,1);
 36a:	41 e0       	ldi	r20, 0x01	; 1
 36c:	50 e0       	ldi	r21, 0x00	; 0
 36e:	62 e0       	ldi	r22, 0x02	; 2
 370:	ce 01       	movw	r24, r28
 372:	0e 94 63 00 	call	0xc6	; 0xc6 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("0 - - -");
 376:	60 e3       	ldi	r22, 0x30	; 48
 378:	71 e0       	ldi	r23, 0x01	; 1
 37a:	ce 01       	movw	r24, r28
 37c:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(2,9);
 380:	49 e0       	ldi	r20, 0x09	; 9
 382:	50 e0       	ldi	r21, 0x00	; 0
 384:	62 e0       	ldi	r22, 0x02	; 2
 386:	ce 01       	movw	r24, r28
 388:	0e 94 63 00 	call	0xc6	; 0xc6 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("- - -160");
 38c:	61 e4       	ldi	r22, 0x41	; 65
 38e:	71 e0       	ldi	r23, 0x01	; 1
 390:	ce 01       	movw	r24, r28
 392:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN10LcdDisplay13displayStringEPKc>
}
 396:	df 91       	pop	r29
 398:	cf 91       	pop	r28
 39a:	08 95       	ret

0000039c <_ZN5Pages11page1ActionEjj>:

bool Pages::range(int num,int max,int min)
{
	return (num<max && num>min)?true:false;
 39c:	9b 01       	movw	r18, r22
 39e:	21 53       	subi	r18, 0x31	; 49
 3a0:	32 40       	sbci	r19, 0x02	; 2
 3a2:	25 38       	cpi	r18, 0x85	; 133
 3a4:	31 40       	sbci	r19, 0x01	; 1
 3a6:	30 f4       	brcc	.+12     	; 0x3b4 <_ZN5Pages11page1ActionEjj+0x18>
 3a8:	9a 01       	movw	r18, r20
 3aa:	21 52       	subi	r18, 0x21	; 33
 3ac:	33 40       	sbci	r19, 0x03	; 3
 3ae:	25 39       	cpi	r18, 0x95	; 149
 3b0:	31 05       	cpc	r19, r1
 3b2:	58 f0       	brcs	.+22     	; 0x3ca <_ZN5Pages11page1ActionEjj+0x2e>
 3b4:	65 56       	subi	r22, 0x65	; 101
 3b6:	71 09       	sbc	r23, r1
 3b8:	6d 35       	cpi	r22, 0x5D	; 93
 3ba:	71 40       	sbci	r23, 0x01	; 1
 3bc:	58 f4       	brcc	.+22     	; 0x3d4 <_ZN5Pages11page1ActionEjj+0x38>
 3be:	4d 5b       	subi	r20, 0xBD	; 189
 3c0:	52 40       	sbci	r21, 0x02	; 2
 3c2:	49 35       	cpi	r20, 0x59	; 89
 3c4:	51 05       	cpc	r21, r1
 3c6:	30 f4       	brcc	.+12     	; 0x3d4 <_ZN5Pages11page1ActionEjj+0x38>
 3c8:	03 c0       	rjmp	.+6      	; 0x3d0 <_ZN5Pages11page1ActionEjj+0x34>

void Pages::page1Action(uint16_t posx,uint16_t posy)
{
	if(range(posx,950,560) && range(posy,950,800))
	{
		dispPage3();
 3ca:	0e 94 9b 01 	call	0x336	; 0x336 <_ZN5Pages9dispPage3Ev>
 3ce:	08 95       	ret
	}
	else if(range(posx,450,100) && range(posy,790,700))
	{
		dispPage2();
 3d0:	0e 94 5d 01 	call	0x2ba	; 0x2ba <_ZN5Pages9dispPage2Ev>
 3d4:	08 95       	ret

000003d6 <_ZN5Pages12chooseActionEjj>:
	this->lcd.displayString("- - -160");
}

bool Pages::range(int num,int max,int min)
{
	return (num<max && num>min)?true:false;
 3d6:	9b 01       	movw	r18, r22
 3d8:	26 50       	subi	r18, 0x06	; 6
 3da:	31 09       	sbc	r19, r1
 3dc:	20 3b       	cpi	r18, 0xB0	; 176
 3de:	33 40       	sbci	r19, 0x03	; 3
 3e0:	e8 f4       	brcc	.+58     	; 0x41c <_ZN5Pages12chooseActionEjj+0x46>
 3e2:	9a 01       	movw	r18, r20
 3e4:	26 50       	subi	r18, 0x06	; 6
 3e6:	31 09       	sbc	r19, r1
 3e8:	20 3b       	cpi	r18, 0xB0	; 176
 3ea:	33 40       	sbci	r19, 0x03	; 3
 3ec:	b8 f4       	brcc	.+46     	; 0x41c <_ZN5Pages12chooseActionEjj+0x46>
 3ee:	0f c0       	rjmp	.+30     	; 0x40e <_ZN5Pages12chooseActionEjj+0x38>
void Pages::chooseAction(uint16_t posx,uint16_t posy)
{
	if(this->range(posx,950,5) && range(posy,950,5))
	{
		if(pageNo == 1)
			this->page1Action(posx,posy);
 3f0:	0e 94 ce 01 	call	0x39c	; 0x39c <_ZN5Pages11page1ActionEjj>
 3f4:	08 95       	ret
		else if(pageNo == 2)
 3f6:	22 30       	cpi	r18, 0x02	; 2
 3f8:	31 05       	cpc	r19, r1
 3fa:	19 f4       	brne	.+6      	; 0x402 <_ZN5Pages12chooseActionEjj+0x2c>
			this->page2Action(posx,posy);
 3fc:	0e 94 1f 01 	call	0x23e	; 0x23e <_ZN5Pages11page2ActionEjj>
 400:	08 95       	ret
		else if(pageNo == 3)
 402:	23 30       	cpi	r18, 0x03	; 3
 404:	31 05       	cpc	r19, r1
 406:	51 f4       	brne	.+20     	; 0x41c <_ZN5Pages12chooseActionEjj+0x46>
			this->page3Action(posx,posy);
 408:	0e 94 44 01 	call	0x288	; 0x288 <_ZN5Pages11page3ActionEjj>
 40c:	08 95       	ret

void Pages::chooseAction(uint16_t posx,uint16_t posy)
{
	if(this->range(posx,950,5) && range(posy,950,5))
	{
		if(pageNo == 1)
 40e:	fc 01       	movw	r30, r24
 410:	20 81       	ld	r18, Z
 412:	31 81       	ldd	r19, Z+1	; 0x01
 414:	21 30       	cpi	r18, 0x01	; 1
 416:	31 05       	cpc	r19, r1
 418:	71 f7       	brne	.-36     	; 0x3f6 <_ZN5Pages12chooseActionEjj+0x20>
 41a:	ea cf       	rjmp	.-44     	; 0x3f0 <_ZN5Pages12chooseActionEjj+0x1a>
 41c:	08 95       	ret

0000041e <main>:
	//	OCR0A = number;
	
}*/

int main(void)
{
 41e:	cf 93       	push	r28
 420:	df 93       	push	r29
 422:	00 d0       	rcall	.+0      	; 0x424 <main+0x6>
 424:	00 d0       	rcall	.+0      	; 0x426 <main+0x8>
 426:	cd b7       	in	r28, 0x3d	; 61
 428:	de b7       	in	r29, 0x3e	; 62
	sei();
 42a:	78 94       	sei
	//count = 0;
	LcdDisplay lcd;
	
	touchscreen.init();
 42c:	8c e4       	ldi	r24, 0x4C	; 76
 42e:	91 e0       	ldi	r25, 0x01	; 1
 430:	0e 94 8d 02 	call	0x51a	; 0x51a <_ZN11TouchScreen4initEv>
	lcd.init_lcd();
 434:	ce 01       	movw	r24, r28
 436:	04 96       	adiw	r24, 0x04	; 4
 438:	0e 94 53 00 	call	0xa6	; 0xa6 <_ZN10LcdDisplay8init_lcdEv>
	USART_Init(MYUBRR);
 43c:	87 e6       	ldi	r24, 0x67	; 103
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	0e 94 a0 02 	call	0x540	; 0x540 <_Z10USART_Initj>
	timer0_interrupt_init();
 444:	0e 94 85 00 	call	0x10a	; 0x10a <_Z21timer0_interrupt_initv>
	lcd.clearDisplay();
 448:	ce 01       	movw	r24, r28
 44a:	04 96       	adiw	r24, 0x04	; 4
 44c:	0e 94 58 00 	call	0xb0	; 0xb0 <_ZN10LcdDisplay12clearDisplayEv>
	Pages page;
 450:	ce 01       	movw	r24, r28
 452:	01 96       	adiw	r24, 0x01	; 1
 454:	0e 94 c4 00 	call	0x188	; 0x188 <_ZN5PagesC1Ev>
	page.introPage();
 458:	ce 01       	movw	r24, r28
 45a:	01 96       	adiw	r24, 0x01	; 1
 45c:	0e 94 ee 00 	call	0x1dc	; 0x1dc <_ZN5Pages9introPageEv>
 460:	2f ef       	ldi	r18, 0xFF	; 255
 462:	83 ec       	ldi	r24, 0xC3	; 195
 464:	99 e0       	ldi	r25, 0x09	; 9
 466:	21 50       	subi	r18, 0x01	; 1
 468:	80 40       	sbci	r24, 0x00	; 0
 46a:	90 40       	sbci	r25, 0x00	; 0
 46c:	e1 f7       	brne	.-8      	; 0x466 <main+0x48>
 46e:	00 c0       	rjmp	.+0      	; 0x470 <main+0x52>
 470:	00 00       	nop
		 lcd.gotoXY(1,5);
		 
		 lcd.displayInt(touchscreen.getPosX());
		 lcd.gotoXY(2,10);
		 lcd.displayInt(touchscreen.getPosY());
*/	page.chooseAction(touchscreen.getPosX(),touchscreen.getPosY());
 472:	8c e4       	ldi	r24, 0x4C	; 76
 474:	91 e0       	ldi	r25, 0x01	; 1
 476:	0e 94 94 02 	call	0x528	; 0x528 <_ZN11TouchScreen7getPosYEv>
 47a:	8c 01       	movw	r16, r24
 47c:	8c e4       	ldi	r24, 0x4C	; 76
 47e:	91 e0       	ldi	r25, 0x01	; 1
 480:	0e 94 90 02 	call	0x520	; 0x520 <_ZN11TouchScreen7getPosXEv>
 484:	a8 01       	movw	r20, r16
 486:	bc 01       	movw	r22, r24
 488:	ce 01       	movw	r24, r28
 48a:	01 96       	adiw	r24, 0x01	; 1
 48c:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <_ZN5Pages12chooseActionEjj>
 490:	e7 cf       	rjmp	.-50     	; 0x460 <main+0x42>

00000492 <__vector_14>:


}*/

ISR(TIMER0_COMPA_vect)
{
 492:	1f 92       	push	r1
 494:	0f 92       	push	r0
 496:	0f b6       	in	r0, 0x3f	; 63
 498:	0f 92       	push	r0
 49a:	11 24       	eor	r1, r1
 49c:	2f 93       	push	r18
 49e:	3f 93       	push	r19
 4a0:	4f 93       	push	r20
 4a2:	5f 93       	push	r21
 4a4:	6f 93       	push	r22
 4a6:	7f 93       	push	r23
 4a8:	8f 93       	push	r24
 4aa:	9f 93       	push	r25
 4ac:	af 93       	push	r26
 4ae:	bf 93       	push	r27
 4b0:	ef 93       	push	r30
 4b2:	ff 93       	push	r31

static uint16_t count = 0;
	if(count == 500)
 4b4:	80 91 4a 01 	lds	r24, 0x014A
 4b8:	90 91 4b 01 	lds	r25, 0x014B
 4bc:	84 3f       	cpi	r24, 0xF4	; 244
 4be:	91 40       	sbci	r25, 0x01	; 1
 4c0:	91 f4       	brne	.+36     	; 0x4e6 <__vector_14+0x54>
	{
	touchscreen.setPosX(readX());
 4c2:	0e 94 a0 00 	call	0x140	; 0x140 <_Z5readXv>
 4c6:	bc 01       	movw	r22, r24
 4c8:	8c e4       	ldi	r24, 0x4C	; 76
 4ca:	91 e0       	ldi	r25, 0x01	; 1
 4cc:	0e 94 98 02 	call	0x530	; 0x530 <_ZN11TouchScreen7setPosXEj>
	touchscreen.setPosY(readY());	
 4d0:	0e 94 b2 00 	call	0x164	; 0x164 <_Z5readYv>
 4d4:	bc 01       	movw	r22, r24
 4d6:	8c e4       	ldi	r24, 0x4C	; 76
 4d8:	91 e0       	ldi	r25, 0x01	; 1
 4da:	0e 94 9c 02 	call	0x538	; 0x538 <_ZN11TouchScreen7setPosYEj>
	count=0;
 4de:	10 92 4b 01 	sts	0x014B, r1
 4e2:	10 92 4a 01 	sts	0x014A, r1

	}
	count++;
 4e6:	80 91 4a 01 	lds	r24, 0x014A
 4ea:	90 91 4b 01 	lds	r25, 0x014B
 4ee:	01 96       	adiw	r24, 0x01	; 1
 4f0:	90 93 4b 01 	sts	0x014B, r25
 4f4:	80 93 4a 01 	sts	0x014A, r24
}
 4f8:	ff 91       	pop	r31
 4fa:	ef 91       	pop	r30
 4fc:	bf 91       	pop	r27
 4fe:	af 91       	pop	r26
 500:	9f 91       	pop	r25
 502:	8f 91       	pop	r24
 504:	7f 91       	pop	r23
 506:	6f 91       	pop	r22
 508:	5f 91       	pop	r21
 50a:	4f 91       	pop	r20
 50c:	3f 91       	pop	r19
 50e:	2f 91       	pop	r18
 510:	0f 90       	pop	r0
 512:	0f be       	out	0x3f, r0	; 63
 514:	0f 90       	pop	r0
 516:	1f 90       	pop	r1
 518:	18 95       	reti

0000051a <_ZN11TouchScreen4initEv>:
	ADCSRA |= (1<<ADPS0) | (1<<ADPS1) | (1<<ADPS2) | (1<<ADEN);	
}*/

void TouchScreen::init()
{
	adc_init();
 51a:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z8adc_initv>
 51e:	08 95       	ret

00000520 <_ZN11TouchScreen7getPosXEv>:
}

uint16_t TouchScreen::getPosX()
{
	return this->posX;
}
 520:	fc 01       	movw	r30, r24
 522:	80 81       	ld	r24, Z
 524:	91 81       	ldd	r25, Z+1	; 0x01
 526:	08 95       	ret

00000528 <_ZN11TouchScreen7getPosYEv>:

uint16_t TouchScreen::getPosY()
{
	return this->posY;
}
 528:	fc 01       	movw	r30, r24
 52a:	82 81       	ldd	r24, Z+2	; 0x02
 52c:	93 81       	ldd	r25, Z+3	; 0x03
 52e:	08 95       	ret

00000530 <_ZN11TouchScreen7setPosXEj>:

void TouchScreen::setPosX(uint16_t x)
{
	this->posX = x;
 530:	fc 01       	movw	r30, r24
 532:	71 83       	std	Z+1, r23	; 0x01
 534:	60 83       	st	Z, r22
 536:	08 95       	ret

00000538 <_ZN11TouchScreen7setPosYEj>:
}

void TouchScreen::setPosY(uint16_t y)
{
	this->posY = y;
 538:	fc 01       	movw	r30, r24
 53a:	73 83       	std	Z+3, r23	; 0x03
 53c:	62 83       	std	Z+2, r22	; 0x02
 53e:	08 95       	ret

00000540 <_Z10USART_Initj>:
#include <stdio.h>			// Conversions

void USART_Init( unsigned int ubrr)
{
	/*Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
 540:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
 544:	80 93 c4 00 	sts	0x00C4, r24
	//Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 548:	88 e1       	ldi	r24, 0x18	; 24
 54a:	80 93 c1 00 	sts	0x00C1, r24
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<USBS0)|(3<<UCSZ00);
 54e:	8e e0       	ldi	r24, 0x0E	; 14
 550:	80 93 c2 00 	sts	0x00C2, r24
 554:	08 95       	ret

00000556 <_Z14USART_Sendbyteh>:


void USART_Sendbyte( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
 556:	e0 ec       	ldi	r30, 0xC0	; 192
 558:	f0 e0       	ldi	r31, 0x00	; 0
 55a:	90 81       	ld	r25, Z
 55c:	95 ff       	sbrs	r25, 5
 55e:	fd cf       	rjmp	.-6      	; 0x55a <_Z14USART_Sendbyteh+0x4>
	;
	/* Put data into buffer, sends the data */
	UDR0 = char(data);
 560:	80 93 c6 00 	sts	0x00C6, r24
 564:	08 95       	ret

00000566 <_Z17USART_Send_stringPKc>:
}

void USART_Send_string(const char *str)
{
 566:	cf 93       	push	r28
 568:	df 93       	push	r29
 56a:	ec 01       	movw	r28, r24

	while (*str)
 56c:	88 81       	ld	r24, Y
 56e:	88 23       	and	r24, r24
 570:	31 f0       	breq	.+12     	; 0x57e <_Z17USART_Send_stringPKc+0x18>
 572:	21 96       	adiw	r28, 0x01	; 1
	USART_Sendbyte(*str++);
 574:	0e 94 ab 02 	call	0x556	; 0x556 <_Z14USART_Sendbyteh>
}

void USART_Send_string(const char *str)
{

	while (*str)
 578:	89 91       	ld	r24, Y+
 57a:	81 11       	cpse	r24, r1
 57c:	fb cf       	rjmp	.-10     	; 0x574 <_Z17USART_Send_stringPKc+0xe>
	USART_Sendbyte(*str++);
	
}
 57e:	df 91       	pop	r29
 580:	cf 91       	pop	r28
 582:	08 95       	ret

00000584 <_exit>:
 584:	f8 94       	cli

00000586 <__stop_program>:
 586:	ff cf       	rjmp	.-2      	; 0x586 <__stop_program>
