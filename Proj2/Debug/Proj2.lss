
Proj2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004e  00800100  00001484  00001518  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001484  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080014e  0080014e  00001566  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001566  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000210  00000000  00000000  000015c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000327c  00000000  00000000  000017d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a06  00000000  00000000  00004a4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a67  00000000  00000000  00005454  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000540  00000000  00000000  00005ebc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000009da  00000000  00000000  000063fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000026fa  00000000  00000000  00006dd6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001c0  00000000  00000000  000094d0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 b2 03 	jmp	0x764	; 0x764 <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e4 e8       	ldi	r30, 0x84	; 132
      7c:	f4 e1       	ldi	r31, 0x14	; 20
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ae 34       	cpi	r26, 0x4E	; 78
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	21 e0       	ldi	r18, 0x01	; 1
      8c:	ae e4       	ldi	r26, 0x4E	; 78
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a4 35       	cpi	r26, 0x54	; 84
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 74 03 	call	0x6e8	; 0x6e8 <main>
      9e:	0c 94 40 0a 	jmp	0x1480	; 0x1480 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z8adc_initv>:



void adc_init()
{
	ADMUX |= (1<<REFS0);
      a6:	ec e7       	ldi	r30, 0x7C	; 124
      a8:	f0 e0       	ldi	r31, 0x00	; 0
      aa:	80 81       	ld	r24, Z
      ac:	80 64       	ori	r24, 0x40	; 64
      ae:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADPS0) | (1<<ADPS1) | (1<<ADPS2) | (1<<ADEN);
      b0:	ea e7       	ldi	r30, 0x7A	; 122
      b2:	f0 e0       	ldi	r31, 0x00	; 0
      b4:	80 81       	ld	r24, Z
      b6:	87 68       	ori	r24, 0x87	; 135
      b8:	80 83       	st	Z, r24
      ba:	08 95       	ret

000000bc <_Z21timer0_interrupt_initv>:
}

void timer0_interrupt_init()
{
	
	TCCR0B |= 1<< CS01 | 1<<CS00;
      bc:	85 b5       	in	r24, 0x25	; 37
      be:	83 60       	ori	r24, 0x03	; 3
      c0:	85 bd       	out	0x25, r24	; 37
	//| 1<<WGM02;
	TIMSK0 = 1 << OCIE0A;
      c2:	82 e0       	ldi	r24, 0x02	; 2
      c4:	80 93 6e 00 	sts	0x006E, r24
      c8:	08 95       	ret

000000ca <_Z8adc_readh>:
//}

uint16_t adc_read(uint8_t ch)
{
	ch &= 0b00000111;
	ADMUX = (ADMUX & 0xF8)|ch;
      ca:	ec e7       	ldi	r30, 0x7C	; 124
      cc:	f0 e0       	ldi	r31, 0x00	; 0
      ce:	90 81       	ld	r25, Z
//	USART_Send_string("pt");
//}

uint16_t adc_read(uint8_t ch)
{
	ch &= 0b00000111;
      d0:	87 70       	andi	r24, 0x07	; 7
	ADMUX = (ADMUX & 0xF8)|ch;
      d2:	98 7f       	andi	r25, 0xF8	; 248
      d4:	98 2b       	or	r25, r24
      d6:	90 83       	st	Z, r25

	ADCSRA |= (1<<ADSC);
      d8:	ea e7       	ldi	r30, 0x7A	; 122
      da:	f0 e0       	ldi	r31, 0x00	; 0
      dc:	80 81       	ld	r24, Z
      de:	80 64       	ori	r24, 0x40	; 64
      e0:	80 83       	st	Z, r24
	
	while(ADCSRA & (1<<ADSC));
      e2:	80 81       	ld	r24, Z
      e4:	86 fd       	sbrc	r24, 6
      e6:	fd cf       	rjmp	.-6      	; 0xe2 <_Z8adc_readh+0x18>
	
	return (ADC);
      e8:	80 91 78 00 	lds	r24, 0x0078
      ec:	90 91 79 00 	lds	r25, 0x0079
}
      f0:	08 95       	ret

000000f2 <_Z5readXv>:

uint16_t readX()
{
	
	DDRC &= ~(1<<DDC0 | 1<<DDC2);
      f2:	87 b1       	in	r24, 0x07	; 7
      f4:	8a 7f       	andi	r24, 0xFA	; 250
      f6:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1<<DDC1 | 1<<DDC3);
      f8:	87 b1       	in	r24, 0x07	; 7
      fa:	8a 60       	ori	r24, 0x0A	; 10
      fc:	87 b9       	out	0x07, r24	; 7
	
	PORTC &= ~(1<<PORTC1);
      fe:	41 98       	cbi	0x08, 1	; 8
	PORTC |=  (1<<PORTC3);
     100:	43 9a       	sbi	0x08, 3	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     102:	8f e1       	ldi	r24, 0x1F	; 31
     104:	9e e4       	ldi	r25, 0x4E	; 78
     106:	01 97       	sbiw	r24, 0x01	; 1
     108:	f1 f7       	brne	.-4      	; 0x106 <_Z5readXv+0x14>
     10a:	00 c0       	rjmp	.+0      	; 0x10c <_Z5readXv+0x1a>
     10c:	00 00       	nop
	
	_delay_ms(5);
	
	return adc_read(0);
     10e:	80 e0       	ldi	r24, 0x00	; 0
     110:	0e 94 65 00 	call	0xca	; 0xca <_Z8adc_readh>
	
}
     114:	08 95       	ret

00000116 <_Z5readYv>:

uint16_t readY()
{
	DDRC &= ~(1<<DDC1 | 1<<DDC3);
     116:	87 b1       	in	r24, 0x07	; 7
     118:	85 7f       	andi	r24, 0xF5	; 245
     11a:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1<<DDC0 | 1<<DDC2);
     11c:	87 b1       	in	r24, 0x07	; 7
     11e:	85 60       	ori	r24, 0x05	; 5
     120:	87 b9       	out	0x07, r24	; 7
	
	PORTC &= ~(1<<PORTC0);
     122:	40 98       	cbi	0x08, 0	; 8
	PORTC |=  (1<<PORTC2);
     124:	42 9a       	sbi	0x08, 2	; 8
     126:	8f e1       	ldi	r24, 0x1F	; 31
     128:	9e e4       	ldi	r25, 0x4E	; 78
     12a:	01 97       	sbiw	r24, 0x01	; 1
     12c:	f1 f7       	brne	.-4      	; 0x12a <_Z5readYv+0x14>
     12e:	00 c0       	rjmp	.+0      	; 0x130 <_Z5readYv+0x1a>
     130:	00 00       	nop
	
	_delay_ms(5);
	
	return adc_read(1);
     132:	81 e0       	ldi	r24, 0x01	; 1
     134:	0e 94 65 00 	call	0xca	; 0xca <_Z8adc_readh>
}
     138:	08 95       	ret

0000013a <_Z15angleConversionjjjjj>:

uint16_t angleConversion(uint16_t touchPoint,uint16_t minTouch,uint16_t maxTouch,uint16_t minAngle,uint16_t maxAngle)
{
     13a:	8f 92       	push	r8
     13c:	9f 92       	push	r9
     13e:	af 92       	push	r10
     140:	bf 92       	push	r11
     142:	cf 92       	push	r12
     144:	df 92       	push	r13
     146:	ef 92       	push	r14
     148:	ff 92       	push	r15
     14a:	0f 93       	push	r16
     14c:	1f 93       	push	r17
     14e:	cf 93       	push	r28
     150:	df 93       	push	r29
     152:	7b 01       	movw	r14, r22
     154:	6a 01       	movw	r12, r20
     156:	e9 01       	movw	r28, r18
	touchPoint = 1024 - touchPoint;
     158:	60 e0       	ldi	r22, 0x00	; 0
     15a:	74 e0       	ldi	r23, 0x04	; 4
     15c:	9b 01       	movw	r18, r22
     15e:	28 1b       	sub	r18, r24
     160:	39 0b       	sbc	r19, r25
     162:	c9 01       	movw	r24, r18
	if(touchPoint < minTouch)
     164:	2e 15       	cp	r18, r14
     166:	3f 05       	cpc	r19, r15
     168:	28 f0       	brcs	.+10     	; 0x174 <_Z15angleConversionjjjjj+0x3a>
     16a:	42 17       	cp	r20, r18
     16c:	53 07       	cpc	r21, r19
     16e:	18 f4       	brcc	.+6      	; 0x176 <_Z15angleConversionjjjjj+0x3c>
     170:	ca 01       	movw	r24, r20
     172:	01 c0       	rjmp	.+2      	; 0x176 <_Z15angleConversionjjjjj+0x3c>
		touchPoint = minTouch;
     174:	c7 01       	movw	r24, r14
	else if(touchPoint > maxTouch)
		touchPoint = maxTouch;
	return (uint16_t)(((float)(touchPoint-minTouch))/(maxTouch-minTouch)*(maxAngle-minAngle)+minAngle);
     176:	bc 01       	movw	r22, r24
     178:	6e 19       	sub	r22, r14
     17a:	7f 09       	sbc	r23, r15
     17c:	80 e0       	ldi	r24, 0x00	; 0
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	0e 94 47 06 	call	0xc8e	; 0xc8e <__floatunsisf>
     184:	4b 01       	movw	r8, r22
     186:	5c 01       	movw	r10, r24
     188:	b6 01       	movw	r22, r12
     18a:	6e 19       	sub	r22, r14
     18c:	7f 09       	sbc	r23, r15
     18e:	80 e0       	ldi	r24, 0x00	; 0
     190:	90 e0       	ldi	r25, 0x00	; 0
     192:	0e 94 47 06 	call	0xc8e	; 0xc8e <__floatunsisf>
     196:	9b 01       	movw	r18, r22
     198:	ac 01       	movw	r20, r24
     19a:	c5 01       	movw	r24, r10
     19c:	b4 01       	movw	r22, r8
     19e:	0e 94 b3 05 	call	0xb66	; 0xb66 <__divsf3>
     1a2:	6b 01       	movw	r12, r22
     1a4:	7c 01       	movw	r14, r24
     1a6:	b8 01       	movw	r22, r16
     1a8:	6c 1b       	sub	r22, r28
     1aa:	7d 0b       	sbc	r23, r29
     1ac:	80 e0       	ldi	r24, 0x00	; 0
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	0e 94 47 06 	call	0xc8e	; 0xc8e <__floatunsisf>
     1b4:	9b 01       	movw	r18, r22
     1b6:	ac 01       	movw	r20, r24
     1b8:	c7 01       	movw	r24, r14
     1ba:	b6 01       	movw	r22, r12
     1bc:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__mulsf3>
     1c0:	6b 01       	movw	r12, r22
     1c2:	7c 01       	movw	r14, r24
     1c4:	be 01       	movw	r22, r28
     1c6:	80 e0       	ldi	r24, 0x00	; 0
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	0e 94 47 06 	call	0xc8e	; 0xc8e <__floatunsisf>
     1ce:	9b 01       	movw	r18, r22
     1d0:	ac 01       	movw	r20, r24
     1d2:	c7 01       	movw	r24, r14
     1d4:	b6 01       	movw	r22, r12
     1d6:	0e 94 4f 05 	call	0xa9e	; 0xa9e <__addsf3>
     1da:	0e 94 1b 06 	call	0xc36	; 0xc36 <__fixunssfsi>
     1de:	cb 01       	movw	r24, r22
     1e0:	df 91       	pop	r29
     1e2:	cf 91       	pop	r28
     1e4:	1f 91       	pop	r17
     1e6:	0f 91       	pop	r16
     1e8:	ff 90       	pop	r15
     1ea:	ef 90       	pop	r14
     1ec:	df 90       	pop	r13
     1ee:	cf 90       	pop	r12
     1f0:	bf 90       	pop	r11
     1f2:	af 90       	pop	r10
     1f4:	9f 90       	pop	r9
     1f6:	8f 90       	pop	r8
     1f8:	08 95       	ret

000001fa <_ZN5PagesC1Ev>:
		_delay_ms(500);
		this->servo.setDegree(angle);
	}
}

 Pages::Pages()
     1fa:	cf 93       	push	r28
     1fc:	df 93       	push	r29
     1fe:	ec 01       	movw	r28, r24
     200:	05 96       	adiw	r24, 0x05	; 5
     202:	0e 94 8d 04 	call	0x91a	; 0x91a <_ZN12StepperMotorC1Ev>
{
	this->lcd.init_lcd();
     206:	22 96       	adiw	r28, 0x02	; 2
     208:	ce 01       	movw	r24, r28
     20a:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <_ZN10LcdDisplay8init_lcdEv>
	this->lcd.clearDisplay();
     20e:	ce 01       	movw	r24, r28
     210:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <_ZN10LcdDisplay12clearDisplayEv>
	
}
     214:	df 91       	pop	r29
     216:	cf 91       	pop	r28
     218:	08 95       	ret

0000021a <_ZN5Pages9dispPage1Ev>:

void Pages::dispPage1()
{	
     21a:	cf 93       	push	r28
     21c:	df 93       	push	r29
	this->pageNo = 1;
     21e:	ec 01       	movw	r28, r24
     220:	81 e0       	ldi	r24, 0x01	; 1
     222:	90 e0       	ldi	r25, 0x00	; 0
     224:	89 93       	st	Y+, r24
     226:	99 93       	st	Y+, r25
	this->lcd.clearDisplay();
     228:	ce 01       	movw	r24, r28
     22a:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <_ZN10LcdDisplay12clearDisplayEv>
	this->lcd.displayString("Servo");
     22e:	60 e0       	ldi	r22, 0x00	; 0
     230:	71 e0       	ldi	r23, 0x01	; 1
     232:	ce 01       	movw	r24, r28
     234:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <_ZN10LcdDisplay13displayStringEPKc>

	this->lcd.gotoXY(2,10);
     238:	4a e0       	ldi	r20, 0x0A	; 10
     23a:	50 e0       	ldi	r21, 0x00	; 0
     23c:	62 e0       	ldi	r22, 0x02	; 2
     23e:	ce 01       	movw	r24, r28
     240:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("Stepper");
     244:	66 e0       	ldi	r22, 0x06	; 6
     246:	71 e0       	ldi	r23, 0x01	; 1
     248:	ce 01       	movw	r24, r28
     24a:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <_ZN10LcdDisplay13displayStringEPKc>
//	_delay_ms(500);
}
     24e:	df 91       	pop	r29
     250:	cf 91       	pop	r28
     252:	08 95       	ret

00000254 <_ZN5Pages9introPageEv>:
			this->page4Action(posx,posy);
	}
}

void Pages::introPage()
{
     254:	0f 93       	push	r16
     256:	1f 93       	push	r17
     258:	cf 93       	push	r28
     25a:	df 93       	push	r29
     25c:	8c 01       	movw	r16, r24
	lcd.clearDisplay();
     25e:	ec 01       	movw	r28, r24
     260:	22 96       	adiw	r28, 0x02	; 2
     262:	ce 01       	movw	r24, r28
     264:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <_ZN10LcdDisplay12clearDisplayEv>
	lcd.gotoXY(1,4)	;
     268:	44 e0       	ldi	r20, 0x04	; 4
     26a:	50 e0       	ldi	r21, 0x00	; 0
     26c:	61 e0       	ldi	r22, 0x01	; 1
     26e:	ce 01       	movw	r24, r28
     270:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <_ZN10LcdDisplay6gotoXYEhj>
	lcd.displayString("Welcome to ");
     274:	6e e0       	ldi	r22, 0x0E	; 14
     276:	71 e0       	ldi	r23, 0x01	; 1
     278:	ce 01       	movw	r24, r28
     27a:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <_ZN10LcdDisplay13displayStringEPKc>
	lcd.gotoXY(2,4)	;
     27e:	44 e0       	ldi	r20, 0x04	; 4
     280:	50 e0       	ldi	r21, 0x00	; 0
     282:	62 e0       	ldi	r22, 0x02	; 2
     284:	ce 01       	movw	r24, r28
     286:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <_ZN10LcdDisplay6gotoXYEhj>
	lcd.displayString("Johny's Proj");
     28a:	6a e1       	ldi	r22, 0x1A	; 26
     28c:	71 e0       	ldi	r23, 0x01	; 1
     28e:	ce 01       	movw	r24, r28
     290:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <_ZN10LcdDisplay13displayStringEPKc>
     294:	2f ef       	ldi	r18, 0xFF	; 255
     296:	87 ea       	ldi	r24, 0xA7	; 167
     298:	91 e6       	ldi	r25, 0x61	; 97
     29a:	21 50       	subi	r18, 0x01	; 1
     29c:	80 40       	sbci	r24, 0x00	; 0
     29e:	90 40       	sbci	r25, 0x00	; 0
     2a0:	e1 f7       	brne	.-8      	; 0x29a <_ZN5Pages9introPageEv+0x46>
     2a2:	00 c0       	rjmp	.+0      	; 0x2a4 <_ZN5Pages9introPageEv+0x50>
     2a4:	00 00       	nop
	_delay_ms(2000);
	this->dispPage1();
     2a6:	c8 01       	movw	r24, r16
     2a8:	0e 94 0d 01 	call	0x21a	; 0x21a <_ZN5Pages9dispPage1Ev>
}
     2ac:	df 91       	pop	r29
     2ae:	cf 91       	pop	r28
     2b0:	1f 91       	pop	r17
     2b2:	0f 91       	pop	r16
     2b4:	08 95       	ret

000002b6 <_ZN5Pages9dispPage2Ev>:
	this->lcd.displayString("Stepper");
//	_delay_ms(500);
}

void Pages::dispPage2()
{
     2b6:	cf 93       	push	r28
     2b8:	df 93       	push	r29
	this->pageNo = 2;
     2ba:	ec 01       	movw	r28, r24
     2bc:	82 e0       	ldi	r24, 0x02	; 2
     2be:	90 e0       	ldi	r25, 0x00	; 0
     2c0:	89 93       	st	Y+, r24
     2c2:	99 93       	st	Y+, r25
	this->lcd.clearDisplay();
     2c4:	ce 01       	movw	r24, r28
     2c6:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <_ZN10LcdDisplay12clearDisplayEv>
	this->lcd.displayString("CW");
     2ca:	6d e2       	ldi	r22, 0x2D	; 45
     2cc:	71 e0       	ldi	r23, 0x01	; 1
     2ce:	ce 01       	movw	r24, r28
     2d0:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(2,7);
     2d4:	47 e0       	ldi	r20, 0x07	; 7
     2d6:	50 e0       	ldi	r21, 0x00	; 0
     2d8:	62 e0       	ldi	r22, 0x02	; 2
     2da:	ce 01       	movw	r24, r28
     2dc:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("Home");
     2e0:	67 e2       	ldi	r22, 0x27	; 39
     2e2:	71 e0       	ldi	r23, 0x01	; 1
     2e4:	ce 01       	movw	r24, r28
     2e6:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(1,14);
     2ea:	4e e0       	ldi	r20, 0x0E	; 14
     2ec:	50 e0       	ldi	r21, 0x00	; 0
     2ee:	61 e0       	ldi	r22, 0x01	; 1
     2f0:	ce 01       	movw	r24, r28
     2f2:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("CCW");
     2f6:	6c e2       	ldi	r22, 0x2C	; 44
     2f8:	71 e0       	ldi	r23, 0x01	; 1
     2fa:	ce 01       	movw	r24, r28
     2fc:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <_ZN10LcdDisplay13displayStringEPKc>
//	_delay_ms(500);

}
     300:	df 91       	pop	r29
     302:	cf 91       	pop	r28
     304:	08 95       	ret

00000306 <_ZN5Pages9dispPage4Ev>:

void Pages::dispPage4()
{
     306:	cf 93       	push	r28
     308:	df 93       	push	r29
	this->pageNo = 4;
     30a:	ec 01       	movw	r28, r24
     30c:	84 e0       	ldi	r24, 0x04	; 4
     30e:	90 e0       	ldi	r25, 0x00	; 0
     310:	89 93       	st	Y+, r24
     312:	99 93       	st	Y+, r25
	this->lcd.clearDisplay();
     314:	ce 01       	movw	r24, r28
     316:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <_ZN10LcdDisplay12clearDisplayEv>
	this->lcd.displayString("Servo");
     31a:	60 e0       	ldi	r22, 0x00	; 0
     31c:	71 e0       	ldi	r23, 0x01	; 1
     31e:	ce 01       	movw	r24, r28
     320:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(1,13);
     324:	4d e0       	ldi	r20, 0x0D	; 13
     326:	50 e0       	ldi	r21, 0x00	; 0
     328:	61 e0       	ldi	r22, 0x01	; 1
     32a:	ce 01       	movw	r24, r28
     32c:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("Home");
     330:	67 e2       	ldi	r22, 0x27	; 39
     332:	71 e0       	ldi	r23, 0x01	; 1
     334:	ce 01       	movw	r24, r28
     336:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(2,1);
     33a:	41 e0       	ldi	r20, 0x01	; 1
     33c:	50 e0       	ldi	r21, 0x00	; 0
     33e:	62 e0       	ldi	r22, 0x02	; 2
     340:	ce 01       	movw	r24, r28
     342:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("0 - - -");
     346:	60 e3       	ldi	r22, 0x30	; 48
     348:	71 e0       	ldi	r23, 0x01	; 1
     34a:	ce 01       	movw	r24, r28
     34c:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(2,9);
     350:	49 e0       	ldi	r20, 0x09	; 9
     352:	50 e0       	ldi	r21, 0x00	; 0
     354:	62 e0       	ldi	r22, 0x02	; 2
     356:	ce 01       	movw	r24, r28
     358:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("- - -160");
     35c:	68 e3       	ldi	r22, 0x38	; 56
     35e:	71 e0       	ldi	r23, 0x01	; 1
     360:	ce 01       	movw	r24, r28
     362:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <_ZN10LcdDisplay13displayStringEPKc>
//	_delay_ms(500);
}
     366:	df 91       	pop	r29
     368:	cf 91       	pop	r28
     36a:	08 95       	ret

0000036c <_ZN5Pages11page1ActionEjj>:
	_delay_ms(2000);
	this->dispPage1();
}

void Pages::page1Action(uint16_t posx,uint16_t posy)
{
     36c:	cf 93       	push	r28
     36e:	df 93       	push	r29
     370:	ec 01       	movw	r28, r24
//	_delay_ms(500);
}

bool Pages::range(int num,int max,int min)
{
	return (num<max && num>min)?true:false;
     372:	9b 01       	movw	r18, r22
     374:	21 53       	subi	r18, 0x31	; 49
     376:	32 40       	sbci	r19, 0x02	; 2
     378:	25 38       	cpi	r18, 0x85	; 133
     37a:	31 40       	sbci	r19, 0x01	; 1
     37c:	30 f4       	brcc	.+12     	; 0x38a <_ZN5Pages11page1ActionEjj+0x1e>
     37e:	ca 01       	movw	r24, r20
     380:	81 52       	subi	r24, 0x21	; 33
     382:	93 40       	sbci	r25, 0x03	; 3
     384:	85 39       	cpi	r24, 0x95	; 149
     386:	91 05       	cpc	r25, r1
     388:	58 f0       	brcs	.+22     	; 0x3a0 <_ZN5Pages11page1ActionEjj+0x34>
     38a:	65 56       	subi	r22, 0x65	; 101
     38c:	71 09       	sbc	r23, r1
     38e:	6d 35       	cpi	r22, 0x5D	; 93
     390:	71 40       	sbci	r23, 0x01	; 1
     392:	18 f5       	brcc	.+70     	; 0x3da <_ZN5Pages11page1ActionEjj+0x6e>
     394:	4b 58       	subi	r20, 0x8B	; 139
     396:	52 40       	sbci	r21, 0x02	; 2
     398:	4b 38       	cpi	r20, 0x8B	; 139
     39a:	51 05       	cpc	r21, r1
     39c:	f0 f4       	brcc	.+60     	; 0x3da <_ZN5Pages11page1ActionEjj+0x6e>
     39e:	11 c0       	rjmp	.+34     	; 0x3c2 <_ZN5Pages11page1ActionEjj+0x56>
void Pages::page1Action(uint16_t posx,uint16_t posy)
{
	if(range(posx,950,560) && range(posy,950,800))
	{
		
		dispPage4();
     3a0:	ce 01       	movw	r24, r28
     3a2:	0e 94 83 01 	call	0x306	; 0x306 <_ZN5Pages9dispPage4Ev>
		this->servo.initAttachTimer();
     3a6:	ce 01       	movw	r24, r28
     3a8:	03 96       	adiw	r24, 0x03	; 3
     3aa:	0e 94 30 04 	call	0x860	; 0x860 <_ZN5Servo15initAttachTimerEv>
     3ae:	2f ef       	ldi	r18, 0xFF	; 255
     3b0:	89 e6       	ldi	r24, 0x69	; 105
     3b2:	98 e1       	ldi	r25, 0x18	; 24
     3b4:	21 50       	subi	r18, 0x01	; 1
     3b6:	80 40       	sbci	r24, 0x00	; 0
     3b8:	90 40       	sbci	r25, 0x00	; 0
     3ba:	e1 f7       	brne	.-8      	; 0x3b4 <_ZN5Pages11page1ActionEjj+0x48>
     3bc:	00 c0       	rjmp	.+0      	; 0x3be <_ZN5Pages11page1ActionEjj+0x52>
     3be:	00 00       	nop
     3c0:	0c c0       	rjmp	.+24     	; 0x3da <_ZN5Pages11page1ActionEjj+0x6e>
		_delay_ms(500);
	}
	else if(range(posx,450,100) && range(posy,790,650))
	{
		dispPage2();
     3c2:	ce 01       	movw	r24, r28
     3c4:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <_ZN5Pages9dispPage2Ev>
     3c8:	2f ef       	ldi	r18, 0xFF	; 255
     3ca:	89 e6       	ldi	r24, 0x69	; 105
     3cc:	98 e1       	ldi	r25, 0x18	; 24
     3ce:	21 50       	subi	r18, 0x01	; 1
     3d0:	80 40       	sbci	r24, 0x00	; 0
     3d2:	90 40       	sbci	r25, 0x00	; 0
     3d4:	e1 f7       	brne	.-8      	; 0x3ce <_ZN5Pages11page1ActionEjj+0x62>
     3d6:	00 c0       	rjmp	.+0      	; 0x3d8 <_ZN5Pages11page1ActionEjj+0x6c>
     3d8:	00 00       	nop
		_delay_ms(500);
	}
}
     3da:	df 91       	pop	r29
     3dc:	cf 91       	pop	r28
     3de:	08 95       	ret

000003e0 <_ZN5Pages11page4ActionEjj>:
		_delay_ms(1000);
	}
}

void Pages::page4Action(uint16_t posx,uint16_t posy)
{
     3e0:	ef 92       	push	r14
     3e2:	ff 92       	push	r15
     3e4:	0f 93       	push	r16
     3e6:	1f 93       	push	r17
     3e8:	cf 93       	push	r28
     3ea:	df 93       	push	r29
     3ec:	ec 01       	movw	r28, r24
     3ee:	fb 01       	movw	r30, r22
//	_delay_ms(500);
}

bool Pages::range(int num,int max,int min)
{
	return (num<max && num>min)?true:false;
     3f0:	9b 01       	movw	r18, r22
     3f2:	25 56       	subi	r18, 0x65	; 101
     3f4:	31 09       	sbc	r19, r1
     3f6:	2d 30       	cpi	r18, 0x0D	; 13
     3f8:	31 40       	sbci	r19, 0x01	; 1
     3fa:	30 f4       	brcc	.+12     	; 0x408 <_ZN5Pages11page4ActionEjj+0x28>
     3fc:	ca 01       	movw	r24, r20
     3fe:	81 52       	subi	r24, 0x21	; 33
     400:	93 40       	sbci	r25, 0x03	; 3
     402:	85 39       	cpi	r24, 0x95	; 149
     404:	91 05       	cpc	r25, r1
     406:	68 f0       	brcs	.+26     	; 0x422 <_ZN5Pages11page4ActionEjj+0x42>
     408:	cf 01       	movw	r24, r30
     40a:	83 58       	subi	r24, 0x83	; 131
     40c:	91 09       	sbc	r25, r1
     40e:	81 30       	cpi	r24, 0x01	; 1
     410:	93 40       	sbci	r25, 0x03	; 3
     412:	08 f0       	brcs	.+2      	; 0x416 <_ZN5Pages11page4ActionEjj+0x36>
     414:	42 c0       	rjmp	.+132    	; 0x49a <_ZN5Pages11page4ActionEjj+0xba>
     416:	4b 58       	subi	r20, 0x8B	; 139
     418:	52 40       	sbci	r21, 0x02	; 2
     41a:	4b 38       	cpi	r20, 0x8B	; 139
     41c:	51 05       	cpc	r21, r1
     41e:	e8 f5       	brcc	.+122    	; 0x49a <_ZN5Pages11page4ActionEjj+0xba>
     420:	11 c0       	rjmp	.+34     	; 0x444 <_ZN5Pages11page4ActionEjj+0x64>

void Pages::page4Action(uint16_t posx,uint16_t posy)
{
	if(range(posx,370,100) && range(posy,950,800))
	{
		dispPage1();
     422:	ce 01       	movw	r24, r28
     424:	0e 94 0d 01 	call	0x21a	; 0x21a <_ZN5Pages9dispPage1Ev>
     428:	8f ef       	ldi	r24, 0xFF	; 255
     42a:	99 e6       	ldi	r25, 0x69	; 105
     42c:	28 e1       	ldi	r18, 0x18	; 24
     42e:	81 50       	subi	r24, 0x01	; 1
     430:	90 40       	sbci	r25, 0x00	; 0
     432:	20 40       	sbci	r18, 0x00	; 0
     434:	e1 f7       	brne	.-8      	; 0x42e <_ZN5Pages11page4ActionEjj+0x4e>
     436:	00 c0       	rjmp	.+0      	; 0x438 <_ZN5Pages11page4ActionEjj+0x58>
     438:	00 00       	nop
		_delay_ms(500);
		this->servo.stopTimer();
     43a:	ce 01       	movw	r24, r28
     43c:	03 96       	adiw	r24, 0x03	; 3
     43e:	0e 94 25 04 	call	0x84a	; 0x84a <_ZN5Servo9stopTimerEv>
     442:	2b c0       	rjmp	.+86     	; 0x49a <_ZN5Pages11page4ActionEjj+0xba>
	}
	else if(range(posx,900,130) && range(posy,790,650))
	{
		
		uint16_t angle = angleConversion(posx,165,870,0,160);
     444:	00 ea       	ldi	r16, 0xA0	; 160
     446:	10 e0       	ldi	r17, 0x00	; 0
     448:	20 e0       	ldi	r18, 0x00	; 0
     44a:	30 e0       	ldi	r19, 0x00	; 0
     44c:	46 e6       	ldi	r20, 0x66	; 102
     44e:	53 e0       	ldi	r21, 0x03	; 3
     450:	65 ea       	ldi	r22, 0xA5	; 165
     452:	70 e0       	ldi	r23, 0x00	; 0
     454:	cf 01       	movw	r24, r30
     456:	0e 94 9d 00 	call	0x13a	; 0x13a <_Z15angleConversionjjjjj>
     45a:	8c 01       	movw	r16, r24
		dispPage4();
     45c:	ce 01       	movw	r24, r28
     45e:	0e 94 83 01 	call	0x306	; 0x306 <_ZN5Pages9dispPage4Ev>
		
		this->lcd.gotoXY(1,9);
     462:	7e 01       	movw	r14, r28
     464:	82 e0       	ldi	r24, 0x02	; 2
     466:	e8 0e       	add	r14, r24
     468:	f1 1c       	adc	r15, r1
     46a:	49 e0       	ldi	r20, 0x09	; 9
     46c:	50 e0       	ldi	r21, 0x00	; 0
     46e:	61 e0       	ldi	r22, 0x01	; 1
     470:	c7 01       	movw	r24, r14
     472:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <_ZN10LcdDisplay6gotoXYEhj>
		
		this->lcd.displayInt(angle);
     476:	b8 01       	movw	r22, r16
     478:	c7 01       	movw	r24, r14
     47a:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <_ZN10LcdDisplay10displayIntEi>
     47e:	9f ef       	ldi	r25, 0xFF	; 255
     480:	29 e6       	ldi	r18, 0x69	; 105
     482:	88 e1       	ldi	r24, 0x18	; 24
     484:	91 50       	subi	r25, 0x01	; 1
     486:	20 40       	sbci	r18, 0x00	; 0
     488:	80 40       	sbci	r24, 0x00	; 0
     48a:	e1 f7       	brne	.-8      	; 0x484 <_ZN5Pages11page4ActionEjj+0xa4>
     48c:	00 c0       	rjmp	.+0      	; 0x48e <_ZN5Pages11page4ActionEjj+0xae>
     48e:	00 00       	nop

		_delay_ms(500);
		this->servo.setDegree(angle);
     490:	b8 01       	movw	r22, r16
     492:	ce 01       	movw	r24, r28
     494:	03 96       	adiw	r24, 0x03	; 3
     496:	0e 94 09 04 	call	0x812	; 0x812 <_ZN5Servo9setDegreeEj>
	}
}
     49a:	df 91       	pop	r29
     49c:	cf 91       	pop	r28
     49e:	1f 91       	pop	r17
     4a0:	0f 91       	pop	r16
     4a2:	ff 90       	pop	r15
     4a4:	ef 90       	pop	r14
     4a6:	08 95       	ret

000004a8 <_ZN5Pages9dispPage3Ev>:
}



void Pages::dispPage3()
{
     4a8:	cf 93       	push	r28
     4aa:	df 93       	push	r29
	this->pageNo = 3;
     4ac:	ec 01       	movw	r28, r24
     4ae:	83 e0       	ldi	r24, 0x03	; 3
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	89 93       	st	Y+, r24
     4b4:	99 93       	st	Y+, r25
	this->lcd.clearDisplay();
     4b6:	ce 01       	movw	r24, r28
     4b8:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <_ZN10LcdDisplay12clearDisplayEv>
	this->lcd.displayString("Stepper");
     4bc:	66 e0       	ldi	r22, 0x06	; 6
     4be:	71 e0       	ldi	r23, 0x01	; 1
     4c0:	ce 01       	movw	r24, r28
     4c2:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(1,13);
     4c6:	4d e0       	ldi	r20, 0x0D	; 13
     4c8:	50 e0       	ldi	r21, 0x00	; 0
     4ca:	61 e0       	ldi	r22, 0x01	; 1
     4cc:	ce 01       	movw	r24, r28
     4ce:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("Home");
     4d2:	67 e2       	ldi	r22, 0x27	; 39
     4d4:	71 e0       	ldi	r23, 0x01	; 1
     4d6:	ce 01       	movw	r24, r28
     4d8:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <_ZN10LcdDisplay13displayStringEPKc>

	this->lcd.gotoXY(2,1);
     4dc:	41 e0       	ldi	r20, 0x01	; 1
     4de:	50 e0       	ldi	r21, 0x00	; 0
     4e0:	62 e0       	ldi	r22, 0x02	; 2
     4e2:	ce 01       	movw	r24, r28
     4e4:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("0 - - -");
     4e8:	60 e3       	ldi	r22, 0x30	; 48
     4ea:	71 e0       	ldi	r23, 0x01	; 1
     4ec:	ce 01       	movw	r24, r28
     4ee:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(2,9);
     4f2:	49 e0       	ldi	r20, 0x09	; 9
     4f4:	50 e0       	ldi	r21, 0x00	; 0
     4f6:	62 e0       	ldi	r22, 0x02	; 2
     4f8:	ce 01       	movw	r24, r28
     4fa:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("- - -359");
     4fe:	61 e4       	ldi	r22, 0x41	; 65
     500:	71 e0       	ldi	r23, 0x01	; 1
     502:	ce 01       	movw	r24, r28
     504:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <_ZN10LcdDisplay13displayStringEPKc>
	
}
     508:	df 91       	pop	r29
     50a:	cf 91       	pop	r28
     50c:	08 95       	ret

0000050e <_ZN5Pages11page2ActionEjj>:
		_delay_ms(500);
	}
}

void Pages::page2Action(uint16_t posx,uint16_t posy)
{
     50e:	cf 93       	push	r28
     510:	df 93       	push	r29
     512:	ec 01       	movw	r28, r24
//	_delay_ms(500);
}

bool Pages::range(int num,int max,int min)
{
	return (num<max && num>min)?true:false;
     514:	9b 01       	movw	r18, r22
     516:	21 52       	subi	r18, 0x21	; 33
     518:	33 40       	sbci	r19, 0x03	; 3
     51a:	25 39       	cpi	r18, 0x95	; 149
     51c:	31 05       	cpc	r19, r1
     51e:	30 f4       	brcc	.+12     	; 0x52c <_ZN5Pages11page2ActionEjj+0x1e>
     520:	ca 01       	movw	r24, r20
     522:	81 52       	subi	r24, 0x21	; 33
     524:	93 40       	sbci	r25, 0x03	; 3
     526:	85 39       	cpi	r24, 0x95	; 149
     528:	91 05       	cpc	r25, r1
     52a:	b8 f0       	brcs	.+46     	; 0x55a <_ZN5Pages11page2ActionEjj+0x4c>
     52c:	cb 01       	movw	r24, r22
     52e:	85 56       	subi	r24, 0x65	; 101
     530:	91 09       	sbc	r25, r1
     532:	83 3b       	cpi	r24, 0xB3	; 179
     534:	91 05       	cpc	r25, r1
     536:	30 f4       	brcc	.+12     	; 0x544 <_ZN5Pages11page2ActionEjj+0x36>
     538:	ca 01       	movw	r24, r20
     53a:	81 52       	subi	r24, 0x21	; 33
     53c:	93 40       	sbci	r25, 0x03	; 3
     53e:	85 39       	cpi	r24, 0x95	; 149
     540:	91 05       	cpc	r25, r1
     542:	e0 f0       	brcs	.+56     	; 0x57c <_ZN5Pages11page2ActionEjj+0x6e>
     544:	61 59       	subi	r22, 0x91	; 145
     546:	71 40       	sbci	r23, 0x01	; 1
     548:	63 30       	cpi	r22, 0x03	; 3
     54a:	71 40       	sbci	r23, 0x01	; 1
     54c:	a0 f5       	brcc	.+104    	; 0x5b6 <_ZN5Pages11page2ActionEjj+0xa8>
     54e:	4b 58       	subi	r20, 0x8B	; 139
     550:	52 40       	sbci	r21, 0x02	; 2
     552:	4b 38       	cpi	r20, 0x8B	; 139
     554:	51 05       	cpc	r21, r1
     556:	78 f5       	brcc	.+94     	; 0x5b6 <_ZN5Pages11page2ActionEjj+0xa8>
     558:	22 c0       	rjmp	.+68     	; 0x59e <_ZN5Pages11page2ActionEjj+0x90>

void Pages::page2Action(uint16_t posx,uint16_t posy)
{
	if(range(posx,950,800) && range(posy,950,800))
	{
		this->stepper.setForward();
     55a:	ce 01       	movw	r24, r28
     55c:	05 96       	adiw	r24, 0x05	; 5
     55e:	0e 94 cd 04 	call	0x99a	; 0x99a <_ZN12StepperMotor10setForwardEv>
		dispPage3();
     562:	ce 01       	movw	r24, r28
     564:	0e 94 54 02 	call	0x4a8	; 0x4a8 <_ZN5Pages9dispPage3Ev>
     568:	8f ef       	ldi	r24, 0xFF	; 255
     56a:	99 e6       	ldi	r25, 0x69	; 105
     56c:	28 e1       	ldi	r18, 0x18	; 24
     56e:	81 50       	subi	r24, 0x01	; 1
     570:	90 40       	sbci	r25, 0x00	; 0
     572:	20 40       	sbci	r18, 0x00	; 0
     574:	e1 f7       	brne	.-8      	; 0x56e <_ZN5Pages11page2ActionEjj+0x60>
     576:	00 c0       	rjmp	.+0      	; 0x578 <_ZN5Pages11page2ActionEjj+0x6a>
     578:	00 00       	nop
     57a:	1d c0       	rjmp	.+58     	; 0x5b6 <_ZN5Pages11page2ActionEjj+0xa8>
		
	}
	else if(range(posx,280,100) && range(posy,950,800))
	{
		
		this->stepper.setReverse();
     57c:	ce 01       	movw	r24, r28
     57e:	05 96       	adiw	r24, 0x05	; 5
     580:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <_ZN12StepperMotor10setReverseEv>
		dispPage3();
     584:	ce 01       	movw	r24, r28
     586:	0e 94 54 02 	call	0x4a8	; 0x4a8 <_ZN5Pages9dispPage3Ev>
     58a:	8f ef       	ldi	r24, 0xFF	; 255
     58c:	99 e6       	ldi	r25, 0x69	; 105
     58e:	28 e1       	ldi	r18, 0x18	; 24
     590:	81 50       	subi	r24, 0x01	; 1
     592:	90 40       	sbci	r25, 0x00	; 0
     594:	20 40       	sbci	r18, 0x00	; 0
     596:	e1 f7       	brne	.-8      	; 0x590 <_ZN5Pages11page2ActionEjj+0x82>
     598:	00 c0       	rjmp	.+0      	; 0x59a <_ZN5Pages11page2ActionEjj+0x8c>
     59a:	00 00       	nop
     59c:	0c c0       	rjmp	.+24     	; 0x5b6 <_ZN5Pages11page2ActionEjj+0xa8>
		_delay_ms(500);
		
	}
	else if(range(posx,660,400) && range(posy,790,650))
	{
		dispPage1();
     59e:	ce 01       	movw	r24, r28
     5a0:	0e 94 0d 01 	call	0x21a	; 0x21a <_ZN5Pages9dispPage1Ev>
     5a4:	8f ef       	ldi	r24, 0xFF	; 255
     5a6:	99 e6       	ldi	r25, 0x69	; 105
     5a8:	28 e1       	ldi	r18, 0x18	; 24
     5aa:	81 50       	subi	r24, 0x01	; 1
     5ac:	90 40       	sbci	r25, 0x00	; 0
     5ae:	20 40       	sbci	r18, 0x00	; 0
     5b0:	e1 f7       	brne	.-8      	; 0x5aa <_ZN5Pages11page2ActionEjj+0x9c>
     5b2:	00 c0       	rjmp	.+0      	; 0x5b4 <_ZN5Pages11page2ActionEjj+0xa6>
     5b4:	00 00       	nop
		_delay_ms(500);
		
	}
	
	
}
     5b6:	df 91       	pop	r29
     5b8:	cf 91       	pop	r28
     5ba:	08 95       	ret

000005bc <_ZN5Pages11page3ActionEjj>:

void Pages::page3Action(uint16_t posx,uint16_t posy)
{
     5bc:	ef 92       	push	r14
     5be:	ff 92       	push	r15
     5c0:	0f 93       	push	r16
     5c2:	1f 93       	push	r17
     5c4:	cf 93       	push	r28
     5c6:	df 93       	push	r29
     5c8:	ec 01       	movw	r28, r24
     5ca:	fb 01       	movw	r30, r22
//	_delay_ms(500);
}

bool Pages::range(int num,int max,int min)
{
	return (num<max && num>min)?true:false;
     5cc:	9b 01       	movw	r18, r22
     5ce:	25 56       	subi	r18, 0x65	; 101
     5d0:	31 09       	sbc	r19, r1
     5d2:	2d 30       	cpi	r18, 0x0D	; 13
     5d4:	31 40       	sbci	r19, 0x01	; 1
     5d6:	30 f4       	brcc	.+12     	; 0x5e4 <_ZN5Pages11page3ActionEjj+0x28>
     5d8:	ca 01       	movw	r24, r20
     5da:	81 52       	subi	r24, 0x21	; 33
     5dc:	93 40       	sbci	r25, 0x03	; 3
     5de:	85 39       	cpi	r24, 0x95	; 149
     5e0:	91 05       	cpc	r25, r1
     5e2:	70 f0       	brcs	.+28     	; 0x600 <_ZN5Pages11page3ActionEjj+0x44>
     5e4:	cf 01       	movw	r24, r30
     5e6:	83 58       	subi	r24, 0x83	; 131
     5e8:	91 09       	sbc	r25, r1
     5ea:	81 30       	cpi	r24, 0x01	; 1
     5ec:	93 40       	sbci	r25, 0x03	; 3
     5ee:	08 f0       	brcs	.+2      	; 0x5f2 <_ZN5Pages11page3ActionEjj+0x36>
     5f0:	4a c0       	rjmp	.+148    	; 0x686 <_ZN5Pages11page3ActionEjj+0xca>
     5f2:	4b 58       	subi	r20, 0x8B	; 139
     5f4:	52 40       	sbci	r21, 0x02	; 2
     5f6:	4b 38       	cpi	r20, 0x8B	; 139
     5f8:	51 05       	cpc	r21, r1
     5fa:	08 f0       	brcs	.+2      	; 0x5fe <_ZN5Pages11page3ActionEjj+0x42>
     5fc:	44 c0       	rjmp	.+136    	; 0x686 <_ZN5Pages11page3ActionEjj+0xca>
     5fe:	0d c0       	rjmp	.+26     	; 0x61a <_ZN5Pages11page3ActionEjj+0x5e>

void Pages::page3Action(uint16_t posx,uint16_t posy)
{
	if(range(posx,370,100) && range(posy,950,800))
	{
		dispPage1();
     600:	ce 01       	movw	r24, r28
     602:	0e 94 0d 01 	call	0x21a	; 0x21a <_ZN5Pages9dispPage1Ev>
     606:	8f ef       	ldi	r24, 0xFF	; 255
     608:	99 e6       	ldi	r25, 0x69	; 105
     60a:	28 e1       	ldi	r18, 0x18	; 24
     60c:	81 50       	subi	r24, 0x01	; 1
     60e:	90 40       	sbci	r25, 0x00	; 0
     610:	20 40       	sbci	r18, 0x00	; 0
     612:	e1 f7       	brne	.-8      	; 0x60c <_ZN5Pages11page3ActionEjj+0x50>
     614:	00 c0       	rjmp	.+0      	; 0x616 <_ZN5Pages11page3ActionEjj+0x5a>
     616:	00 00       	nop
     618:	36 c0       	rjmp	.+108    	; 0x686 <_ZN5Pages11page3ActionEjj+0xca>
		_delay_ms(500);
	}
	else if(range(posx,900,130) && range(posy,790,650))
	{
		uint16_t angle = angleConversion(posx,165,870,0,359);
     61a:	07 e6       	ldi	r16, 0x67	; 103
     61c:	11 e0       	ldi	r17, 0x01	; 1
     61e:	20 e0       	ldi	r18, 0x00	; 0
     620:	30 e0       	ldi	r19, 0x00	; 0
     622:	46 e6       	ldi	r20, 0x66	; 102
     624:	53 e0       	ldi	r21, 0x03	; 3
     626:	65 ea       	ldi	r22, 0xA5	; 165
     628:	70 e0       	ldi	r23, 0x00	; 0
     62a:	cf 01       	movw	r24, r30
     62c:	0e 94 9d 00 	call	0x13a	; 0x13a <_Z15angleConversionjjjjj>
     630:	8c 01       	movw	r16, r24
		
		dispPage3();
     632:	ce 01       	movw	r24, r28
     634:	0e 94 54 02 	call	0x4a8	; 0x4a8 <_ZN5Pages9dispPage3Ev>
		
		this->lcd.gotoXY(1,9);
     638:	7e 01       	movw	r14, r28
     63a:	82 e0       	ldi	r24, 0x02	; 2
     63c:	e8 0e       	add	r14, r24
     63e:	f1 1c       	adc	r15, r1
     640:	49 e0       	ldi	r20, 0x09	; 9
     642:	50 e0       	ldi	r21, 0x00	; 0
     644:	61 e0       	ldi	r22, 0x01	; 1
     646:	c7 01       	movw	r24, r14
     648:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <_ZN10LcdDisplay6gotoXYEhj>
		this->lcd.displayInt(angle);
     64c:	b8 01       	movw	r22, r16
     64e:	c7 01       	movw	r24, r14
     650:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <_ZN10LcdDisplay10displayIntEi>
     654:	9f ef       	ldi	r25, 0xFF	; 255
     656:	29 e6       	ldi	r18, 0x69	; 105
     658:	88 e1       	ldi	r24, 0x18	; 24
     65a:	91 50       	subi	r25, 0x01	; 1
     65c:	20 40       	sbci	r18, 0x00	; 0
     65e:	80 40       	sbci	r24, 0x00	; 0
     660:	e1 f7       	brne	.-8      	; 0x65a <_ZN5Pages11page3ActionEjj+0x9e>
     662:	00 c0       	rjmp	.+0      	; 0x664 <_ZN5Pages11page3ActionEjj+0xa8>
     664:	00 00       	nop
		_delay_ms(500);
		this->stepper.moveDegree(angle,5000);
     666:	48 e8       	ldi	r20, 0x88	; 136
     668:	53 e1       	ldi	r21, 0x13	; 19
     66a:	b8 01       	movw	r22, r16
     66c:	ce 01       	movw	r24, r28
     66e:	05 96       	adiw	r24, 0x05	; 5
     670:	0e 94 a3 04 	call	0x946	; 0x946 <_ZN12StepperMotor10moveDegreeEii>
     674:	9f ef       	ldi	r25, 0xFF	; 255
     676:	23 ed       	ldi	r18, 0xD3	; 211
     678:	80 e3       	ldi	r24, 0x30	; 48
     67a:	91 50       	subi	r25, 0x01	; 1
     67c:	20 40       	sbci	r18, 0x00	; 0
     67e:	80 40       	sbci	r24, 0x00	; 0
     680:	e1 f7       	brne	.-8      	; 0x67a <_ZN5Pages11page3ActionEjj+0xbe>
     682:	00 c0       	rjmp	.+0      	; 0x684 <_ZN5Pages11page3ActionEjj+0xc8>
     684:	00 00       	nop
		_delay_ms(1000);
	}
}
     686:	df 91       	pop	r29
     688:	cf 91       	pop	r28
     68a:	1f 91       	pop	r17
     68c:	0f 91       	pop	r16
     68e:	ff 90       	pop	r15
     690:	ef 90       	pop	r14
     692:	08 95       	ret

00000694 <_ZN5Pages12chooseActionEjj>:
//	_delay_ms(500);
}

bool Pages::range(int num,int max,int min)
{
	return (num<max && num>min)?true:false;
     694:	9b 01       	movw	r18, r22
     696:	26 50       	subi	r18, 0x06	; 6
     698:	31 09       	sbc	r19, r1
     69a:	20 3b       	cpi	r18, 0xB0	; 176
     69c:	33 40       	sbci	r19, 0x03	; 3
     69e:	18 f5       	brcc	.+70     	; 0x6e6 <_ZN5Pages12chooseActionEjj+0x52>
     6a0:	9a 01       	movw	r18, r20
     6a2:	26 50       	subi	r18, 0x06	; 6
     6a4:	31 09       	sbc	r19, r1
     6a6:	20 3b       	cpi	r18, 0xB0	; 176
     6a8:	33 40       	sbci	r19, 0x03	; 3
     6aa:	e8 f4       	brcc	.+58     	; 0x6e6 <_ZN5Pages12chooseActionEjj+0x52>
     6ac:	15 c0       	rjmp	.+42     	; 0x6d8 <_ZN5Pages12chooseActionEjj+0x44>
void Pages::chooseAction(uint16_t posx,uint16_t posy)
{
	if(this->range(posx,950,5) && range(posy,950,5))
	{
		if(pageNo == 1)
			this->page1Action(posx,posy);
     6ae:	0e 94 b6 01 	call	0x36c	; 0x36c <_ZN5Pages11page1ActionEjj>
     6b2:	08 95       	ret
		else if(pageNo == 2)
     6b4:	22 30       	cpi	r18, 0x02	; 2
     6b6:	31 05       	cpc	r19, r1
     6b8:	19 f4       	brne	.+6      	; 0x6c0 <_ZN5Pages12chooseActionEjj+0x2c>
			this->page2Action(posx,posy);
     6ba:	0e 94 87 02 	call	0x50e	; 0x50e <_ZN5Pages11page2ActionEjj>
     6be:	08 95       	ret
		else if(pageNo == 3)
     6c0:	23 30       	cpi	r18, 0x03	; 3
     6c2:	31 05       	cpc	r19, r1
     6c4:	19 f4       	brne	.+6      	; 0x6cc <_ZN5Pages12chooseActionEjj+0x38>
			this->page3Action(posx,posy);
     6c6:	0e 94 de 02 	call	0x5bc	; 0x5bc <_ZN5Pages11page3ActionEjj>
     6ca:	08 95       	ret
		else if(pageNo== 4)
     6cc:	24 30       	cpi	r18, 0x04	; 4
     6ce:	31 05       	cpc	r19, r1
     6d0:	51 f4       	brne	.+20     	; 0x6e6 <_ZN5Pages12chooseActionEjj+0x52>
			this->page4Action(posx,posy);
     6d2:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <_ZN5Pages11page4ActionEjj>
     6d6:	08 95       	ret

void Pages::chooseAction(uint16_t posx,uint16_t posy)
{
	if(this->range(posx,950,5) && range(posy,950,5))
	{
		if(pageNo == 1)
     6d8:	fc 01       	movw	r30, r24
     6da:	20 81       	ld	r18, Z
     6dc:	31 81       	ldd	r19, Z+1	; 0x01
     6de:	21 30       	cpi	r18, 0x01	; 1
     6e0:	31 05       	cpc	r19, r1
     6e2:	41 f7       	brne	.-48     	; 0x6b4 <_ZN5Pages12chooseActionEjj+0x20>
     6e4:	e4 cf       	rjmp	.-56     	; 0x6ae <_ZN5Pages12chooseActionEjj+0x1a>
     6e6:	08 95       	ret

000006e8 <main>:
	//	OCR0A = number;
	
}*/

int main(void)
{
     6e8:	cf 93       	push	r28
     6ea:	df 93       	push	r29
     6ec:	cd b7       	in	r28, 0x3d	; 61
     6ee:	de b7       	in	r29, 0x3e	; 62
     6f0:	29 97       	sbiw	r28, 0x09	; 9
     6f2:	0f b6       	in	r0, 0x3f	; 63
     6f4:	f8 94       	cli
     6f6:	de bf       	out	0x3e, r29	; 62
     6f8:	0f be       	out	0x3f, r0	; 63
     6fa:	cd bf       	out	0x3d, r28	; 61
	sei();
     6fc:	78 94       	sei
	//count = 0;
	LcdDisplay lcd;
	
	touchscreen.init();
     6fe:	80 e5       	ldi	r24, 0x50	; 80
     700:	91 e0       	ldi	r25, 0x01	; 1
     702:	0e 94 f6 03 	call	0x7ec	; 0x7ec <_ZN11TouchScreen4initEv>
	lcd.init_lcd();
     706:	ce 01       	movw	r24, r28
     708:	09 96       	adiw	r24, 0x09	; 9
     70a:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <_ZN10LcdDisplay8init_lcdEv>
	USART_Init(MYUBRR);
     70e:	87 e6       	ldi	r24, 0x67	; 103
     710:	90 e0       	ldi	r25, 0x00	; 0
     712:	0e 94 ff 04 	call	0x9fe	; 0x9fe <_Z10USART_Initj>
	timer0_interrupt_init();
     716:	0e 94 5e 00 	call	0xbc	; 0xbc <_Z21timer0_interrupt_initv>
	lcd.clearDisplay();
     71a:	ce 01       	movw	r24, r28
     71c:	09 96       	adiw	r24, 0x09	; 9
     71e:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <_ZN10LcdDisplay12clearDisplayEv>
	Pages page;
     722:	ce 01       	movw	r24, r28
     724:	01 96       	adiw	r24, 0x01	; 1
     726:	0e 94 fd 00 	call	0x1fa	; 0x1fa <_ZN5PagesC1Ev>
	page.introPage();
     72a:	ce 01       	movw	r24, r28
     72c:	01 96       	adiw	r24, 0x01	; 1
     72e:	0e 94 2a 01 	call	0x254	; 0x254 <_ZN5Pages9introPageEv>
     732:	2f ef       	ldi	r18, 0xFF	; 255
     734:	83 ec       	ldi	r24, 0xC3	; 195
     736:	99 e0       	ldi	r25, 0x09	; 9
     738:	21 50       	subi	r18, 0x01	; 1
     73a:	80 40       	sbci	r24, 0x00	; 0
     73c:	90 40       	sbci	r25, 0x00	; 0
     73e:	e1 f7       	brne	.-8      	; 0x738 <main+0x50>
     740:	00 c0       	rjmp	.+0      	; 0x742 <main+0x5a>
     742:	00 00       	nop
	 while (1)
	 {
		 _delay_ms(200);
		page.chooseAction(touchscreen.getPosX(),touchscreen.getPosY());
     744:	80 e5       	ldi	r24, 0x50	; 80
     746:	91 e0       	ldi	r25, 0x01	; 1
     748:	0e 94 fd 03 	call	0x7fa	; 0x7fa <_ZN11TouchScreen7getPosYEv>
     74c:	8c 01       	movw	r16, r24
     74e:	80 e5       	ldi	r24, 0x50	; 80
     750:	91 e0       	ldi	r25, 0x01	; 1
     752:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <_ZN11TouchScreen7getPosXEv>
     756:	a8 01       	movw	r20, r16
     758:	bc 01       	movw	r22, r24
     75a:	ce 01       	movw	r24, r28
     75c:	01 96       	adiw	r24, 0x01	; 1
     75e:	0e 94 4a 03 	call	0x694	; 0x694 <_ZN5Pages12chooseActionEjj>
     762:	e7 cf       	rjmp	.-50     	; 0x732 <main+0x4a>

00000764 <__vector_14>:


}*/

ISR(TIMER0_COMPA_vect)
{
     764:	1f 92       	push	r1
     766:	0f 92       	push	r0
     768:	0f b6       	in	r0, 0x3f	; 63
     76a:	0f 92       	push	r0
     76c:	11 24       	eor	r1, r1
     76e:	2f 93       	push	r18
     770:	3f 93       	push	r19
     772:	4f 93       	push	r20
     774:	5f 93       	push	r21
     776:	6f 93       	push	r22
     778:	7f 93       	push	r23
     77a:	8f 93       	push	r24
     77c:	9f 93       	push	r25
     77e:	af 93       	push	r26
     780:	bf 93       	push	r27
     782:	ef 93       	push	r30
     784:	ff 93       	push	r31

static uint16_t count = 0;
	if(count == 500)
     786:	80 91 4e 01 	lds	r24, 0x014E
     78a:	90 91 4f 01 	lds	r25, 0x014F
     78e:	84 3f       	cpi	r24, 0xF4	; 244
     790:	91 40       	sbci	r25, 0x01	; 1
     792:	91 f4       	brne	.+36     	; 0x7b8 <__vector_14+0x54>
	{
	touchscreen.setPosX(readX());
     794:	0e 94 79 00 	call	0xf2	; 0xf2 <_Z5readXv>
     798:	bc 01       	movw	r22, r24
     79a:	80 e5       	ldi	r24, 0x50	; 80
     79c:	91 e0       	ldi	r25, 0x01	; 1
     79e:	0e 94 01 04 	call	0x802	; 0x802 <_ZN11TouchScreen7setPosXEj>
	touchscreen.setPosY(readY());	
     7a2:	0e 94 8b 00 	call	0x116	; 0x116 <_Z5readYv>
     7a6:	bc 01       	movw	r22, r24
     7a8:	80 e5       	ldi	r24, 0x50	; 80
     7aa:	91 e0       	ldi	r25, 0x01	; 1
     7ac:	0e 94 05 04 	call	0x80a	; 0x80a <_ZN11TouchScreen7setPosYEj>
	count=0;
     7b0:	10 92 4f 01 	sts	0x014F, r1
     7b4:	10 92 4e 01 	sts	0x014E, r1

	}
	count++;
     7b8:	80 91 4e 01 	lds	r24, 0x014E
     7bc:	90 91 4f 01 	lds	r25, 0x014F
     7c0:	01 96       	adiw	r24, 0x01	; 1
     7c2:	90 93 4f 01 	sts	0x014F, r25
     7c6:	80 93 4e 01 	sts	0x014E, r24
}
     7ca:	ff 91       	pop	r31
     7cc:	ef 91       	pop	r30
     7ce:	bf 91       	pop	r27
     7d0:	af 91       	pop	r26
     7d2:	9f 91       	pop	r25
     7d4:	8f 91       	pop	r24
     7d6:	7f 91       	pop	r23
     7d8:	6f 91       	pop	r22
     7da:	5f 91       	pop	r21
     7dc:	4f 91       	pop	r20
     7de:	3f 91       	pop	r19
     7e0:	2f 91       	pop	r18
     7e2:	0f 90       	pop	r0
     7e4:	0f be       	out	0x3f, r0	; 63
     7e6:	0f 90       	pop	r0
     7e8:	1f 90       	pop	r1
     7ea:	18 95       	reti

000007ec <_ZN11TouchScreen4initEv>:
}*/
//---------------------------Touch Screen-----------------

void TouchScreen::init()
{
	adc_init();
     7ec:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z8adc_initv>
     7f0:	08 95       	ret

000007f2 <_ZN11TouchScreen7getPosXEv>:
}

uint16_t TouchScreen::getPosX()
{
	return this->posX;
}
     7f2:	fc 01       	movw	r30, r24
     7f4:	80 81       	ld	r24, Z
     7f6:	91 81       	ldd	r25, Z+1	; 0x01
     7f8:	08 95       	ret

000007fa <_ZN11TouchScreen7getPosYEv>:

uint16_t TouchScreen::getPosY()
{
	return this->posY;
}
     7fa:	fc 01       	movw	r30, r24
     7fc:	82 81       	ldd	r24, Z+2	; 0x02
     7fe:	93 81       	ldd	r25, Z+3	; 0x03
     800:	08 95       	ret

00000802 <_ZN11TouchScreen7setPosXEj>:

void TouchScreen::setPosX(uint16_t x)
{
	this->posX = x;
     802:	fc 01       	movw	r30, r24
     804:	71 83       	std	Z+1, r23	; 0x01
     806:	60 83       	st	Z, r22
     808:	08 95       	ret

0000080a <_ZN11TouchScreen7setPosYEj>:
}

void TouchScreen::setPosY(uint16_t y)
{
	this->posY = y;
     80a:	fc 01       	movw	r30, r24
     80c:	73 83       	std	Z+3, r23	; 0x03
     80e:	62 83       	std	Z+2, r22	; 0x02
     810:	08 95       	ret

00000812 <_ZN5Servo9setDegreeEj>:

//--------------------Servo--------------------------

void Servo::setDegree(uint16_t degree)
{
	this->degree = degree;
     812:	fc 01       	movw	r30, r24
     814:	71 83       	std	Z+1, r23	; 0x01
     816:	60 83       	st	Z, r22
	
	OCR1A = (int)(330*this->degree/140)+140;
     818:	8a e4       	ldi	r24, 0x4A	; 74
     81a:	91 e0       	ldi	r25, 0x01	; 1
     81c:	68 9f       	mul	r22, r24
     81e:	90 01       	movw	r18, r0
     820:	69 9f       	mul	r22, r25
     822:	30 0d       	add	r19, r0
     824:	78 9f       	mul	r23, r24
     826:	30 0d       	add	r19, r0
     828:	11 24       	eor	r1, r1
     82a:	af e0       	ldi	r26, 0x0F	; 15
     82c:	ba ee       	ldi	r27, 0xEA	; 234
     82e:	0e 94 4c 07 	call	0xe98	; 0xe98 <__umulhisi3>
     832:	88 0f       	add	r24, r24
     834:	89 2f       	mov	r24, r25
     836:	88 1f       	adc	r24, r24
     838:	99 0b       	sbc	r25, r25
     83a:	91 95       	neg	r25
     83c:	84 57       	subi	r24, 0x74	; 116
     83e:	9f 4f       	sbci	r25, 0xFF	; 255
     840:	90 93 89 00 	sts	0x0089, r25
     844:	80 93 88 00 	sts	0x0088, r24
     848:	08 95       	ret

0000084a <_ZN5Servo9stopTimerEv>:
	return this->degree;
}

void Servo::stopTimer()
{
	TCCR1B &= ~(1<<CS10|1<<CS11|1<<CS12);
     84a:	e1 e8       	ldi	r30, 0x81	; 129
     84c:	f0 e0       	ldi	r31, 0x00	; 0
     84e:	80 81       	ld	r24, Z
     850:	88 7f       	andi	r24, 0xF8	; 248
     852:	80 83       	st	Z, r24
	TCCR1A &= ~(1<<COM1A0|1<<COM1A1|1<<COM1B0|1<<COM1B1);
     854:	e0 e8       	ldi	r30, 0x80	; 128
     856:	f0 e0       	ldi	r31, 0x00	; 0
     858:	80 81       	ld	r24, Z
     85a:	8f 70       	andi	r24, 0x0F	; 15
     85c:	80 83       	st	Z, r24
     85e:	08 95       	ret

00000860 <_ZN5Servo15initAttachTimerEv>:
}

void Servo::initAttachTimer()
{
	DDRB |= 1<<DDB1;
     860:	21 9a       	sbi	0x04, 1	; 4
	TCCR1A|=(1<<COM1A1)|(1<<COM1B1)|(1<<WGM11);        //NON Inverted PWM
     862:	e0 e8       	ldi	r30, 0x80	; 128
     864:	f0 e0       	ldi	r31, 0x00	; 0
     866:	20 81       	ld	r18, Z
     868:	22 6a       	ori	r18, 0xA2	; 162
     86a:	20 83       	st	Z, r18
	TCCR1B|=(1<<WGM13)|(1<<WGM12)|(1<<CS11)|(1<<CS10); //PRESCALER=64 MODE 14(FAST PWM)
     86c:	e1 e8       	ldi	r30, 0x81	; 129
     86e:	f0 e0       	ldi	r31, 0x00	; 0
     870:	20 81       	ld	r18, Z
     872:	2b 61       	ori	r18, 0x1B	; 27
     874:	20 83       	st	Z, r18
	
	ICR1=4999;  //fPWM=50Hz (Period = 20ms Standard).
     876:	27 e8       	ldi	r18, 0x87	; 135
     878:	33 e1       	ldi	r19, 0x13	; 19
     87a:	30 93 87 00 	sts	0x0087, r19
     87e:	20 93 86 00 	sts	0x0086, r18

//--------------------Servo--------------------------

void Servo::setDegree(uint16_t degree)
{
	this->degree = degree;
     882:	fc 01       	movw	r30, r24
     884:	11 82       	std	Z+1, r1	; 0x01
     886:	10 82       	st	Z, r1
	
	OCR1A = (int)(330*this->degree/140)+140;
     888:	8c e8       	ldi	r24, 0x8C	; 140
     88a:	90 e0       	ldi	r25, 0x00	; 0
     88c:	90 93 89 00 	sts	0x0089, r25
     890:	80 93 88 00 	sts	0x0088, r24
     894:	08 95       	ret

00000896 <_ZN12StepperMotor11moveForwardEii>:

void StepperMotor::moveForward(int steps,int utime)
{
//	this->forward = true;
	
	PORTD &= ~(1<<DDD2);
     896:	5a 98       	cbi	0x0b, 2	; 11
	
	for(int i=0 ; i<steps ; i++)
     898:	16 16       	cp	r1, r22
     89a:	17 06       	cpc	r1, r23
     89c:	ac f4       	brge	.+42     	; 0x8c8 <_ZN12StepperMotor11moveForwardEii+0x32>
     89e:	20 e0       	ldi	r18, 0x00	; 0
     8a0:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     8a2:	ef e1       	ldi	r30, 0x1F	; 31
     8a4:	fe e4       	ldi	r31, 0x4E	; 78
     8a6:	31 97       	sbiw	r30, 0x01	; 1
     8a8:	f1 f7       	brne	.-4      	; 0x8a6 <_ZN12StepperMotor11moveForwardEii+0x10>
     8aa:	00 c0       	rjmp	.+0      	; 0x8ac <_ZN12StepperMotor11moveForwardEii+0x16>
     8ac:	00 00       	nop
	{
		_delay_us(5000);
		PORTD |= (1<<DDD4);
     8ae:	5c 9a       	sbi	0x0b, 4	; 11
     8b0:	ef e1       	ldi	r30, 0x1F	; 31
     8b2:	fe e4       	ldi	r31, 0x4E	; 78
     8b4:	31 97       	sbiw	r30, 0x01	; 1
     8b6:	f1 f7       	brne	.-4      	; 0x8b4 <_ZN12StepperMotor11moveForwardEii+0x1e>
     8b8:	00 c0       	rjmp	.+0      	; 0x8ba <_ZN12StepperMotor11moveForwardEii+0x24>
     8ba:	00 00       	nop
		_delay_us(5000);
		PORTD &= ~(1<<DDD4);
     8bc:	5c 98       	cbi	0x0b, 4	; 11
{
//	this->forward = true;
	
	PORTD &= ~(1<<DDD2);
	
	for(int i=0 ; i<steps ; i++)
     8be:	2f 5f       	subi	r18, 0xFF	; 255
     8c0:	3f 4f       	sbci	r19, 0xFF	; 255
     8c2:	26 17       	cp	r18, r22
     8c4:	37 07       	cpc	r19, r23
     8c6:	69 f7       	brne	.-38     	; 0x8a2 <_ZN12StepperMotor11moveForwardEii+0xc>
		_delay_us(5000);
		PORTD |= (1<<DDD4);
		_delay_us(5000);
		PORTD &= ~(1<<DDD4);
	}
	this->degree+=steps;
     8c8:	fc 01       	movw	r30, r24
     8ca:	20 81       	ld	r18, Z
     8cc:	31 81       	ldd	r19, Z+1	; 0x01
     8ce:	62 0f       	add	r22, r18
     8d0:	73 1f       	adc	r23, r19
     8d2:	71 83       	std	Z+1, r23	; 0x01
     8d4:	60 83       	st	Z, r22
     8d6:	08 95       	ret

000008d8 <_ZN12StepperMotor12moveBackwardEii>:

void StepperMotor::moveBackward(int steps,int utime)
{
//	this->forward = false;
	
	PORTD |= (1<<DDD2);
     8d8:	5a 9a       	sbi	0x0b, 2	; 11
	
	for(int i=0 ; i<steps ; i++)
     8da:	16 16       	cp	r1, r22
     8dc:	17 06       	cpc	r1, r23
     8de:	ac f4       	brge	.+42     	; 0x90a <__stack+0xb>
     8e0:	20 e0       	ldi	r18, 0x00	; 0
     8e2:	30 e0       	ldi	r19, 0x00	; 0
     8e4:	ef e1       	ldi	r30, 0x1F	; 31
     8e6:	fe e4       	ldi	r31, 0x4E	; 78
     8e8:	31 97       	sbiw	r30, 0x01	; 1
     8ea:	f1 f7       	brne	.-4      	; 0x8e8 <_ZN12StepperMotor12moveBackwardEii+0x10>
     8ec:	00 c0       	rjmp	.+0      	; 0x8ee <_ZN12StepperMotor12moveBackwardEii+0x16>
     8ee:	00 00       	nop
	{
		_delay_us(5000);
		PORTD |= (1<<DDD4);
     8f0:	5c 9a       	sbi	0x0b, 4	; 11
     8f2:	ef e1       	ldi	r30, 0x1F	; 31
     8f4:	fe e4       	ldi	r31, 0x4E	; 78
     8f6:	31 97       	sbiw	r30, 0x01	; 1
     8f8:	f1 f7       	brne	.-4      	; 0x8f6 <_ZN12StepperMotor12moveBackwardEii+0x1e>
     8fa:	00 c0       	rjmp	.+0      	; 0x8fc <_ZN12StepperMotor12moveBackwardEii+0x24>
     8fc:	00 00       	nop
		_delay_us(5000);
		PORTD &= ~(1<<DDD4);
     8fe:	5c 98       	cbi	0x0b, 4	; 11
{
//	this->forward = false;
	
	PORTD |= (1<<DDD2);
	
	for(int i=0 ; i<steps ; i++)
     900:	2f 5f       	subi	r18, 0xFF	; 255
     902:	3f 4f       	sbci	r19, 0xFF	; 255
     904:	26 17       	cp	r18, r22
     906:	37 07       	cpc	r19, r23
     908:	69 f7       	brne	.-38     	; 0x8e4 <_ZN12StepperMotor12moveBackwardEii+0xc>
		PORTD |= (1<<DDD4);
		_delay_us(5000);
		PORTD &= ~(1<<DDD4);
		//	_delay_us(utime);
	}
	this->degree-=steps;
     90a:	fc 01       	movw	r30, r24
     90c:	20 81       	ld	r18, Z
     90e:	31 81       	ldd	r19, Z+1	; 0x01
     910:	26 1b       	sub	r18, r22
     912:	37 0b       	sbc	r19, r23
     914:	31 83       	std	Z+1, r19	; 0x01
     916:	20 83       	st	Z, r18
     918:	08 95       	ret

0000091a <_ZN12StepperMotorC1Ev>:
}

StepperMotor::StepperMotor()
{
	this->degree = 0;
     91a:	fc 01       	movw	r30, r24
     91c:	11 82       	std	Z+1, r1	; 0x01
     91e:	10 82       	st	Z, r1
	this->forward = true;
     920:	21 e0       	ldi	r18, 0x01	; 1
     922:	22 83       	std	Z+2, r18	; 0x02
	DDRD |= (1<<DDD2 | 1<<DDD4);
     924:	8a b1       	in	r24, 0x0a	; 10
     926:	84 61       	ori	r24, 0x14	; 20
     928:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<DDD2|1<<DDD4);
     92a:	8b b1       	in	r24, 0x0b	; 11
     92c:	8b 7e       	andi	r24, 0xEB	; 235
     92e:	8b b9       	out	0x0b, r24	; 11
     930:	08 95       	ret

00000932 <_ZN12StepperMotor4moveEii>:
}

void StepperMotor::move(int steps,int utime)
{
	if(this->forward)
     932:	fc 01       	movw	r30, r24
     934:	22 81       	ldd	r18, Z+2	; 0x02
     936:	22 23       	and	r18, r18
     938:	19 f0       	breq	.+6      	; 0x940 <_ZN12StepperMotor4moveEii+0xe>
		moveForward(steps,utime);
     93a:	0e 94 4b 04 	call	0x896	; 0x896 <_ZN12StepperMotor11moveForwardEii>
     93e:	08 95       	ret
	else
		moveBackward(steps,utime);
     940:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <_ZN12StepperMotor12moveBackwardEii>
     944:	08 95       	ret

00000946 <_ZN12StepperMotor10moveDegreeEii>:
}

void StepperMotor::moveDegree(int degree,int utime)
{
     946:	cf 93       	push	r28
     948:	df 93       	push	r29
     94a:	fc 01       	movw	r30, r24
     94c:	ea 01       	movw	r28, r20
	int moveDeg;
	
	if(this->forward)
     94e:	82 81       	ldd	r24, Z+2	; 0x02
     950:	88 23       	and	r24, r24
     952:	41 f0       	breq	.+16     	; 0x964 <_ZN12StepperMotor10moveDegreeEii+0x1e>
	{
		moveDeg = this->degree - degree;
     954:	20 81       	ld	r18, Z
     956:	31 81       	ldd	r19, Z+1	; 0x01
     958:	26 1b       	sub	r18, r22
     95a:	37 0b       	sbc	r19, r23
		
		if(moveDeg < 0)
     95c:	5a f4       	brpl	.+22     	; 0x974 <_ZN12StepperMotor10moveDegreeEii+0x2e>
			moveDeg += 360;
     95e:	28 59       	subi	r18, 0x98	; 152
     960:	3e 4f       	sbci	r19, 0xFE	; 254
     962:	08 c0       	rjmp	.+16     	; 0x974 <_ZN12StepperMotor10moveDegreeEii+0x2e>
		
	}else
	{
		moveDeg = degree - this->degree;
     964:	80 81       	ld	r24, Z
     966:	91 81       	ldd	r25, Z+1	; 0x01
     968:	9b 01       	movw	r18, r22
     96a:	28 1b       	sub	r18, r24
     96c:	39 0b       	sbc	r19, r25
		
		if(moveDeg < 0)	
     96e:	12 f4       	brpl	.+4      	; 0x974 <_ZN12StepperMotor10moveDegreeEii+0x2e>
			moveDeg+=360;
     970:	28 59       	subi	r18, 0x98	; 152
     972:	3e 4f       	sbci	r19, 0xFE	; 254
	}
	
//	float steps = ((float)moveDeg)*200/360;
	this->degree = degree;
     974:	71 83       	std	Z+1, r23	; 0x01
     976:	60 83       	st	Z, r22
	
	this->move((moveDeg*200)/360 , utime);
     978:	48 ec       	ldi	r20, 0xC8	; 200
     97a:	42 9f       	mul	r20, r18
     97c:	c0 01       	movw	r24, r0
     97e:	43 9f       	mul	r20, r19
     980:	90 0d       	add	r25, r0
     982:	11 24       	eor	r1, r1
     984:	68 e6       	ldi	r22, 0x68	; 104
     986:	71 e0       	ldi	r23, 0x01	; 1
     988:	0e 94 38 07 	call	0xe70	; 0xe70 <__divmodhi4>
     98c:	ae 01       	movw	r20, r28
     98e:	cf 01       	movw	r24, r30
     990:	0e 94 99 04 	call	0x932	; 0x932 <_ZN12StepperMotor4moveEii>
	
	
	
	
}
     994:	df 91       	pop	r29
     996:	cf 91       	pop	r28
     998:	08 95       	ret

0000099a <_ZN12StepperMotor10setForwardEv>:

void StepperMotor::setForward()
{
	this->forward = true;	
     99a:	21 e0       	ldi	r18, 0x01	; 1
     99c:	fc 01       	movw	r30, r24
     99e:	22 83       	std	Z+2, r18	; 0x02
     9a0:	08 95       	ret

000009a2 <_ZN12StepperMotor10setReverseEv>:
}

void StepperMotor::setReverse()
{
	this->forward = false;	
     9a2:	fc 01       	movw	r30, r24
     9a4:	12 82       	std	Z+2, r1	; 0x02
     9a6:	08 95       	ret

000009a8 <_ZN10LcdDisplay8init_lcdEv>:

//---------------------------LCD Screen------------------

void LcdDisplay::init_lcd()
{
	USART_Init(MYUBRR);
     9a8:	87 e6       	ldi	r24, 0x67	; 103
     9aa:	90 e0       	ldi	r25, 0x00	; 0
     9ac:	0e 94 ff 04 	call	0x9fe	; 0x9fe <_Z10USART_Initj>
     9b0:	08 95       	ret

000009b2 <_ZN10LcdDisplay12clearDisplayEv>:
}

void LcdDisplay::clearDisplay()
{
	USART_Sendbyte(0xFE);
     9b2:	8e ef       	ldi	r24, 0xFE	; 254
     9b4:	0e 94 0a 05 	call	0xa14	; 0xa14 <_Z14USART_Sendbyteh>
	USART_Sendbyte(0x01);
     9b8:	81 e0       	ldi	r24, 0x01	; 1
     9ba:	0e 94 0a 05 	call	0xa14	; 0xa14 <_Z14USART_Sendbyteh>
     9be:	08 95       	ret

000009c0 <_ZN10LcdDisplay13displayStringEPKc>:
}

void LcdDisplay::displayString(const char *str)
{
     9c0:	cb 01       	movw	r24, r22
	USART_Send_string(str);
     9c2:	0e 94 12 05 	call	0xa24	; 0xa24 <_Z17USART_Send_stringPKc>
     9c6:	08 95       	ret

000009c8 <_ZN10LcdDisplay10displayIntEi>:
}

void LcdDisplay::displayInt(int num)
{
     9c8:	cb 01       	movw	r24, r22
	USART_Send_int(num);
     9ca:	0e 94 21 05 	call	0xa42	; 0xa42 <_Z14USART_Send_intj>
     9ce:	08 95       	ret

000009d0 <_ZN10LcdDisplay6gotoXYEhj>:
		USART_Sendbyte(0x1C);
	}
}

void LcdDisplay::gotoXY(unsigned char row, unsigned int col)
{
     9d0:	cf 93       	push	r28
     9d2:	df 93       	push	r29
     9d4:	c6 2f       	mov	r28, r22
     9d6:	d4 2f       	mov	r29, r20
	USART_Sendbyte(0xFE);
     9d8:	8e ef       	ldi	r24, 0xFE	; 254
     9da:	0e 94 0a 05 	call	0xa14	; 0xa14 <_Z14USART_Sendbyteh>
	if(row==1)
     9de:	c1 30       	cpi	r28, 0x01	; 1
     9e0:	29 f4       	brne	.+10     	; 0x9ec <_ZN10LcdDisplay6gotoXYEhj+0x1c>
	{
		USART_Sendbyte(0+(col-1)+128);
     9e2:	8f e7       	ldi	r24, 0x7F	; 127
     9e4:	8d 0f       	add	r24, r29
     9e6:	0e 94 0a 05 	call	0xa14	; 0xa14 <_Z14USART_Sendbyteh>
     9ea:	06 c0       	rjmp	.+12     	; 0x9f8 <_ZN10LcdDisplay6gotoXYEhj+0x28>
	}else if(row==2)
     9ec:	c2 30       	cpi	r28, 0x02	; 2
     9ee:	21 f4       	brne	.+8      	; 0x9f8 <_ZN10LcdDisplay6gotoXYEhj+0x28>
	{
		USART_Sendbyte(64+(col-1)+128);
     9f0:	8f eb       	ldi	r24, 0xBF	; 191
     9f2:	8d 0f       	add	r24, r29
     9f4:	0e 94 0a 05 	call	0xa14	; 0xa14 <_Z14USART_Sendbyteh>
	}
}
     9f8:	df 91       	pop	r29
     9fa:	cf 91       	pop	r28
     9fc:	08 95       	ret

000009fe <_Z10USART_Initj>:
#include <stdio.h>			// Conversions

void USART_Init( unsigned int ubrr)
{
	/*Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
     9fe:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
     a02:	80 93 c4 00 	sts	0x00C4, r24
	//Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     a06:	88 e1       	ldi	r24, 0x18	; 24
     a08:	80 93 c1 00 	sts	0x00C1, r24
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<USBS0)|(3<<UCSZ00);
     a0c:	8e e0       	ldi	r24, 0x0E	; 14
     a0e:	80 93 c2 00 	sts	0x00C2, r24
     a12:	08 95       	ret

00000a14 <_Z14USART_Sendbyteh>:


void USART_Sendbyte( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
     a14:	e0 ec       	ldi	r30, 0xC0	; 192
     a16:	f0 e0       	ldi	r31, 0x00	; 0
     a18:	90 81       	ld	r25, Z
     a1a:	95 ff       	sbrs	r25, 5
     a1c:	fd cf       	rjmp	.-6      	; 0xa18 <_Z14USART_Sendbyteh+0x4>
	;
	/* Put data into buffer, sends the data */
	UDR0 = char(data);
     a1e:	80 93 c6 00 	sts	0x00C6, r24
     a22:	08 95       	ret

00000a24 <_Z17USART_Send_stringPKc>:
}

void USART_Send_string(const char *str)
{
     a24:	cf 93       	push	r28
     a26:	df 93       	push	r29
     a28:	ec 01       	movw	r28, r24

	while (*str)
     a2a:	88 81       	ld	r24, Y
     a2c:	88 23       	and	r24, r24
     a2e:	31 f0       	breq	.+12     	; 0xa3c <_Z17USART_Send_stringPKc+0x18>
     a30:	21 96       	adiw	r28, 0x01	; 1
	USART_Sendbyte(*str++);
     a32:	0e 94 0a 05 	call	0xa14	; 0xa14 <_Z14USART_Sendbyteh>
}

void USART_Send_string(const char *str)
{

	while (*str)
     a36:	89 91       	ld	r24, Y+
     a38:	81 11       	cpse	r24, r1
     a3a:	fb cf       	rjmp	.-10     	; 0xa32 <_Z17USART_Send_stringPKc+0xe>
	USART_Sendbyte(*str++);
	
}
     a3c:	df 91       	pop	r29
     a3e:	cf 91       	pop	r28
     a40:	08 95       	ret

00000a42 <_Z14USART_Send_intj>:

void USART_Send_int(unsigned int d )
{
     a42:	0f 93       	push	r16
     a44:	1f 93       	push	r17
     a46:	cf 93       	push	r28
     a48:	df 93       	push	r29
     a4a:	cd b7       	in	r28, 0x3d	; 61
     a4c:	de b7       	in	r29, 0x3e	; 62
     a4e:	2a 97       	sbiw	r28, 0x0a	; 10
     a50:	0f b6       	in	r0, 0x3f	; 63
     a52:	f8 94       	cli
     a54:	de bf       	out	0x3e, r29	; 62
     a56:	0f be       	out	0x3f, r0	; 63
     a58:	cd bf       	out	0x3d, r28	; 61
	char str[10];
	sprintf(str,"%u",d);
     a5a:	9f 93       	push	r25
     a5c:	8f 93       	push	r24
     a5e:	8a e4       	ldi	r24, 0x4A	; 74
     a60:	91 e0       	ldi	r25, 0x01	; 1
     a62:	9f 93       	push	r25
     a64:	8f 93       	push	r24
     a66:	8e 01       	movw	r16, r28
     a68:	0f 5f       	subi	r16, 0xFF	; 255
     a6a:	1f 4f       	sbci	r17, 0xFF	; 255
     a6c:	1f 93       	push	r17
     a6e:	0f 93       	push	r16
     a70:	0e 94 6f 07 	call	0xede	; 0xede <sprintf>
	USART_Send_string(str);
     a74:	c8 01       	movw	r24, r16
     a76:	0e 94 12 05 	call	0xa24	; 0xa24 <_Z17USART_Send_stringPKc>
     a7a:	0f 90       	pop	r0
     a7c:	0f 90       	pop	r0
     a7e:	0f 90       	pop	r0
     a80:	0f 90       	pop	r0
     a82:	0f 90       	pop	r0
     a84:	0f 90       	pop	r0
	
}
     a86:	2a 96       	adiw	r28, 0x0a	; 10
     a88:	0f b6       	in	r0, 0x3f	; 63
     a8a:	f8 94       	cli
     a8c:	de bf       	out	0x3e, r29	; 62
     a8e:	0f be       	out	0x3f, r0	; 63
     a90:	cd bf       	out	0x3d, r28	; 61
     a92:	df 91       	pop	r29
     a94:	cf 91       	pop	r28
     a96:	1f 91       	pop	r17
     a98:	0f 91       	pop	r16
     a9a:	08 95       	ret

00000a9c <__subsf3>:
     a9c:	50 58       	subi	r21, 0x80	; 128

00000a9e <__addsf3>:
     a9e:	bb 27       	eor	r27, r27
     aa0:	aa 27       	eor	r26, r26
     aa2:	0e d0       	rcall	.+28     	; 0xac0 <__addsf3x>
     aa4:	48 c1       	rjmp	.+656    	; 0xd36 <__fp_round>
     aa6:	39 d1       	rcall	.+626    	; 0xd1a <__fp_pscA>
     aa8:	30 f0       	brcs	.+12     	; 0xab6 <__addsf3+0x18>
     aaa:	3e d1       	rcall	.+636    	; 0xd28 <__fp_pscB>
     aac:	20 f0       	brcs	.+8      	; 0xab6 <__addsf3+0x18>
     aae:	31 f4       	brne	.+12     	; 0xabc <__addsf3+0x1e>
     ab0:	9f 3f       	cpi	r25, 0xFF	; 255
     ab2:	11 f4       	brne	.+4      	; 0xab8 <__addsf3+0x1a>
     ab4:	1e f4       	brtc	.+6      	; 0xabc <__addsf3+0x1e>
     ab6:	2e c1       	rjmp	.+604    	; 0xd14 <__fp_nan>
     ab8:	0e f4       	brtc	.+2      	; 0xabc <__addsf3+0x1e>
     aba:	e0 95       	com	r30
     abc:	e7 fb       	bst	r30, 7
     abe:	24 c1       	rjmp	.+584    	; 0xd08 <__fp_inf>

00000ac0 <__addsf3x>:
     ac0:	e9 2f       	mov	r30, r25
     ac2:	4a d1       	rcall	.+660    	; 0xd58 <__fp_split3>
     ac4:	80 f3       	brcs	.-32     	; 0xaa6 <__addsf3+0x8>
     ac6:	ba 17       	cp	r27, r26
     ac8:	62 07       	cpc	r22, r18
     aca:	73 07       	cpc	r23, r19
     acc:	84 07       	cpc	r24, r20
     ace:	95 07       	cpc	r25, r21
     ad0:	18 f0       	brcs	.+6      	; 0xad8 <__addsf3x+0x18>
     ad2:	71 f4       	brne	.+28     	; 0xaf0 <__addsf3x+0x30>
     ad4:	9e f5       	brtc	.+102    	; 0xb3c <__addsf3x+0x7c>
     ad6:	62 c1       	rjmp	.+708    	; 0xd9c <__fp_zero>
     ad8:	0e f4       	brtc	.+2      	; 0xadc <__addsf3x+0x1c>
     ada:	e0 95       	com	r30
     adc:	0b 2e       	mov	r0, r27
     ade:	ba 2f       	mov	r27, r26
     ae0:	a0 2d       	mov	r26, r0
     ae2:	0b 01       	movw	r0, r22
     ae4:	b9 01       	movw	r22, r18
     ae6:	90 01       	movw	r18, r0
     ae8:	0c 01       	movw	r0, r24
     aea:	ca 01       	movw	r24, r20
     aec:	a0 01       	movw	r20, r0
     aee:	11 24       	eor	r1, r1
     af0:	ff 27       	eor	r31, r31
     af2:	59 1b       	sub	r21, r25
     af4:	99 f0       	breq	.+38     	; 0xb1c <__addsf3x+0x5c>
     af6:	59 3f       	cpi	r21, 0xF9	; 249
     af8:	50 f4       	brcc	.+20     	; 0xb0e <__addsf3x+0x4e>
     afa:	50 3e       	cpi	r21, 0xE0	; 224
     afc:	68 f1       	brcs	.+90     	; 0xb58 <__addsf3x+0x98>
     afe:	1a 16       	cp	r1, r26
     b00:	f0 40       	sbci	r31, 0x00	; 0
     b02:	a2 2f       	mov	r26, r18
     b04:	23 2f       	mov	r18, r19
     b06:	34 2f       	mov	r19, r20
     b08:	44 27       	eor	r20, r20
     b0a:	58 5f       	subi	r21, 0xF8	; 248
     b0c:	f3 cf       	rjmp	.-26     	; 0xaf4 <__addsf3x+0x34>
     b0e:	46 95       	lsr	r20
     b10:	37 95       	ror	r19
     b12:	27 95       	ror	r18
     b14:	a7 95       	ror	r26
     b16:	f0 40       	sbci	r31, 0x00	; 0
     b18:	53 95       	inc	r21
     b1a:	c9 f7       	brne	.-14     	; 0xb0e <__addsf3x+0x4e>
     b1c:	7e f4       	brtc	.+30     	; 0xb3c <__addsf3x+0x7c>
     b1e:	1f 16       	cp	r1, r31
     b20:	ba 0b       	sbc	r27, r26
     b22:	62 0b       	sbc	r22, r18
     b24:	73 0b       	sbc	r23, r19
     b26:	84 0b       	sbc	r24, r20
     b28:	ba f0       	brmi	.+46     	; 0xb58 <__addsf3x+0x98>
     b2a:	91 50       	subi	r25, 0x01	; 1
     b2c:	a1 f0       	breq	.+40     	; 0xb56 <__addsf3x+0x96>
     b2e:	ff 0f       	add	r31, r31
     b30:	bb 1f       	adc	r27, r27
     b32:	66 1f       	adc	r22, r22
     b34:	77 1f       	adc	r23, r23
     b36:	88 1f       	adc	r24, r24
     b38:	c2 f7       	brpl	.-16     	; 0xb2a <__addsf3x+0x6a>
     b3a:	0e c0       	rjmp	.+28     	; 0xb58 <__addsf3x+0x98>
     b3c:	ba 0f       	add	r27, r26
     b3e:	62 1f       	adc	r22, r18
     b40:	73 1f       	adc	r23, r19
     b42:	84 1f       	adc	r24, r20
     b44:	48 f4       	brcc	.+18     	; 0xb58 <__addsf3x+0x98>
     b46:	87 95       	ror	r24
     b48:	77 95       	ror	r23
     b4a:	67 95       	ror	r22
     b4c:	b7 95       	ror	r27
     b4e:	f7 95       	ror	r31
     b50:	9e 3f       	cpi	r25, 0xFE	; 254
     b52:	08 f0       	brcs	.+2      	; 0xb56 <__addsf3x+0x96>
     b54:	b3 cf       	rjmp	.-154    	; 0xabc <__addsf3+0x1e>
     b56:	93 95       	inc	r25
     b58:	88 0f       	add	r24, r24
     b5a:	08 f0       	brcs	.+2      	; 0xb5e <__addsf3x+0x9e>
     b5c:	99 27       	eor	r25, r25
     b5e:	ee 0f       	add	r30, r30
     b60:	97 95       	ror	r25
     b62:	87 95       	ror	r24
     b64:	08 95       	ret

00000b66 <__divsf3>:
     b66:	0c d0       	rcall	.+24     	; 0xb80 <__divsf3x>
     b68:	e6 c0       	rjmp	.+460    	; 0xd36 <__fp_round>
     b6a:	de d0       	rcall	.+444    	; 0xd28 <__fp_pscB>
     b6c:	40 f0       	brcs	.+16     	; 0xb7e <__divsf3+0x18>
     b6e:	d5 d0       	rcall	.+426    	; 0xd1a <__fp_pscA>
     b70:	30 f0       	brcs	.+12     	; 0xb7e <__divsf3+0x18>
     b72:	21 f4       	brne	.+8      	; 0xb7c <__divsf3+0x16>
     b74:	5f 3f       	cpi	r21, 0xFF	; 255
     b76:	19 f0       	breq	.+6      	; 0xb7e <__divsf3+0x18>
     b78:	c7 c0       	rjmp	.+398    	; 0xd08 <__fp_inf>
     b7a:	51 11       	cpse	r21, r1
     b7c:	10 c1       	rjmp	.+544    	; 0xd9e <__fp_szero>
     b7e:	ca c0       	rjmp	.+404    	; 0xd14 <__fp_nan>

00000b80 <__divsf3x>:
     b80:	eb d0       	rcall	.+470    	; 0xd58 <__fp_split3>
     b82:	98 f3       	brcs	.-26     	; 0xb6a <__divsf3+0x4>

00000b84 <__divsf3_pse>:
     b84:	99 23       	and	r25, r25
     b86:	c9 f3       	breq	.-14     	; 0xb7a <__divsf3+0x14>
     b88:	55 23       	and	r21, r21
     b8a:	b1 f3       	breq	.-20     	; 0xb78 <__divsf3+0x12>
     b8c:	95 1b       	sub	r25, r21
     b8e:	55 0b       	sbc	r21, r21
     b90:	bb 27       	eor	r27, r27
     b92:	aa 27       	eor	r26, r26
     b94:	62 17       	cp	r22, r18
     b96:	73 07       	cpc	r23, r19
     b98:	84 07       	cpc	r24, r20
     b9a:	38 f0       	brcs	.+14     	; 0xbaa <__divsf3_pse+0x26>
     b9c:	9f 5f       	subi	r25, 0xFF	; 255
     b9e:	5f 4f       	sbci	r21, 0xFF	; 255
     ba0:	22 0f       	add	r18, r18
     ba2:	33 1f       	adc	r19, r19
     ba4:	44 1f       	adc	r20, r20
     ba6:	aa 1f       	adc	r26, r26
     ba8:	a9 f3       	breq	.-22     	; 0xb94 <__divsf3_pse+0x10>
     baa:	33 d0       	rcall	.+102    	; 0xc12 <__divsf3_pse+0x8e>
     bac:	0e 2e       	mov	r0, r30
     bae:	3a f0       	brmi	.+14     	; 0xbbe <__divsf3_pse+0x3a>
     bb0:	e0 e8       	ldi	r30, 0x80	; 128
     bb2:	30 d0       	rcall	.+96     	; 0xc14 <__divsf3_pse+0x90>
     bb4:	91 50       	subi	r25, 0x01	; 1
     bb6:	50 40       	sbci	r21, 0x00	; 0
     bb8:	e6 95       	lsr	r30
     bba:	00 1c       	adc	r0, r0
     bbc:	ca f7       	brpl	.-14     	; 0xbb0 <__divsf3_pse+0x2c>
     bbe:	29 d0       	rcall	.+82     	; 0xc12 <__divsf3_pse+0x8e>
     bc0:	fe 2f       	mov	r31, r30
     bc2:	27 d0       	rcall	.+78     	; 0xc12 <__divsf3_pse+0x8e>
     bc4:	66 0f       	add	r22, r22
     bc6:	77 1f       	adc	r23, r23
     bc8:	88 1f       	adc	r24, r24
     bca:	bb 1f       	adc	r27, r27
     bcc:	26 17       	cp	r18, r22
     bce:	37 07       	cpc	r19, r23
     bd0:	48 07       	cpc	r20, r24
     bd2:	ab 07       	cpc	r26, r27
     bd4:	b0 e8       	ldi	r27, 0x80	; 128
     bd6:	09 f0       	breq	.+2      	; 0xbda <__divsf3_pse+0x56>
     bd8:	bb 0b       	sbc	r27, r27
     bda:	80 2d       	mov	r24, r0
     bdc:	bf 01       	movw	r22, r30
     bde:	ff 27       	eor	r31, r31
     be0:	93 58       	subi	r25, 0x83	; 131
     be2:	5f 4f       	sbci	r21, 0xFF	; 255
     be4:	2a f0       	brmi	.+10     	; 0xbf0 <__divsf3_pse+0x6c>
     be6:	9e 3f       	cpi	r25, 0xFE	; 254
     be8:	51 05       	cpc	r21, r1
     bea:	68 f0       	brcs	.+26     	; 0xc06 <__divsf3_pse+0x82>
     bec:	8d c0       	rjmp	.+282    	; 0xd08 <__fp_inf>
     bee:	d7 c0       	rjmp	.+430    	; 0xd9e <__fp_szero>
     bf0:	5f 3f       	cpi	r21, 0xFF	; 255
     bf2:	ec f3       	brlt	.-6      	; 0xbee <__divsf3_pse+0x6a>
     bf4:	98 3e       	cpi	r25, 0xE8	; 232
     bf6:	dc f3       	brlt	.-10     	; 0xbee <__divsf3_pse+0x6a>
     bf8:	86 95       	lsr	r24
     bfa:	77 95       	ror	r23
     bfc:	67 95       	ror	r22
     bfe:	b7 95       	ror	r27
     c00:	f7 95       	ror	r31
     c02:	9f 5f       	subi	r25, 0xFF	; 255
     c04:	c9 f7       	brne	.-14     	; 0xbf8 <__divsf3_pse+0x74>
     c06:	88 0f       	add	r24, r24
     c08:	91 1d       	adc	r25, r1
     c0a:	96 95       	lsr	r25
     c0c:	87 95       	ror	r24
     c0e:	97 f9       	bld	r25, 7
     c10:	08 95       	ret
     c12:	e1 e0       	ldi	r30, 0x01	; 1
     c14:	66 0f       	add	r22, r22
     c16:	77 1f       	adc	r23, r23
     c18:	88 1f       	adc	r24, r24
     c1a:	bb 1f       	adc	r27, r27
     c1c:	62 17       	cp	r22, r18
     c1e:	73 07       	cpc	r23, r19
     c20:	84 07       	cpc	r24, r20
     c22:	ba 07       	cpc	r27, r26
     c24:	20 f0       	brcs	.+8      	; 0xc2e <__divsf3_pse+0xaa>
     c26:	62 1b       	sub	r22, r18
     c28:	73 0b       	sbc	r23, r19
     c2a:	84 0b       	sbc	r24, r20
     c2c:	ba 0b       	sbc	r27, r26
     c2e:	ee 1f       	adc	r30, r30
     c30:	88 f7       	brcc	.-30     	; 0xc14 <__divsf3_pse+0x90>
     c32:	e0 95       	com	r30
     c34:	08 95       	ret

00000c36 <__fixunssfsi>:
     c36:	98 d0       	rcall	.+304    	; 0xd68 <__fp_splitA>
     c38:	88 f0       	brcs	.+34     	; 0xc5c <__fixunssfsi+0x26>
     c3a:	9f 57       	subi	r25, 0x7F	; 127
     c3c:	90 f0       	brcs	.+36     	; 0xc62 <__fixunssfsi+0x2c>
     c3e:	b9 2f       	mov	r27, r25
     c40:	99 27       	eor	r25, r25
     c42:	b7 51       	subi	r27, 0x17	; 23
     c44:	a0 f0       	brcs	.+40     	; 0xc6e <__fixunssfsi+0x38>
     c46:	d1 f0       	breq	.+52     	; 0xc7c <__fixunssfsi+0x46>
     c48:	66 0f       	add	r22, r22
     c4a:	77 1f       	adc	r23, r23
     c4c:	88 1f       	adc	r24, r24
     c4e:	99 1f       	adc	r25, r25
     c50:	1a f0       	brmi	.+6      	; 0xc58 <__fixunssfsi+0x22>
     c52:	ba 95       	dec	r27
     c54:	c9 f7       	brne	.-14     	; 0xc48 <__fixunssfsi+0x12>
     c56:	12 c0       	rjmp	.+36     	; 0xc7c <__fixunssfsi+0x46>
     c58:	b1 30       	cpi	r27, 0x01	; 1
     c5a:	81 f0       	breq	.+32     	; 0xc7c <__fixunssfsi+0x46>
     c5c:	9f d0       	rcall	.+318    	; 0xd9c <__fp_zero>
     c5e:	b1 e0       	ldi	r27, 0x01	; 1
     c60:	08 95       	ret
     c62:	9c c0       	rjmp	.+312    	; 0xd9c <__fp_zero>
     c64:	67 2f       	mov	r22, r23
     c66:	78 2f       	mov	r23, r24
     c68:	88 27       	eor	r24, r24
     c6a:	b8 5f       	subi	r27, 0xF8	; 248
     c6c:	39 f0       	breq	.+14     	; 0xc7c <__fixunssfsi+0x46>
     c6e:	b9 3f       	cpi	r27, 0xF9	; 249
     c70:	cc f3       	brlt	.-14     	; 0xc64 <__fixunssfsi+0x2e>
     c72:	86 95       	lsr	r24
     c74:	77 95       	ror	r23
     c76:	67 95       	ror	r22
     c78:	b3 95       	inc	r27
     c7a:	d9 f7       	brne	.-10     	; 0xc72 <__fixunssfsi+0x3c>
     c7c:	3e f4       	brtc	.+14     	; 0xc8c <__fixunssfsi+0x56>
     c7e:	90 95       	com	r25
     c80:	80 95       	com	r24
     c82:	70 95       	com	r23
     c84:	61 95       	neg	r22
     c86:	7f 4f       	sbci	r23, 0xFF	; 255
     c88:	8f 4f       	sbci	r24, 0xFF	; 255
     c8a:	9f 4f       	sbci	r25, 0xFF	; 255
     c8c:	08 95       	ret

00000c8e <__floatunsisf>:
     c8e:	e8 94       	clt
     c90:	09 c0       	rjmp	.+18     	; 0xca4 <__floatsisf+0x12>

00000c92 <__floatsisf>:
     c92:	97 fb       	bst	r25, 7
     c94:	3e f4       	brtc	.+14     	; 0xca4 <__floatsisf+0x12>
     c96:	90 95       	com	r25
     c98:	80 95       	com	r24
     c9a:	70 95       	com	r23
     c9c:	61 95       	neg	r22
     c9e:	7f 4f       	sbci	r23, 0xFF	; 255
     ca0:	8f 4f       	sbci	r24, 0xFF	; 255
     ca2:	9f 4f       	sbci	r25, 0xFF	; 255
     ca4:	99 23       	and	r25, r25
     ca6:	a9 f0       	breq	.+42     	; 0xcd2 <__floatsisf+0x40>
     ca8:	f9 2f       	mov	r31, r25
     caa:	96 e9       	ldi	r25, 0x96	; 150
     cac:	bb 27       	eor	r27, r27
     cae:	93 95       	inc	r25
     cb0:	f6 95       	lsr	r31
     cb2:	87 95       	ror	r24
     cb4:	77 95       	ror	r23
     cb6:	67 95       	ror	r22
     cb8:	b7 95       	ror	r27
     cba:	f1 11       	cpse	r31, r1
     cbc:	f8 cf       	rjmp	.-16     	; 0xcae <__floatsisf+0x1c>
     cbe:	fa f4       	brpl	.+62     	; 0xcfe <__floatsisf+0x6c>
     cc0:	bb 0f       	add	r27, r27
     cc2:	11 f4       	brne	.+4      	; 0xcc8 <__floatsisf+0x36>
     cc4:	60 ff       	sbrs	r22, 0
     cc6:	1b c0       	rjmp	.+54     	; 0xcfe <__floatsisf+0x6c>
     cc8:	6f 5f       	subi	r22, 0xFF	; 255
     cca:	7f 4f       	sbci	r23, 0xFF	; 255
     ccc:	8f 4f       	sbci	r24, 0xFF	; 255
     cce:	9f 4f       	sbci	r25, 0xFF	; 255
     cd0:	16 c0       	rjmp	.+44     	; 0xcfe <__floatsisf+0x6c>
     cd2:	88 23       	and	r24, r24
     cd4:	11 f0       	breq	.+4      	; 0xcda <__floatsisf+0x48>
     cd6:	96 e9       	ldi	r25, 0x96	; 150
     cd8:	11 c0       	rjmp	.+34     	; 0xcfc <__floatsisf+0x6a>
     cda:	77 23       	and	r23, r23
     cdc:	21 f0       	breq	.+8      	; 0xce6 <__floatsisf+0x54>
     cde:	9e e8       	ldi	r25, 0x8E	; 142
     ce0:	87 2f       	mov	r24, r23
     ce2:	76 2f       	mov	r23, r22
     ce4:	05 c0       	rjmp	.+10     	; 0xcf0 <__floatsisf+0x5e>
     ce6:	66 23       	and	r22, r22
     ce8:	71 f0       	breq	.+28     	; 0xd06 <__floatsisf+0x74>
     cea:	96 e8       	ldi	r25, 0x86	; 134
     cec:	86 2f       	mov	r24, r22
     cee:	70 e0       	ldi	r23, 0x00	; 0
     cf0:	60 e0       	ldi	r22, 0x00	; 0
     cf2:	2a f0       	brmi	.+10     	; 0xcfe <__floatsisf+0x6c>
     cf4:	9a 95       	dec	r25
     cf6:	66 0f       	add	r22, r22
     cf8:	77 1f       	adc	r23, r23
     cfa:	88 1f       	adc	r24, r24
     cfc:	da f7       	brpl	.-10     	; 0xcf4 <__floatsisf+0x62>
     cfe:	88 0f       	add	r24, r24
     d00:	96 95       	lsr	r25
     d02:	87 95       	ror	r24
     d04:	97 f9       	bld	r25, 7
     d06:	08 95       	ret

00000d08 <__fp_inf>:
     d08:	97 f9       	bld	r25, 7
     d0a:	9f 67       	ori	r25, 0x7F	; 127
     d0c:	80 e8       	ldi	r24, 0x80	; 128
     d0e:	70 e0       	ldi	r23, 0x00	; 0
     d10:	60 e0       	ldi	r22, 0x00	; 0
     d12:	08 95       	ret

00000d14 <__fp_nan>:
     d14:	9f ef       	ldi	r25, 0xFF	; 255
     d16:	80 ec       	ldi	r24, 0xC0	; 192
     d18:	08 95       	ret

00000d1a <__fp_pscA>:
     d1a:	00 24       	eor	r0, r0
     d1c:	0a 94       	dec	r0
     d1e:	16 16       	cp	r1, r22
     d20:	17 06       	cpc	r1, r23
     d22:	18 06       	cpc	r1, r24
     d24:	09 06       	cpc	r0, r25
     d26:	08 95       	ret

00000d28 <__fp_pscB>:
     d28:	00 24       	eor	r0, r0
     d2a:	0a 94       	dec	r0
     d2c:	12 16       	cp	r1, r18
     d2e:	13 06       	cpc	r1, r19
     d30:	14 06       	cpc	r1, r20
     d32:	05 06       	cpc	r0, r21
     d34:	08 95       	ret

00000d36 <__fp_round>:
     d36:	09 2e       	mov	r0, r25
     d38:	03 94       	inc	r0
     d3a:	00 0c       	add	r0, r0
     d3c:	11 f4       	brne	.+4      	; 0xd42 <__fp_round+0xc>
     d3e:	88 23       	and	r24, r24
     d40:	52 f0       	brmi	.+20     	; 0xd56 <__fp_round+0x20>
     d42:	bb 0f       	add	r27, r27
     d44:	40 f4       	brcc	.+16     	; 0xd56 <__fp_round+0x20>
     d46:	bf 2b       	or	r27, r31
     d48:	11 f4       	brne	.+4      	; 0xd4e <__fp_round+0x18>
     d4a:	60 ff       	sbrs	r22, 0
     d4c:	04 c0       	rjmp	.+8      	; 0xd56 <__fp_round+0x20>
     d4e:	6f 5f       	subi	r22, 0xFF	; 255
     d50:	7f 4f       	sbci	r23, 0xFF	; 255
     d52:	8f 4f       	sbci	r24, 0xFF	; 255
     d54:	9f 4f       	sbci	r25, 0xFF	; 255
     d56:	08 95       	ret

00000d58 <__fp_split3>:
     d58:	57 fd       	sbrc	r21, 7
     d5a:	90 58       	subi	r25, 0x80	; 128
     d5c:	44 0f       	add	r20, r20
     d5e:	55 1f       	adc	r21, r21
     d60:	59 f0       	breq	.+22     	; 0xd78 <__fp_splitA+0x10>
     d62:	5f 3f       	cpi	r21, 0xFF	; 255
     d64:	71 f0       	breq	.+28     	; 0xd82 <__fp_splitA+0x1a>
     d66:	47 95       	ror	r20

00000d68 <__fp_splitA>:
     d68:	88 0f       	add	r24, r24
     d6a:	97 fb       	bst	r25, 7
     d6c:	99 1f       	adc	r25, r25
     d6e:	61 f0       	breq	.+24     	; 0xd88 <__fp_splitA+0x20>
     d70:	9f 3f       	cpi	r25, 0xFF	; 255
     d72:	79 f0       	breq	.+30     	; 0xd92 <__fp_splitA+0x2a>
     d74:	87 95       	ror	r24
     d76:	08 95       	ret
     d78:	12 16       	cp	r1, r18
     d7a:	13 06       	cpc	r1, r19
     d7c:	14 06       	cpc	r1, r20
     d7e:	55 1f       	adc	r21, r21
     d80:	f2 cf       	rjmp	.-28     	; 0xd66 <__fp_split3+0xe>
     d82:	46 95       	lsr	r20
     d84:	f1 df       	rcall	.-30     	; 0xd68 <__fp_splitA>
     d86:	08 c0       	rjmp	.+16     	; 0xd98 <__fp_splitA+0x30>
     d88:	16 16       	cp	r1, r22
     d8a:	17 06       	cpc	r1, r23
     d8c:	18 06       	cpc	r1, r24
     d8e:	99 1f       	adc	r25, r25
     d90:	f1 cf       	rjmp	.-30     	; 0xd74 <__fp_splitA+0xc>
     d92:	86 95       	lsr	r24
     d94:	71 05       	cpc	r23, r1
     d96:	61 05       	cpc	r22, r1
     d98:	08 94       	sec
     d9a:	08 95       	ret

00000d9c <__fp_zero>:
     d9c:	e8 94       	clt

00000d9e <__fp_szero>:
     d9e:	bb 27       	eor	r27, r27
     da0:	66 27       	eor	r22, r22
     da2:	77 27       	eor	r23, r23
     da4:	cb 01       	movw	r24, r22
     da6:	97 f9       	bld	r25, 7
     da8:	08 95       	ret

00000daa <__mulsf3>:
     daa:	0b d0       	rcall	.+22     	; 0xdc2 <__mulsf3x>
     dac:	c4 cf       	rjmp	.-120    	; 0xd36 <__fp_round>
     dae:	b5 df       	rcall	.-150    	; 0xd1a <__fp_pscA>
     db0:	28 f0       	brcs	.+10     	; 0xdbc <__mulsf3+0x12>
     db2:	ba df       	rcall	.-140    	; 0xd28 <__fp_pscB>
     db4:	18 f0       	brcs	.+6      	; 0xdbc <__mulsf3+0x12>
     db6:	95 23       	and	r25, r21
     db8:	09 f0       	breq	.+2      	; 0xdbc <__mulsf3+0x12>
     dba:	a6 cf       	rjmp	.-180    	; 0xd08 <__fp_inf>
     dbc:	ab cf       	rjmp	.-170    	; 0xd14 <__fp_nan>
     dbe:	11 24       	eor	r1, r1
     dc0:	ee cf       	rjmp	.-36     	; 0xd9e <__fp_szero>

00000dc2 <__mulsf3x>:
     dc2:	ca df       	rcall	.-108    	; 0xd58 <__fp_split3>
     dc4:	a0 f3       	brcs	.-24     	; 0xdae <__mulsf3+0x4>

00000dc6 <__mulsf3_pse>:
     dc6:	95 9f       	mul	r25, r21
     dc8:	d1 f3       	breq	.-12     	; 0xdbe <__mulsf3+0x14>
     dca:	95 0f       	add	r25, r21
     dcc:	50 e0       	ldi	r21, 0x00	; 0
     dce:	55 1f       	adc	r21, r21
     dd0:	62 9f       	mul	r22, r18
     dd2:	f0 01       	movw	r30, r0
     dd4:	72 9f       	mul	r23, r18
     dd6:	bb 27       	eor	r27, r27
     dd8:	f0 0d       	add	r31, r0
     dda:	b1 1d       	adc	r27, r1
     ddc:	63 9f       	mul	r22, r19
     dde:	aa 27       	eor	r26, r26
     de0:	f0 0d       	add	r31, r0
     de2:	b1 1d       	adc	r27, r1
     de4:	aa 1f       	adc	r26, r26
     de6:	64 9f       	mul	r22, r20
     de8:	66 27       	eor	r22, r22
     dea:	b0 0d       	add	r27, r0
     dec:	a1 1d       	adc	r26, r1
     dee:	66 1f       	adc	r22, r22
     df0:	82 9f       	mul	r24, r18
     df2:	22 27       	eor	r18, r18
     df4:	b0 0d       	add	r27, r0
     df6:	a1 1d       	adc	r26, r1
     df8:	62 1f       	adc	r22, r18
     dfa:	73 9f       	mul	r23, r19
     dfc:	b0 0d       	add	r27, r0
     dfe:	a1 1d       	adc	r26, r1
     e00:	62 1f       	adc	r22, r18
     e02:	83 9f       	mul	r24, r19
     e04:	a0 0d       	add	r26, r0
     e06:	61 1d       	adc	r22, r1
     e08:	22 1f       	adc	r18, r18
     e0a:	74 9f       	mul	r23, r20
     e0c:	33 27       	eor	r19, r19
     e0e:	a0 0d       	add	r26, r0
     e10:	61 1d       	adc	r22, r1
     e12:	23 1f       	adc	r18, r19
     e14:	84 9f       	mul	r24, r20
     e16:	60 0d       	add	r22, r0
     e18:	21 1d       	adc	r18, r1
     e1a:	82 2f       	mov	r24, r18
     e1c:	76 2f       	mov	r23, r22
     e1e:	6a 2f       	mov	r22, r26
     e20:	11 24       	eor	r1, r1
     e22:	9f 57       	subi	r25, 0x7F	; 127
     e24:	50 40       	sbci	r21, 0x00	; 0
     e26:	8a f0       	brmi	.+34     	; 0xe4a <__mulsf3_pse+0x84>
     e28:	e1 f0       	breq	.+56     	; 0xe62 <__mulsf3_pse+0x9c>
     e2a:	88 23       	and	r24, r24
     e2c:	4a f0       	brmi	.+18     	; 0xe40 <__mulsf3_pse+0x7a>
     e2e:	ee 0f       	add	r30, r30
     e30:	ff 1f       	adc	r31, r31
     e32:	bb 1f       	adc	r27, r27
     e34:	66 1f       	adc	r22, r22
     e36:	77 1f       	adc	r23, r23
     e38:	88 1f       	adc	r24, r24
     e3a:	91 50       	subi	r25, 0x01	; 1
     e3c:	50 40       	sbci	r21, 0x00	; 0
     e3e:	a9 f7       	brne	.-22     	; 0xe2a <__mulsf3_pse+0x64>
     e40:	9e 3f       	cpi	r25, 0xFE	; 254
     e42:	51 05       	cpc	r21, r1
     e44:	70 f0       	brcs	.+28     	; 0xe62 <__mulsf3_pse+0x9c>
     e46:	60 cf       	rjmp	.-320    	; 0xd08 <__fp_inf>
     e48:	aa cf       	rjmp	.-172    	; 0xd9e <__fp_szero>
     e4a:	5f 3f       	cpi	r21, 0xFF	; 255
     e4c:	ec f3       	brlt	.-6      	; 0xe48 <__mulsf3_pse+0x82>
     e4e:	98 3e       	cpi	r25, 0xE8	; 232
     e50:	dc f3       	brlt	.-10     	; 0xe48 <__mulsf3_pse+0x82>
     e52:	86 95       	lsr	r24
     e54:	77 95       	ror	r23
     e56:	67 95       	ror	r22
     e58:	b7 95       	ror	r27
     e5a:	f7 95       	ror	r31
     e5c:	e7 95       	ror	r30
     e5e:	9f 5f       	subi	r25, 0xFF	; 255
     e60:	c1 f7       	brne	.-16     	; 0xe52 <__mulsf3_pse+0x8c>
     e62:	fe 2b       	or	r31, r30
     e64:	88 0f       	add	r24, r24
     e66:	91 1d       	adc	r25, r1
     e68:	96 95       	lsr	r25
     e6a:	87 95       	ror	r24
     e6c:	97 f9       	bld	r25, 7
     e6e:	08 95       	ret

00000e70 <__divmodhi4>:
     e70:	97 fb       	bst	r25, 7
     e72:	07 2e       	mov	r0, r23
     e74:	16 f4       	brtc	.+4      	; 0xe7a <__divmodhi4+0xa>
     e76:	00 94       	com	r0
     e78:	07 d0       	rcall	.+14     	; 0xe88 <__divmodhi4_neg1>
     e7a:	77 fd       	sbrc	r23, 7
     e7c:	09 d0       	rcall	.+18     	; 0xe90 <__divmodhi4_neg2>
     e7e:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__udivmodhi4>
     e82:	07 fc       	sbrc	r0, 7
     e84:	05 d0       	rcall	.+10     	; 0xe90 <__divmodhi4_neg2>
     e86:	3e f4       	brtc	.+14     	; 0xe96 <__divmodhi4_exit>

00000e88 <__divmodhi4_neg1>:
     e88:	90 95       	com	r25
     e8a:	81 95       	neg	r24
     e8c:	9f 4f       	sbci	r25, 0xFF	; 255
     e8e:	08 95       	ret

00000e90 <__divmodhi4_neg2>:
     e90:	70 95       	com	r23
     e92:	61 95       	neg	r22
     e94:	7f 4f       	sbci	r23, 0xFF	; 255

00000e96 <__divmodhi4_exit>:
     e96:	08 95       	ret

00000e98 <__umulhisi3>:
     e98:	a2 9f       	mul	r26, r18
     e9a:	b0 01       	movw	r22, r0
     e9c:	b3 9f       	mul	r27, r19
     e9e:	c0 01       	movw	r24, r0
     ea0:	a3 9f       	mul	r26, r19
     ea2:	70 0d       	add	r23, r0
     ea4:	81 1d       	adc	r24, r1
     ea6:	11 24       	eor	r1, r1
     ea8:	91 1d       	adc	r25, r1
     eaa:	b2 9f       	mul	r27, r18
     eac:	70 0d       	add	r23, r0
     eae:	81 1d       	adc	r24, r1
     eb0:	11 24       	eor	r1, r1
     eb2:	91 1d       	adc	r25, r1
     eb4:	08 95       	ret

00000eb6 <__udivmodhi4>:
     eb6:	aa 1b       	sub	r26, r26
     eb8:	bb 1b       	sub	r27, r27
     eba:	51 e1       	ldi	r21, 0x11	; 17
     ebc:	07 c0       	rjmp	.+14     	; 0xecc <__udivmodhi4_ep>

00000ebe <__udivmodhi4_loop>:
     ebe:	aa 1f       	adc	r26, r26
     ec0:	bb 1f       	adc	r27, r27
     ec2:	a6 17       	cp	r26, r22
     ec4:	b7 07       	cpc	r27, r23
     ec6:	10 f0       	brcs	.+4      	; 0xecc <__udivmodhi4_ep>
     ec8:	a6 1b       	sub	r26, r22
     eca:	b7 0b       	sbc	r27, r23

00000ecc <__udivmodhi4_ep>:
     ecc:	88 1f       	adc	r24, r24
     ece:	99 1f       	adc	r25, r25
     ed0:	5a 95       	dec	r21
     ed2:	a9 f7       	brne	.-22     	; 0xebe <__udivmodhi4_loop>
     ed4:	80 95       	com	r24
     ed6:	90 95       	com	r25
     ed8:	bc 01       	movw	r22, r24
     eda:	cd 01       	movw	r24, r26
     edc:	08 95       	ret

00000ede <sprintf>:
     ede:	ae e0       	ldi	r26, 0x0E	; 14
     ee0:	b0 e0       	ldi	r27, 0x00	; 0
     ee2:	e5 e7       	ldi	r30, 0x75	; 117
     ee4:	f7 e0       	ldi	r31, 0x07	; 7
     ee6:	0c 94 17 0a 	jmp	0x142e	; 0x142e <__prologue_saves__+0x1c>
     eea:	0d 89       	ldd	r16, Y+21	; 0x15
     eec:	1e 89       	ldd	r17, Y+22	; 0x16
     eee:	86 e0       	ldi	r24, 0x06	; 6
     ef0:	8c 83       	std	Y+4, r24	; 0x04
     ef2:	1a 83       	std	Y+2, r17	; 0x02
     ef4:	09 83       	std	Y+1, r16	; 0x01
     ef6:	8f ef       	ldi	r24, 0xFF	; 255
     ef8:	9f e7       	ldi	r25, 0x7F	; 127
     efa:	9e 83       	std	Y+6, r25	; 0x06
     efc:	8d 83       	std	Y+5, r24	; 0x05
     efe:	ae 01       	movw	r20, r28
     f00:	47 5e       	subi	r20, 0xE7	; 231
     f02:	5f 4f       	sbci	r21, 0xFF	; 255
     f04:	6f 89       	ldd	r22, Y+23	; 0x17
     f06:	78 8d       	ldd	r23, Y+24	; 0x18
     f08:	ce 01       	movw	r24, r28
     f0a:	01 96       	adiw	r24, 0x01	; 1
     f0c:	0e 94 91 07 	call	0xf22	; 0xf22 <vfprintf>
     f10:	ef 81       	ldd	r30, Y+7	; 0x07
     f12:	f8 85       	ldd	r31, Y+8	; 0x08
     f14:	e0 0f       	add	r30, r16
     f16:	f1 1f       	adc	r31, r17
     f18:	10 82       	st	Z, r1
     f1a:	2e 96       	adiw	r28, 0x0e	; 14
     f1c:	e4 e0       	ldi	r30, 0x04	; 4
     f1e:	0c 94 33 0a 	jmp	0x1466	; 0x1466 <__epilogue_restores__+0x1c>

00000f22 <vfprintf>:
     f22:	ac e0       	ldi	r26, 0x0C	; 12
     f24:	b0 e0       	ldi	r27, 0x00	; 0
     f26:	e7 e9       	ldi	r30, 0x97	; 151
     f28:	f7 e0       	ldi	r31, 0x07	; 7
     f2a:	0c 94 09 0a 	jmp	0x1412	; 0x1412 <__prologue_saves__>
     f2e:	7c 01       	movw	r14, r24
     f30:	6b 01       	movw	r12, r22
     f32:	8a 01       	movw	r16, r20
     f34:	fc 01       	movw	r30, r24
     f36:	17 82       	std	Z+7, r1	; 0x07
     f38:	16 82       	std	Z+6, r1	; 0x06
     f3a:	83 81       	ldd	r24, Z+3	; 0x03
     f3c:	81 ff       	sbrs	r24, 1
     f3e:	bd c1       	rjmp	.+890    	; 0x12ba <vfprintf+0x398>
     f40:	ce 01       	movw	r24, r28
     f42:	01 96       	adiw	r24, 0x01	; 1
     f44:	4c 01       	movw	r8, r24
     f46:	f7 01       	movw	r30, r14
     f48:	93 81       	ldd	r25, Z+3	; 0x03
     f4a:	f6 01       	movw	r30, r12
     f4c:	93 fd       	sbrc	r25, 3
     f4e:	85 91       	lpm	r24, Z+
     f50:	93 ff       	sbrs	r25, 3
     f52:	81 91       	ld	r24, Z+
     f54:	6f 01       	movw	r12, r30
     f56:	88 23       	and	r24, r24
     f58:	09 f4       	brne	.+2      	; 0xf5c <vfprintf+0x3a>
     f5a:	ab c1       	rjmp	.+854    	; 0x12b2 <vfprintf+0x390>
     f5c:	85 32       	cpi	r24, 0x25	; 37
     f5e:	39 f4       	brne	.+14     	; 0xf6e <vfprintf+0x4c>
     f60:	93 fd       	sbrc	r25, 3
     f62:	85 91       	lpm	r24, Z+
     f64:	93 ff       	sbrs	r25, 3
     f66:	81 91       	ld	r24, Z+
     f68:	6f 01       	movw	r12, r30
     f6a:	85 32       	cpi	r24, 0x25	; 37
     f6c:	29 f4       	brne	.+10     	; 0xf78 <vfprintf+0x56>
     f6e:	b7 01       	movw	r22, r14
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	0e 94 79 09 	call	0x12f2	; 0x12f2 <fputc>
     f76:	e7 cf       	rjmp	.-50     	; 0xf46 <vfprintf+0x24>
     f78:	51 2c       	mov	r5, r1
     f7a:	31 2c       	mov	r3, r1
     f7c:	20 e0       	ldi	r18, 0x00	; 0
     f7e:	20 32       	cpi	r18, 0x20	; 32
     f80:	a0 f4       	brcc	.+40     	; 0xfaa <vfprintf+0x88>
     f82:	8b 32       	cpi	r24, 0x2B	; 43
     f84:	69 f0       	breq	.+26     	; 0xfa0 <vfprintf+0x7e>
     f86:	30 f4       	brcc	.+12     	; 0xf94 <vfprintf+0x72>
     f88:	80 32       	cpi	r24, 0x20	; 32
     f8a:	59 f0       	breq	.+22     	; 0xfa2 <vfprintf+0x80>
     f8c:	83 32       	cpi	r24, 0x23	; 35
     f8e:	69 f4       	brne	.+26     	; 0xfaa <vfprintf+0x88>
     f90:	20 61       	ori	r18, 0x10	; 16
     f92:	2c c0       	rjmp	.+88     	; 0xfec <vfprintf+0xca>
     f94:	8d 32       	cpi	r24, 0x2D	; 45
     f96:	39 f0       	breq	.+14     	; 0xfa6 <vfprintf+0x84>
     f98:	80 33       	cpi	r24, 0x30	; 48
     f9a:	39 f4       	brne	.+14     	; 0xfaa <vfprintf+0x88>
     f9c:	21 60       	ori	r18, 0x01	; 1
     f9e:	26 c0       	rjmp	.+76     	; 0xfec <vfprintf+0xca>
     fa0:	22 60       	ori	r18, 0x02	; 2
     fa2:	24 60       	ori	r18, 0x04	; 4
     fa4:	23 c0       	rjmp	.+70     	; 0xfec <vfprintf+0xca>
     fa6:	28 60       	ori	r18, 0x08	; 8
     fa8:	21 c0       	rjmp	.+66     	; 0xfec <vfprintf+0xca>
     faa:	27 fd       	sbrc	r18, 7
     fac:	27 c0       	rjmp	.+78     	; 0xffc <vfprintf+0xda>
     fae:	30 ed       	ldi	r19, 0xD0	; 208
     fb0:	38 0f       	add	r19, r24
     fb2:	3a 30       	cpi	r19, 0x0A	; 10
     fb4:	78 f4       	brcc	.+30     	; 0xfd4 <vfprintf+0xb2>
     fb6:	26 ff       	sbrs	r18, 6
     fb8:	06 c0       	rjmp	.+12     	; 0xfc6 <vfprintf+0xa4>
     fba:	fa e0       	ldi	r31, 0x0A	; 10
     fbc:	5f 9e       	mul	r5, r31
     fbe:	30 0d       	add	r19, r0
     fc0:	11 24       	eor	r1, r1
     fc2:	53 2e       	mov	r5, r19
     fc4:	13 c0       	rjmp	.+38     	; 0xfec <vfprintf+0xca>
     fc6:	8a e0       	ldi	r24, 0x0A	; 10
     fc8:	38 9e       	mul	r3, r24
     fca:	30 0d       	add	r19, r0
     fcc:	11 24       	eor	r1, r1
     fce:	33 2e       	mov	r3, r19
     fd0:	20 62       	ori	r18, 0x20	; 32
     fd2:	0c c0       	rjmp	.+24     	; 0xfec <vfprintf+0xca>
     fd4:	8e 32       	cpi	r24, 0x2E	; 46
     fd6:	21 f4       	brne	.+8      	; 0xfe0 <vfprintf+0xbe>
     fd8:	26 fd       	sbrc	r18, 6
     fda:	6b c1       	rjmp	.+726    	; 0x12b2 <vfprintf+0x390>
     fdc:	20 64       	ori	r18, 0x40	; 64
     fde:	06 c0       	rjmp	.+12     	; 0xfec <vfprintf+0xca>
     fe0:	8c 36       	cpi	r24, 0x6C	; 108
     fe2:	11 f4       	brne	.+4      	; 0xfe8 <vfprintf+0xc6>
     fe4:	20 68       	ori	r18, 0x80	; 128
     fe6:	02 c0       	rjmp	.+4      	; 0xfec <vfprintf+0xca>
     fe8:	88 36       	cpi	r24, 0x68	; 104
     fea:	41 f4       	brne	.+16     	; 0xffc <vfprintf+0xda>
     fec:	f6 01       	movw	r30, r12
     fee:	93 fd       	sbrc	r25, 3
     ff0:	85 91       	lpm	r24, Z+
     ff2:	93 ff       	sbrs	r25, 3
     ff4:	81 91       	ld	r24, Z+
     ff6:	6f 01       	movw	r12, r30
     ff8:	81 11       	cpse	r24, r1
     ffa:	c1 cf       	rjmp	.-126    	; 0xf7e <vfprintf+0x5c>
     ffc:	98 2f       	mov	r25, r24
     ffe:	9f 7d       	andi	r25, 0xDF	; 223
    1000:	95 54       	subi	r25, 0x45	; 69
    1002:	93 30       	cpi	r25, 0x03	; 3
    1004:	28 f4       	brcc	.+10     	; 0x1010 <vfprintf+0xee>
    1006:	0c 5f       	subi	r16, 0xFC	; 252
    1008:	1f 4f       	sbci	r17, 0xFF	; 255
    100a:	ff e3       	ldi	r31, 0x3F	; 63
    100c:	f9 83       	std	Y+1, r31	; 0x01
    100e:	0d c0       	rjmp	.+26     	; 0x102a <vfprintf+0x108>
    1010:	83 36       	cpi	r24, 0x63	; 99
    1012:	31 f0       	breq	.+12     	; 0x1020 <vfprintf+0xfe>
    1014:	83 37       	cpi	r24, 0x73	; 115
    1016:	71 f0       	breq	.+28     	; 0x1034 <vfprintf+0x112>
    1018:	83 35       	cpi	r24, 0x53	; 83
    101a:	09 f0       	breq	.+2      	; 0x101e <vfprintf+0xfc>
    101c:	5b c0       	rjmp	.+182    	; 0x10d4 <vfprintf+0x1b2>
    101e:	22 c0       	rjmp	.+68     	; 0x1064 <vfprintf+0x142>
    1020:	f8 01       	movw	r30, r16
    1022:	80 81       	ld	r24, Z
    1024:	89 83       	std	Y+1, r24	; 0x01
    1026:	0e 5f       	subi	r16, 0xFE	; 254
    1028:	1f 4f       	sbci	r17, 0xFF	; 255
    102a:	44 24       	eor	r4, r4
    102c:	43 94       	inc	r4
    102e:	51 2c       	mov	r5, r1
    1030:	54 01       	movw	r10, r8
    1032:	15 c0       	rjmp	.+42     	; 0x105e <vfprintf+0x13c>
    1034:	38 01       	movw	r6, r16
    1036:	f2 e0       	ldi	r31, 0x02	; 2
    1038:	6f 0e       	add	r6, r31
    103a:	71 1c       	adc	r7, r1
    103c:	f8 01       	movw	r30, r16
    103e:	a0 80       	ld	r10, Z
    1040:	b1 80       	ldd	r11, Z+1	; 0x01
    1042:	26 ff       	sbrs	r18, 6
    1044:	03 c0       	rjmp	.+6      	; 0x104c <vfprintf+0x12a>
    1046:	65 2d       	mov	r22, r5
    1048:	70 e0       	ldi	r23, 0x00	; 0
    104a:	02 c0       	rjmp	.+4      	; 0x1050 <vfprintf+0x12e>
    104c:	6f ef       	ldi	r22, 0xFF	; 255
    104e:	7f ef       	ldi	r23, 0xFF	; 255
    1050:	c5 01       	movw	r24, r10
    1052:	2c 87       	std	Y+12, r18	; 0x0c
    1054:	0e 94 6e 09 	call	0x12dc	; 0x12dc <strnlen>
    1058:	2c 01       	movw	r4, r24
    105a:	83 01       	movw	r16, r6
    105c:	2c 85       	ldd	r18, Y+12	; 0x0c
    105e:	2f 77       	andi	r18, 0x7F	; 127
    1060:	22 2e       	mov	r2, r18
    1062:	17 c0       	rjmp	.+46     	; 0x1092 <vfprintf+0x170>
    1064:	38 01       	movw	r6, r16
    1066:	f2 e0       	ldi	r31, 0x02	; 2
    1068:	6f 0e       	add	r6, r31
    106a:	71 1c       	adc	r7, r1
    106c:	f8 01       	movw	r30, r16
    106e:	a0 80       	ld	r10, Z
    1070:	b1 80       	ldd	r11, Z+1	; 0x01
    1072:	26 ff       	sbrs	r18, 6
    1074:	03 c0       	rjmp	.+6      	; 0x107c <vfprintf+0x15a>
    1076:	65 2d       	mov	r22, r5
    1078:	70 e0       	ldi	r23, 0x00	; 0
    107a:	02 c0       	rjmp	.+4      	; 0x1080 <vfprintf+0x15e>
    107c:	6f ef       	ldi	r22, 0xFF	; 255
    107e:	7f ef       	ldi	r23, 0xFF	; 255
    1080:	c5 01       	movw	r24, r10
    1082:	2c 87       	std	Y+12, r18	; 0x0c
    1084:	0e 94 63 09 	call	0x12c6	; 0x12c6 <strnlen_P>
    1088:	2c 01       	movw	r4, r24
    108a:	2c 85       	ldd	r18, Y+12	; 0x0c
    108c:	20 68       	ori	r18, 0x80	; 128
    108e:	22 2e       	mov	r2, r18
    1090:	83 01       	movw	r16, r6
    1092:	23 fc       	sbrc	r2, 3
    1094:	1b c0       	rjmp	.+54     	; 0x10cc <vfprintf+0x1aa>
    1096:	83 2d       	mov	r24, r3
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	48 16       	cp	r4, r24
    109c:	59 06       	cpc	r5, r25
    109e:	b0 f4       	brcc	.+44     	; 0x10cc <vfprintf+0x1aa>
    10a0:	b7 01       	movw	r22, r14
    10a2:	80 e2       	ldi	r24, 0x20	; 32
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	0e 94 79 09 	call	0x12f2	; 0x12f2 <fputc>
    10aa:	3a 94       	dec	r3
    10ac:	f4 cf       	rjmp	.-24     	; 0x1096 <vfprintf+0x174>
    10ae:	f5 01       	movw	r30, r10
    10b0:	27 fc       	sbrc	r2, 7
    10b2:	85 91       	lpm	r24, Z+
    10b4:	27 fe       	sbrs	r2, 7
    10b6:	81 91       	ld	r24, Z+
    10b8:	5f 01       	movw	r10, r30
    10ba:	b7 01       	movw	r22, r14
    10bc:	90 e0       	ldi	r25, 0x00	; 0
    10be:	0e 94 79 09 	call	0x12f2	; 0x12f2 <fputc>
    10c2:	31 10       	cpse	r3, r1
    10c4:	3a 94       	dec	r3
    10c6:	f1 e0       	ldi	r31, 0x01	; 1
    10c8:	4f 1a       	sub	r4, r31
    10ca:	51 08       	sbc	r5, r1
    10cc:	41 14       	cp	r4, r1
    10ce:	51 04       	cpc	r5, r1
    10d0:	71 f7       	brne	.-36     	; 0x10ae <vfprintf+0x18c>
    10d2:	e5 c0       	rjmp	.+458    	; 0x129e <vfprintf+0x37c>
    10d4:	84 36       	cpi	r24, 0x64	; 100
    10d6:	11 f0       	breq	.+4      	; 0x10dc <vfprintf+0x1ba>
    10d8:	89 36       	cpi	r24, 0x69	; 105
    10da:	39 f5       	brne	.+78     	; 0x112a <vfprintf+0x208>
    10dc:	f8 01       	movw	r30, r16
    10de:	27 ff       	sbrs	r18, 7
    10e0:	07 c0       	rjmp	.+14     	; 0x10f0 <vfprintf+0x1ce>
    10e2:	60 81       	ld	r22, Z
    10e4:	71 81       	ldd	r23, Z+1	; 0x01
    10e6:	82 81       	ldd	r24, Z+2	; 0x02
    10e8:	93 81       	ldd	r25, Z+3	; 0x03
    10ea:	0c 5f       	subi	r16, 0xFC	; 252
    10ec:	1f 4f       	sbci	r17, 0xFF	; 255
    10ee:	08 c0       	rjmp	.+16     	; 0x1100 <vfprintf+0x1de>
    10f0:	60 81       	ld	r22, Z
    10f2:	71 81       	ldd	r23, Z+1	; 0x01
    10f4:	88 27       	eor	r24, r24
    10f6:	77 fd       	sbrc	r23, 7
    10f8:	80 95       	com	r24
    10fa:	98 2f       	mov	r25, r24
    10fc:	0e 5f       	subi	r16, 0xFE	; 254
    10fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1100:	2f 76       	andi	r18, 0x6F	; 111
    1102:	b2 2e       	mov	r11, r18
    1104:	97 ff       	sbrs	r25, 7
    1106:	09 c0       	rjmp	.+18     	; 0x111a <vfprintf+0x1f8>
    1108:	90 95       	com	r25
    110a:	80 95       	com	r24
    110c:	70 95       	com	r23
    110e:	61 95       	neg	r22
    1110:	7f 4f       	sbci	r23, 0xFF	; 255
    1112:	8f 4f       	sbci	r24, 0xFF	; 255
    1114:	9f 4f       	sbci	r25, 0xFF	; 255
    1116:	20 68       	ori	r18, 0x80	; 128
    1118:	b2 2e       	mov	r11, r18
    111a:	2a e0       	ldi	r18, 0x0A	; 10
    111c:	30 e0       	ldi	r19, 0x00	; 0
    111e:	a4 01       	movw	r20, r8
    1120:	0e 94 ab 09 	call	0x1356	; 0x1356 <__ultoa_invert>
    1124:	a8 2e       	mov	r10, r24
    1126:	a8 18       	sub	r10, r8
    1128:	44 c0       	rjmp	.+136    	; 0x11b2 <vfprintf+0x290>
    112a:	85 37       	cpi	r24, 0x75	; 117
    112c:	29 f4       	brne	.+10     	; 0x1138 <vfprintf+0x216>
    112e:	2f 7e       	andi	r18, 0xEF	; 239
    1130:	b2 2e       	mov	r11, r18
    1132:	2a e0       	ldi	r18, 0x0A	; 10
    1134:	30 e0       	ldi	r19, 0x00	; 0
    1136:	25 c0       	rjmp	.+74     	; 0x1182 <vfprintf+0x260>
    1138:	f2 2f       	mov	r31, r18
    113a:	f9 7f       	andi	r31, 0xF9	; 249
    113c:	bf 2e       	mov	r11, r31
    113e:	8f 36       	cpi	r24, 0x6F	; 111
    1140:	c1 f0       	breq	.+48     	; 0x1172 <vfprintf+0x250>
    1142:	18 f4       	brcc	.+6      	; 0x114a <vfprintf+0x228>
    1144:	88 35       	cpi	r24, 0x58	; 88
    1146:	79 f0       	breq	.+30     	; 0x1166 <vfprintf+0x244>
    1148:	b4 c0       	rjmp	.+360    	; 0x12b2 <vfprintf+0x390>
    114a:	80 37       	cpi	r24, 0x70	; 112
    114c:	19 f0       	breq	.+6      	; 0x1154 <vfprintf+0x232>
    114e:	88 37       	cpi	r24, 0x78	; 120
    1150:	21 f0       	breq	.+8      	; 0x115a <vfprintf+0x238>
    1152:	af c0       	rjmp	.+350    	; 0x12b2 <vfprintf+0x390>
    1154:	2f 2f       	mov	r18, r31
    1156:	20 61       	ori	r18, 0x10	; 16
    1158:	b2 2e       	mov	r11, r18
    115a:	b4 fe       	sbrs	r11, 4
    115c:	0d c0       	rjmp	.+26     	; 0x1178 <vfprintf+0x256>
    115e:	8b 2d       	mov	r24, r11
    1160:	84 60       	ori	r24, 0x04	; 4
    1162:	b8 2e       	mov	r11, r24
    1164:	09 c0       	rjmp	.+18     	; 0x1178 <vfprintf+0x256>
    1166:	24 ff       	sbrs	r18, 4
    1168:	0a c0       	rjmp	.+20     	; 0x117e <vfprintf+0x25c>
    116a:	9f 2f       	mov	r25, r31
    116c:	96 60       	ori	r25, 0x06	; 6
    116e:	b9 2e       	mov	r11, r25
    1170:	06 c0       	rjmp	.+12     	; 0x117e <vfprintf+0x25c>
    1172:	28 e0       	ldi	r18, 0x08	; 8
    1174:	30 e0       	ldi	r19, 0x00	; 0
    1176:	05 c0       	rjmp	.+10     	; 0x1182 <vfprintf+0x260>
    1178:	20 e1       	ldi	r18, 0x10	; 16
    117a:	30 e0       	ldi	r19, 0x00	; 0
    117c:	02 c0       	rjmp	.+4      	; 0x1182 <vfprintf+0x260>
    117e:	20 e1       	ldi	r18, 0x10	; 16
    1180:	32 e0       	ldi	r19, 0x02	; 2
    1182:	f8 01       	movw	r30, r16
    1184:	b7 fe       	sbrs	r11, 7
    1186:	07 c0       	rjmp	.+14     	; 0x1196 <vfprintf+0x274>
    1188:	60 81       	ld	r22, Z
    118a:	71 81       	ldd	r23, Z+1	; 0x01
    118c:	82 81       	ldd	r24, Z+2	; 0x02
    118e:	93 81       	ldd	r25, Z+3	; 0x03
    1190:	0c 5f       	subi	r16, 0xFC	; 252
    1192:	1f 4f       	sbci	r17, 0xFF	; 255
    1194:	06 c0       	rjmp	.+12     	; 0x11a2 <vfprintf+0x280>
    1196:	60 81       	ld	r22, Z
    1198:	71 81       	ldd	r23, Z+1	; 0x01
    119a:	80 e0       	ldi	r24, 0x00	; 0
    119c:	90 e0       	ldi	r25, 0x00	; 0
    119e:	0e 5f       	subi	r16, 0xFE	; 254
    11a0:	1f 4f       	sbci	r17, 0xFF	; 255
    11a2:	a4 01       	movw	r20, r8
    11a4:	0e 94 ab 09 	call	0x1356	; 0x1356 <__ultoa_invert>
    11a8:	a8 2e       	mov	r10, r24
    11aa:	a8 18       	sub	r10, r8
    11ac:	fb 2d       	mov	r31, r11
    11ae:	ff 77       	andi	r31, 0x7F	; 127
    11b0:	bf 2e       	mov	r11, r31
    11b2:	b6 fe       	sbrs	r11, 6
    11b4:	0b c0       	rjmp	.+22     	; 0x11cc <vfprintf+0x2aa>
    11b6:	2b 2d       	mov	r18, r11
    11b8:	2e 7f       	andi	r18, 0xFE	; 254
    11ba:	a5 14       	cp	r10, r5
    11bc:	50 f4       	brcc	.+20     	; 0x11d2 <vfprintf+0x2b0>
    11be:	b4 fe       	sbrs	r11, 4
    11c0:	0a c0       	rjmp	.+20     	; 0x11d6 <vfprintf+0x2b4>
    11c2:	b2 fc       	sbrc	r11, 2
    11c4:	08 c0       	rjmp	.+16     	; 0x11d6 <vfprintf+0x2b4>
    11c6:	2b 2d       	mov	r18, r11
    11c8:	2e 7e       	andi	r18, 0xEE	; 238
    11ca:	05 c0       	rjmp	.+10     	; 0x11d6 <vfprintf+0x2b4>
    11cc:	7a 2c       	mov	r7, r10
    11ce:	2b 2d       	mov	r18, r11
    11d0:	03 c0       	rjmp	.+6      	; 0x11d8 <vfprintf+0x2b6>
    11d2:	7a 2c       	mov	r7, r10
    11d4:	01 c0       	rjmp	.+2      	; 0x11d8 <vfprintf+0x2b6>
    11d6:	75 2c       	mov	r7, r5
    11d8:	24 ff       	sbrs	r18, 4
    11da:	0d c0       	rjmp	.+26     	; 0x11f6 <vfprintf+0x2d4>
    11dc:	fe 01       	movw	r30, r28
    11de:	ea 0d       	add	r30, r10
    11e0:	f1 1d       	adc	r31, r1
    11e2:	80 81       	ld	r24, Z
    11e4:	80 33       	cpi	r24, 0x30	; 48
    11e6:	11 f4       	brne	.+4      	; 0x11ec <vfprintf+0x2ca>
    11e8:	29 7e       	andi	r18, 0xE9	; 233
    11ea:	09 c0       	rjmp	.+18     	; 0x11fe <vfprintf+0x2dc>
    11ec:	22 ff       	sbrs	r18, 2
    11ee:	06 c0       	rjmp	.+12     	; 0x11fc <vfprintf+0x2da>
    11f0:	73 94       	inc	r7
    11f2:	73 94       	inc	r7
    11f4:	04 c0       	rjmp	.+8      	; 0x11fe <vfprintf+0x2dc>
    11f6:	82 2f       	mov	r24, r18
    11f8:	86 78       	andi	r24, 0x86	; 134
    11fa:	09 f0       	breq	.+2      	; 0x11fe <vfprintf+0x2dc>
    11fc:	73 94       	inc	r7
    11fe:	23 fd       	sbrc	r18, 3
    1200:	13 c0       	rjmp	.+38     	; 0x1228 <vfprintf+0x306>
    1202:	20 ff       	sbrs	r18, 0
    1204:	06 c0       	rjmp	.+12     	; 0x1212 <vfprintf+0x2f0>
    1206:	5a 2c       	mov	r5, r10
    1208:	73 14       	cp	r7, r3
    120a:	18 f4       	brcc	.+6      	; 0x1212 <vfprintf+0x2f0>
    120c:	53 0c       	add	r5, r3
    120e:	57 18       	sub	r5, r7
    1210:	73 2c       	mov	r7, r3
    1212:	73 14       	cp	r7, r3
    1214:	68 f4       	brcc	.+26     	; 0x1230 <vfprintf+0x30e>
    1216:	b7 01       	movw	r22, r14
    1218:	80 e2       	ldi	r24, 0x20	; 32
    121a:	90 e0       	ldi	r25, 0x00	; 0
    121c:	2c 87       	std	Y+12, r18	; 0x0c
    121e:	0e 94 79 09 	call	0x12f2	; 0x12f2 <fputc>
    1222:	73 94       	inc	r7
    1224:	2c 85       	ldd	r18, Y+12	; 0x0c
    1226:	f5 cf       	rjmp	.-22     	; 0x1212 <vfprintf+0x2f0>
    1228:	73 14       	cp	r7, r3
    122a:	10 f4       	brcc	.+4      	; 0x1230 <vfprintf+0x30e>
    122c:	37 18       	sub	r3, r7
    122e:	01 c0       	rjmp	.+2      	; 0x1232 <vfprintf+0x310>
    1230:	31 2c       	mov	r3, r1
    1232:	24 ff       	sbrs	r18, 4
    1234:	12 c0       	rjmp	.+36     	; 0x125a <vfprintf+0x338>
    1236:	b7 01       	movw	r22, r14
    1238:	80 e3       	ldi	r24, 0x30	; 48
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	2c 87       	std	Y+12, r18	; 0x0c
    123e:	0e 94 79 09 	call	0x12f2	; 0x12f2 <fputc>
    1242:	2c 85       	ldd	r18, Y+12	; 0x0c
    1244:	22 ff       	sbrs	r18, 2
    1246:	17 c0       	rjmp	.+46     	; 0x1276 <vfprintf+0x354>
    1248:	21 ff       	sbrs	r18, 1
    124a:	03 c0       	rjmp	.+6      	; 0x1252 <vfprintf+0x330>
    124c:	88 e5       	ldi	r24, 0x58	; 88
    124e:	90 e0       	ldi	r25, 0x00	; 0
    1250:	02 c0       	rjmp	.+4      	; 0x1256 <vfprintf+0x334>
    1252:	88 e7       	ldi	r24, 0x78	; 120
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	b7 01       	movw	r22, r14
    1258:	0c c0       	rjmp	.+24     	; 0x1272 <vfprintf+0x350>
    125a:	82 2f       	mov	r24, r18
    125c:	86 78       	andi	r24, 0x86	; 134
    125e:	59 f0       	breq	.+22     	; 0x1276 <vfprintf+0x354>
    1260:	21 fd       	sbrc	r18, 1
    1262:	02 c0       	rjmp	.+4      	; 0x1268 <vfprintf+0x346>
    1264:	80 e2       	ldi	r24, 0x20	; 32
    1266:	01 c0       	rjmp	.+2      	; 0x126a <vfprintf+0x348>
    1268:	8b e2       	ldi	r24, 0x2B	; 43
    126a:	27 fd       	sbrc	r18, 7
    126c:	8d e2       	ldi	r24, 0x2D	; 45
    126e:	b7 01       	movw	r22, r14
    1270:	90 e0       	ldi	r25, 0x00	; 0
    1272:	0e 94 79 09 	call	0x12f2	; 0x12f2 <fputc>
    1276:	a5 14       	cp	r10, r5
    1278:	38 f4       	brcc	.+14     	; 0x1288 <vfprintf+0x366>
    127a:	b7 01       	movw	r22, r14
    127c:	80 e3       	ldi	r24, 0x30	; 48
    127e:	90 e0       	ldi	r25, 0x00	; 0
    1280:	0e 94 79 09 	call	0x12f2	; 0x12f2 <fputc>
    1284:	5a 94       	dec	r5
    1286:	f7 cf       	rjmp	.-18     	; 0x1276 <vfprintf+0x354>
    1288:	aa 94       	dec	r10
    128a:	f4 01       	movw	r30, r8
    128c:	ea 0d       	add	r30, r10
    128e:	f1 1d       	adc	r31, r1
    1290:	80 81       	ld	r24, Z
    1292:	b7 01       	movw	r22, r14
    1294:	90 e0       	ldi	r25, 0x00	; 0
    1296:	0e 94 79 09 	call	0x12f2	; 0x12f2 <fputc>
    129a:	a1 10       	cpse	r10, r1
    129c:	f5 cf       	rjmp	.-22     	; 0x1288 <vfprintf+0x366>
    129e:	33 20       	and	r3, r3
    12a0:	09 f4       	brne	.+2      	; 0x12a4 <vfprintf+0x382>
    12a2:	51 ce       	rjmp	.-862    	; 0xf46 <vfprintf+0x24>
    12a4:	b7 01       	movw	r22, r14
    12a6:	80 e2       	ldi	r24, 0x20	; 32
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	0e 94 79 09 	call	0x12f2	; 0x12f2 <fputc>
    12ae:	3a 94       	dec	r3
    12b0:	f6 cf       	rjmp	.-20     	; 0x129e <vfprintf+0x37c>
    12b2:	f7 01       	movw	r30, r14
    12b4:	86 81       	ldd	r24, Z+6	; 0x06
    12b6:	97 81       	ldd	r25, Z+7	; 0x07
    12b8:	02 c0       	rjmp	.+4      	; 0x12be <vfprintf+0x39c>
    12ba:	8f ef       	ldi	r24, 0xFF	; 255
    12bc:	9f ef       	ldi	r25, 0xFF	; 255
    12be:	2c 96       	adiw	r28, 0x0c	; 12
    12c0:	e2 e1       	ldi	r30, 0x12	; 18
    12c2:	0c 94 25 0a 	jmp	0x144a	; 0x144a <__epilogue_restores__>

000012c6 <strnlen_P>:
    12c6:	fc 01       	movw	r30, r24
    12c8:	05 90       	lpm	r0, Z+
    12ca:	61 50       	subi	r22, 0x01	; 1
    12cc:	70 40       	sbci	r23, 0x00	; 0
    12ce:	01 10       	cpse	r0, r1
    12d0:	d8 f7       	brcc	.-10     	; 0x12c8 <strnlen_P+0x2>
    12d2:	80 95       	com	r24
    12d4:	90 95       	com	r25
    12d6:	8e 0f       	add	r24, r30
    12d8:	9f 1f       	adc	r25, r31
    12da:	08 95       	ret

000012dc <strnlen>:
    12dc:	fc 01       	movw	r30, r24
    12de:	61 50       	subi	r22, 0x01	; 1
    12e0:	70 40       	sbci	r23, 0x00	; 0
    12e2:	01 90       	ld	r0, Z+
    12e4:	01 10       	cpse	r0, r1
    12e6:	d8 f7       	brcc	.-10     	; 0x12de <strnlen+0x2>
    12e8:	80 95       	com	r24
    12ea:	90 95       	com	r25
    12ec:	8e 0f       	add	r24, r30
    12ee:	9f 1f       	adc	r25, r31
    12f0:	08 95       	ret

000012f2 <fputc>:
    12f2:	0f 93       	push	r16
    12f4:	1f 93       	push	r17
    12f6:	cf 93       	push	r28
    12f8:	df 93       	push	r29
    12fa:	18 2f       	mov	r17, r24
    12fc:	09 2f       	mov	r16, r25
    12fe:	eb 01       	movw	r28, r22
    1300:	8b 81       	ldd	r24, Y+3	; 0x03
    1302:	81 fd       	sbrc	r24, 1
    1304:	03 c0       	rjmp	.+6      	; 0x130c <fputc+0x1a>
    1306:	8f ef       	ldi	r24, 0xFF	; 255
    1308:	9f ef       	ldi	r25, 0xFF	; 255
    130a:	20 c0       	rjmp	.+64     	; 0x134c <fputc+0x5a>
    130c:	82 ff       	sbrs	r24, 2
    130e:	10 c0       	rjmp	.+32     	; 0x1330 <fputc+0x3e>
    1310:	4e 81       	ldd	r20, Y+6	; 0x06
    1312:	5f 81       	ldd	r21, Y+7	; 0x07
    1314:	2c 81       	ldd	r18, Y+4	; 0x04
    1316:	3d 81       	ldd	r19, Y+5	; 0x05
    1318:	42 17       	cp	r20, r18
    131a:	53 07       	cpc	r21, r19
    131c:	7c f4       	brge	.+30     	; 0x133c <fputc+0x4a>
    131e:	e8 81       	ld	r30, Y
    1320:	f9 81       	ldd	r31, Y+1	; 0x01
    1322:	9f 01       	movw	r18, r30
    1324:	2f 5f       	subi	r18, 0xFF	; 255
    1326:	3f 4f       	sbci	r19, 0xFF	; 255
    1328:	39 83       	std	Y+1, r19	; 0x01
    132a:	28 83       	st	Y, r18
    132c:	10 83       	st	Z, r17
    132e:	06 c0       	rjmp	.+12     	; 0x133c <fputc+0x4a>
    1330:	e8 85       	ldd	r30, Y+8	; 0x08
    1332:	f9 85       	ldd	r31, Y+9	; 0x09
    1334:	81 2f       	mov	r24, r17
    1336:	09 95       	icall
    1338:	89 2b       	or	r24, r25
    133a:	29 f7       	brne	.-54     	; 0x1306 <fputc+0x14>
    133c:	2e 81       	ldd	r18, Y+6	; 0x06
    133e:	3f 81       	ldd	r19, Y+7	; 0x07
    1340:	2f 5f       	subi	r18, 0xFF	; 255
    1342:	3f 4f       	sbci	r19, 0xFF	; 255
    1344:	3f 83       	std	Y+7, r19	; 0x07
    1346:	2e 83       	std	Y+6, r18	; 0x06
    1348:	81 2f       	mov	r24, r17
    134a:	90 2f       	mov	r25, r16
    134c:	df 91       	pop	r29
    134e:	cf 91       	pop	r28
    1350:	1f 91       	pop	r17
    1352:	0f 91       	pop	r16
    1354:	08 95       	ret

00001356 <__ultoa_invert>:
    1356:	fa 01       	movw	r30, r20
    1358:	aa 27       	eor	r26, r26
    135a:	28 30       	cpi	r18, 0x08	; 8
    135c:	51 f1       	breq	.+84     	; 0x13b2 <__ultoa_invert+0x5c>
    135e:	20 31       	cpi	r18, 0x10	; 16
    1360:	81 f1       	breq	.+96     	; 0x13c2 <__ultoa_invert+0x6c>
    1362:	e8 94       	clt
    1364:	6f 93       	push	r22
    1366:	6e 7f       	andi	r22, 0xFE	; 254
    1368:	6e 5f       	subi	r22, 0xFE	; 254
    136a:	7f 4f       	sbci	r23, 0xFF	; 255
    136c:	8f 4f       	sbci	r24, 0xFF	; 255
    136e:	9f 4f       	sbci	r25, 0xFF	; 255
    1370:	af 4f       	sbci	r26, 0xFF	; 255
    1372:	b1 e0       	ldi	r27, 0x01	; 1
    1374:	3e d0       	rcall	.+124    	; 0x13f2 <__ultoa_invert+0x9c>
    1376:	b4 e0       	ldi	r27, 0x04	; 4
    1378:	3c d0       	rcall	.+120    	; 0x13f2 <__ultoa_invert+0x9c>
    137a:	67 0f       	add	r22, r23
    137c:	78 1f       	adc	r23, r24
    137e:	89 1f       	adc	r24, r25
    1380:	9a 1f       	adc	r25, r26
    1382:	a1 1d       	adc	r26, r1
    1384:	68 0f       	add	r22, r24
    1386:	79 1f       	adc	r23, r25
    1388:	8a 1f       	adc	r24, r26
    138a:	91 1d       	adc	r25, r1
    138c:	a1 1d       	adc	r26, r1
    138e:	6a 0f       	add	r22, r26
    1390:	71 1d       	adc	r23, r1
    1392:	81 1d       	adc	r24, r1
    1394:	91 1d       	adc	r25, r1
    1396:	a1 1d       	adc	r26, r1
    1398:	20 d0       	rcall	.+64     	; 0x13da <__ultoa_invert+0x84>
    139a:	09 f4       	brne	.+2      	; 0x139e <__ultoa_invert+0x48>
    139c:	68 94       	set
    139e:	3f 91       	pop	r19
    13a0:	2a e0       	ldi	r18, 0x0A	; 10
    13a2:	26 9f       	mul	r18, r22
    13a4:	11 24       	eor	r1, r1
    13a6:	30 19       	sub	r19, r0
    13a8:	30 5d       	subi	r19, 0xD0	; 208
    13aa:	31 93       	st	Z+, r19
    13ac:	de f6       	brtc	.-74     	; 0x1364 <__ultoa_invert+0xe>
    13ae:	cf 01       	movw	r24, r30
    13b0:	08 95       	ret
    13b2:	46 2f       	mov	r20, r22
    13b4:	47 70       	andi	r20, 0x07	; 7
    13b6:	40 5d       	subi	r20, 0xD0	; 208
    13b8:	41 93       	st	Z+, r20
    13ba:	b3 e0       	ldi	r27, 0x03	; 3
    13bc:	0f d0       	rcall	.+30     	; 0x13dc <__ultoa_invert+0x86>
    13be:	c9 f7       	brne	.-14     	; 0x13b2 <__ultoa_invert+0x5c>
    13c0:	f6 cf       	rjmp	.-20     	; 0x13ae <__ultoa_invert+0x58>
    13c2:	46 2f       	mov	r20, r22
    13c4:	4f 70       	andi	r20, 0x0F	; 15
    13c6:	40 5d       	subi	r20, 0xD0	; 208
    13c8:	4a 33       	cpi	r20, 0x3A	; 58
    13ca:	18 f0       	brcs	.+6      	; 0x13d2 <__ultoa_invert+0x7c>
    13cc:	49 5d       	subi	r20, 0xD9	; 217
    13ce:	31 fd       	sbrc	r19, 1
    13d0:	40 52       	subi	r20, 0x20	; 32
    13d2:	41 93       	st	Z+, r20
    13d4:	02 d0       	rcall	.+4      	; 0x13da <__ultoa_invert+0x84>
    13d6:	a9 f7       	brne	.-22     	; 0x13c2 <__ultoa_invert+0x6c>
    13d8:	ea cf       	rjmp	.-44     	; 0x13ae <__ultoa_invert+0x58>
    13da:	b4 e0       	ldi	r27, 0x04	; 4
    13dc:	a6 95       	lsr	r26
    13de:	97 95       	ror	r25
    13e0:	87 95       	ror	r24
    13e2:	77 95       	ror	r23
    13e4:	67 95       	ror	r22
    13e6:	ba 95       	dec	r27
    13e8:	c9 f7       	brne	.-14     	; 0x13dc <__ultoa_invert+0x86>
    13ea:	00 97       	sbiw	r24, 0x00	; 0
    13ec:	61 05       	cpc	r22, r1
    13ee:	71 05       	cpc	r23, r1
    13f0:	08 95       	ret
    13f2:	9b 01       	movw	r18, r22
    13f4:	ac 01       	movw	r20, r24
    13f6:	0a 2e       	mov	r0, r26
    13f8:	06 94       	lsr	r0
    13fa:	57 95       	ror	r21
    13fc:	47 95       	ror	r20
    13fe:	37 95       	ror	r19
    1400:	27 95       	ror	r18
    1402:	ba 95       	dec	r27
    1404:	c9 f7       	brne	.-14     	; 0x13f8 <__ultoa_invert+0xa2>
    1406:	62 0f       	add	r22, r18
    1408:	73 1f       	adc	r23, r19
    140a:	84 1f       	adc	r24, r20
    140c:	95 1f       	adc	r25, r21
    140e:	a0 1d       	adc	r26, r0
    1410:	08 95       	ret

00001412 <__prologue_saves__>:
    1412:	2f 92       	push	r2
    1414:	3f 92       	push	r3
    1416:	4f 92       	push	r4
    1418:	5f 92       	push	r5
    141a:	6f 92       	push	r6
    141c:	7f 92       	push	r7
    141e:	8f 92       	push	r8
    1420:	9f 92       	push	r9
    1422:	af 92       	push	r10
    1424:	bf 92       	push	r11
    1426:	cf 92       	push	r12
    1428:	df 92       	push	r13
    142a:	ef 92       	push	r14
    142c:	ff 92       	push	r15
    142e:	0f 93       	push	r16
    1430:	1f 93       	push	r17
    1432:	cf 93       	push	r28
    1434:	df 93       	push	r29
    1436:	cd b7       	in	r28, 0x3d	; 61
    1438:	de b7       	in	r29, 0x3e	; 62
    143a:	ca 1b       	sub	r28, r26
    143c:	db 0b       	sbc	r29, r27
    143e:	0f b6       	in	r0, 0x3f	; 63
    1440:	f8 94       	cli
    1442:	de bf       	out	0x3e, r29	; 62
    1444:	0f be       	out	0x3f, r0	; 63
    1446:	cd bf       	out	0x3d, r28	; 61
    1448:	09 94       	ijmp

0000144a <__epilogue_restores__>:
    144a:	2a 88       	ldd	r2, Y+18	; 0x12
    144c:	39 88       	ldd	r3, Y+17	; 0x11
    144e:	48 88       	ldd	r4, Y+16	; 0x10
    1450:	5f 84       	ldd	r5, Y+15	; 0x0f
    1452:	6e 84       	ldd	r6, Y+14	; 0x0e
    1454:	7d 84       	ldd	r7, Y+13	; 0x0d
    1456:	8c 84       	ldd	r8, Y+12	; 0x0c
    1458:	9b 84       	ldd	r9, Y+11	; 0x0b
    145a:	aa 84       	ldd	r10, Y+10	; 0x0a
    145c:	b9 84       	ldd	r11, Y+9	; 0x09
    145e:	c8 84       	ldd	r12, Y+8	; 0x08
    1460:	df 80       	ldd	r13, Y+7	; 0x07
    1462:	ee 80       	ldd	r14, Y+6	; 0x06
    1464:	fd 80       	ldd	r15, Y+5	; 0x05
    1466:	0c 81       	ldd	r16, Y+4	; 0x04
    1468:	1b 81       	ldd	r17, Y+3	; 0x03
    146a:	aa 81       	ldd	r26, Y+2	; 0x02
    146c:	b9 81       	ldd	r27, Y+1	; 0x01
    146e:	ce 0f       	add	r28, r30
    1470:	d1 1d       	adc	r29, r1
    1472:	0f b6       	in	r0, 0x3f	; 63
    1474:	f8 94       	cli
    1476:	de bf       	out	0x3e, r29	; 62
    1478:	0f be       	out	0x3f, r0	; 63
    147a:	cd bf       	out	0x3d, r28	; 61
    147c:	ed 01       	movw	r28, r26
    147e:	08 95       	ret

00001480 <_exit>:
    1480:	f8 94       	cli

00001482 <__stop_program>:
    1482:	ff cf       	rjmp	.-2      	; 0x1482 <__stop_program>
