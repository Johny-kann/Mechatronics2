
Proj2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004e  00800100  00001448  000014dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001448  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080014e  0080014e  0000152a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000152a  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000218  00000000  00000000  00001586  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000032f0  00000000  00000000  0000179e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a39  00000000  00000000  00004a8e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a79  00000000  00000000  000054c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000558  00000000  00000000  00005f40  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000009f2  00000000  00000000  00006498  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00002778  00000000  00000000  00006e8a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001c8  00000000  00000000  00009602  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 cd 03 	jmp	0x79a	; 0x79a <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e8 e4       	ldi	r30, 0x48	; 72
      7c:	f4 e1       	ldi	r31, 0x14	; 20
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ae 34       	cpi	r26, 0x4E	; 78
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	21 e0       	ldi	r18, 0x01	; 1
      8c:	ae e4       	ldi	r26, 0x4E	; 78
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a4 35       	cpi	r26, 0x54	; 84
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 8b 03 	call	0x716	; 0x716 <main>
      9e:	0c 94 22 0a 	jmp	0x1444	; 0x1444 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z8adc_initv>:



void adc_init()
{
	ADMUX |= (1<<REFS0);
      a6:	ec e7       	ldi	r30, 0x7C	; 124
      a8:	f0 e0       	ldi	r31, 0x00	; 0
      aa:	80 81       	ld	r24, Z
      ac:	80 64       	ori	r24, 0x40	; 64
      ae:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADPS0) | (1<<ADPS1) | (1<<ADPS2) | (1<<ADEN);
      b0:	ea e7       	ldi	r30, 0x7A	; 122
      b2:	f0 e0       	ldi	r31, 0x00	; 0
      b4:	80 81       	ld	r24, Z
      b6:	87 68       	ori	r24, 0x87	; 135
      b8:	80 83       	st	Z, r24
      ba:	08 95       	ret

000000bc <_Z21timer0_interrupt_initv>:
}

void timer0_interrupt_init()
{
	
	TCCR0B |= 1<< CS01 | 1<<CS00;
      bc:	85 b5       	in	r24, 0x25	; 37
      be:	83 60       	ori	r24, 0x03	; 3
      c0:	85 bd       	out	0x25, r24	; 37
	//| 1<<WGM02;
	TIMSK0 = 1 << OCIE0A;
      c2:	82 e0       	ldi	r24, 0x02	; 2
      c4:	80 93 6e 00 	sts	0x006E, r24
      c8:	08 95       	ret

000000ca <_Z8adc_readh>:
//}

uint16_t adc_read(uint8_t ch)
{
	ch &= 0b00000111;
	ADMUX = (ADMUX & 0xF8)|ch;
      ca:	ec e7       	ldi	r30, 0x7C	; 124
      cc:	f0 e0       	ldi	r31, 0x00	; 0
      ce:	90 81       	ld	r25, Z
//	USART_Send_string("pt");
//}

uint16_t adc_read(uint8_t ch)
{
	ch &= 0b00000111;
      d0:	87 70       	andi	r24, 0x07	; 7
	ADMUX = (ADMUX & 0xF8)|ch;
      d2:	98 7f       	andi	r25, 0xF8	; 248
      d4:	98 2b       	or	r25, r24
      d6:	90 83       	st	Z, r25

	ADCSRA |= (1<<ADSC);
      d8:	ea e7       	ldi	r30, 0x7A	; 122
      da:	f0 e0       	ldi	r31, 0x00	; 0
      dc:	80 81       	ld	r24, Z
      de:	80 64       	ori	r24, 0x40	; 64
      e0:	80 83       	st	Z, r24
	
	while(ADCSRA & (1<<ADSC));
      e2:	80 81       	ld	r24, Z
      e4:	86 fd       	sbrc	r24, 6
      e6:	fd cf       	rjmp	.-6      	; 0xe2 <_Z8adc_readh+0x18>
	
	return (ADC);
      e8:	80 91 78 00 	lds	r24, 0x0078
      ec:	90 91 79 00 	lds	r25, 0x0079
}
      f0:	08 95       	ret

000000f2 <_Z5readXv>:

uint16_t readX()
{
	
	DDRC &= ~(1<<DDC0 | 1<<DDC2);
      f2:	87 b1       	in	r24, 0x07	; 7
      f4:	8a 7f       	andi	r24, 0xFA	; 250
      f6:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1<<DDC1 | 1<<DDC3);
      f8:	87 b1       	in	r24, 0x07	; 7
      fa:	8a 60       	ori	r24, 0x0A	; 10
      fc:	87 b9       	out	0x07, r24	; 7
	
	PORTC &= ~(1<<PORTC1);
      fe:	41 98       	cbi	0x08, 1	; 8
	PORTC |=  (1<<PORTC3);
     100:	43 9a       	sbi	0x08, 3	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     102:	8f e1       	ldi	r24, 0x1F	; 31
     104:	9e e4       	ldi	r25, 0x4E	; 78
     106:	01 97       	sbiw	r24, 0x01	; 1
     108:	f1 f7       	brne	.-4      	; 0x106 <_Z5readXv+0x14>
     10a:	00 c0       	rjmp	.+0      	; 0x10c <_Z5readXv+0x1a>
     10c:	00 00       	nop
	
	_delay_ms(5);
	
	return adc_read(0);
     10e:	80 e0       	ldi	r24, 0x00	; 0
     110:	0e 94 65 00 	call	0xca	; 0xca <_Z8adc_readh>
	
}
     114:	08 95       	ret

00000116 <_Z5readYv>:

uint16_t readY()
{
	DDRC &= ~(1<<DDC1 | 1<<DDC3);
     116:	87 b1       	in	r24, 0x07	; 7
     118:	85 7f       	andi	r24, 0xF5	; 245
     11a:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1<<DDC0 | 1<<DDC2);
     11c:	87 b1       	in	r24, 0x07	; 7
     11e:	85 60       	ori	r24, 0x05	; 5
     120:	87 b9       	out	0x07, r24	; 7
	
	PORTC &= ~(1<<PORTC0);
     122:	40 98       	cbi	0x08, 0	; 8
	PORTC |=  (1<<PORTC2);
     124:	42 9a       	sbi	0x08, 2	; 8
     126:	8f e1       	ldi	r24, 0x1F	; 31
     128:	9e e4       	ldi	r25, 0x4E	; 78
     12a:	01 97       	sbiw	r24, 0x01	; 1
     12c:	f1 f7       	brne	.-4      	; 0x12a <_Z5readYv+0x14>
     12e:	00 c0       	rjmp	.+0      	; 0x130 <_Z5readYv+0x1a>
     130:	00 00       	nop
	
	_delay_ms(5);
	
	return adc_read(1);
     132:	81 e0       	ldi	r24, 0x01	; 1
     134:	0e 94 65 00 	call	0xca	; 0xca <_Z8adc_readh>
}
     138:	08 95       	ret

0000013a <_Z15angleConversionjjjjj>:

uint16_t angleConversion(uint16_t touchPoint,uint16_t minTouch,uint16_t maxTouch,uint16_t minAngle,uint16_t maxAngle)
{
     13a:	8f 92       	push	r8
     13c:	9f 92       	push	r9
     13e:	af 92       	push	r10
     140:	bf 92       	push	r11
     142:	cf 92       	push	r12
     144:	df 92       	push	r13
     146:	ef 92       	push	r14
     148:	ff 92       	push	r15
     14a:	0f 93       	push	r16
     14c:	1f 93       	push	r17
     14e:	cf 93       	push	r28
     150:	df 93       	push	r29
     152:	7b 01       	movw	r14, r22
     154:	6a 01       	movw	r12, r20
     156:	e9 01       	movw	r28, r18
	touchPoint = 1024 - touchPoint;
     158:	60 e0       	ldi	r22, 0x00	; 0
     15a:	74 e0       	ldi	r23, 0x04	; 4
     15c:	9b 01       	movw	r18, r22
     15e:	28 1b       	sub	r18, r24
     160:	39 0b       	sbc	r19, r25
     162:	c9 01       	movw	r24, r18
	if(touchPoint < minTouch)
     164:	2e 15       	cp	r18, r14
     166:	3f 05       	cpc	r19, r15
     168:	28 f0       	brcs	.+10     	; 0x174 <_Z15angleConversionjjjjj+0x3a>
     16a:	42 17       	cp	r20, r18
     16c:	53 07       	cpc	r21, r19
     16e:	18 f4       	brcc	.+6      	; 0x176 <_Z15angleConversionjjjjj+0x3c>
     170:	ca 01       	movw	r24, r20
     172:	01 c0       	rjmp	.+2      	; 0x176 <_Z15angleConversionjjjjj+0x3c>
		touchPoint = minTouch;
     174:	c7 01       	movw	r24, r14
	else if(touchPoint > maxTouch)
		touchPoint = maxTouch;
	return (uint16_t)(((float)(touchPoint-minTouch))/(maxTouch-minTouch)*(maxAngle-minAngle)+minAngle);
     176:	bc 01       	movw	r22, r24
     178:	6e 19       	sub	r22, r14
     17a:	7f 09       	sbc	r23, r15
     17c:	80 e0       	ldi	r24, 0x00	; 0
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	0e 94 51 06 	call	0xca2	; 0xca2 <__floatunsisf>
     184:	4b 01       	movw	r8, r22
     186:	5c 01       	movw	r10, r24
     188:	b6 01       	movw	r22, r12
     18a:	6e 19       	sub	r22, r14
     18c:	7f 09       	sbc	r23, r15
     18e:	80 e0       	ldi	r24, 0x00	; 0
     190:	90 e0       	ldi	r25, 0x00	; 0
     192:	0e 94 51 06 	call	0xca2	; 0xca2 <__floatunsisf>
     196:	9b 01       	movw	r18, r22
     198:	ac 01       	movw	r20, r24
     19a:	c5 01       	movw	r24, r10
     19c:	b4 01       	movw	r22, r8
     19e:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__divsf3>
     1a2:	6b 01       	movw	r12, r22
     1a4:	7c 01       	movw	r14, r24
     1a6:	b8 01       	movw	r22, r16
     1a8:	6c 1b       	sub	r22, r28
     1aa:	7d 0b       	sbc	r23, r29
     1ac:	80 e0       	ldi	r24, 0x00	; 0
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	0e 94 51 06 	call	0xca2	; 0xca2 <__floatunsisf>
     1b4:	9b 01       	movw	r18, r22
     1b6:	ac 01       	movw	r20, r24
     1b8:	c7 01       	movw	r24, r14
     1ba:	b6 01       	movw	r22, r12
     1bc:	0e 94 df 06 	call	0xdbe	; 0xdbe <__mulsf3>
     1c0:	6b 01       	movw	r12, r22
     1c2:	7c 01       	movw	r14, r24
     1c4:	be 01       	movw	r22, r28
     1c6:	80 e0       	ldi	r24, 0x00	; 0
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	0e 94 51 06 	call	0xca2	; 0xca2 <__floatunsisf>
     1ce:	9b 01       	movw	r18, r22
     1d0:	ac 01       	movw	r20, r24
     1d2:	c7 01       	movw	r24, r14
     1d4:	b6 01       	movw	r22, r12
     1d6:	0e 94 59 05 	call	0xab2	; 0xab2 <__addsf3>
     1da:	0e 94 25 06 	call	0xc4a	; 0xc4a <__fixunssfsi>
}
     1de:	cb 01       	movw	r24, r22
     1e0:	df 91       	pop	r29
     1e2:	cf 91       	pop	r28
     1e4:	1f 91       	pop	r17
     1e6:	0f 91       	pop	r16
     1e8:	ff 90       	pop	r15
     1ea:	ef 90       	pop	r14
     1ec:	df 90       	pop	r13
     1ee:	cf 90       	pop	r12
     1f0:	bf 90       	pop	r11
     1f2:	af 90       	pop	r10
     1f4:	9f 90       	pop	r9
     1f6:	8f 90       	pop	r8
     1f8:	08 95       	ret

000001fa <_Z6stepssi>:


uint16_t stepss(int angle)
{
	return (uint16_t)((float)angle*200/360);
     1fa:	bc 01       	movw	r22, r24
     1fc:	88 27       	eor	r24, r24
     1fe:	77 fd       	sbrc	r23, 7
     200:	80 95       	com	r24
     202:	98 2f       	mov	r25, r24
     204:	0e 94 53 06 	call	0xca6	; 0xca6 <__floatsisf>
     208:	20 e0       	ldi	r18, 0x00	; 0
     20a:	30 e0       	ldi	r19, 0x00	; 0
     20c:	48 e4       	ldi	r20, 0x48	; 72
     20e:	53 e4       	ldi	r21, 0x43	; 67
     210:	0e 94 df 06 	call	0xdbe	; 0xdbe <__mulsf3>
     214:	20 e0       	ldi	r18, 0x00	; 0
     216:	30 e0       	ldi	r19, 0x00	; 0
     218:	44 eb       	ldi	r20, 0xB4	; 180
     21a:	53 e4       	ldi	r21, 0x43	; 67
     21c:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__divsf3>
     220:	0e 94 25 06 	call	0xc4a	; 0xc4a <__fixunssfsi>
}
     224:	cb 01       	movw	r24, r22
     226:	08 95       	ret

00000228 <_ZN5PagesC1Ev>:
		_delay_ms(500);
		this->servo.setDegree(angle);
	}
}

 Pages::Pages()
     228:	cf 93       	push	r28
     22a:	df 93       	push	r29
     22c:	ec 01       	movw	r28, r24
     22e:	05 96       	adiw	r24, 0x05	; 5
     230:	0e 94 98 04 	call	0x930	; 0x930 <_ZN12StepperMotorC1Ev>
{
	this->lcd.init_lcd();
     234:	22 96       	adiw	r28, 0x02	; 2
     236:	ce 01       	movw	r24, r28
     238:	0e 94 de 04 	call	0x9bc	; 0x9bc <_ZN10LcdDisplay8init_lcdEv>
	this->lcd.clearDisplay();
     23c:	ce 01       	movw	r24, r28
     23e:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <_ZN10LcdDisplay12clearDisplayEv>
	
}
     242:	df 91       	pop	r29
     244:	cf 91       	pop	r28
     246:	08 95       	ret

00000248 <_ZN5Pages9dispPage1Ev>:

void Pages::dispPage1()
{	
     248:	cf 93       	push	r28
     24a:	df 93       	push	r29
	this->pageNo = 1;
     24c:	ec 01       	movw	r28, r24
     24e:	81 e0       	ldi	r24, 0x01	; 1
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	89 93       	st	Y+, r24
     254:	99 93       	st	Y+, r25
	this->lcd.clearDisplay();
     256:	ce 01       	movw	r24, r28
     258:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <_ZN10LcdDisplay12clearDisplayEv>
	this->lcd.displayString("Servo");
     25c:	60 e0       	ldi	r22, 0x00	; 0
     25e:	71 e0       	ldi	r23, 0x01	; 1
     260:	ce 01       	movw	r24, r28
     262:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <_ZN10LcdDisplay13displayStringEPKc>

	this->lcd.gotoXY(2,10);
     266:	4a e0       	ldi	r20, 0x0A	; 10
     268:	50 e0       	ldi	r21, 0x00	; 0
     26a:	62 e0       	ldi	r22, 0x02	; 2
     26c:	ce 01       	movw	r24, r28
     26e:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("Stepper");
     272:	66 e0       	ldi	r22, 0x06	; 6
     274:	71 e0       	ldi	r23, 0x01	; 1
     276:	ce 01       	movw	r24, r28
     278:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <_ZN10LcdDisplay13displayStringEPKc>
//	_delay_ms(500);
}
     27c:	df 91       	pop	r29
     27e:	cf 91       	pop	r28
     280:	08 95       	ret

00000282 <_ZN5Pages9introPageEv>:
			this->page4Action(posx,posy);
	}
}

void Pages::introPage()
{
     282:	0f 93       	push	r16
     284:	1f 93       	push	r17
     286:	cf 93       	push	r28
     288:	df 93       	push	r29
     28a:	8c 01       	movw	r16, r24
	lcd.clearDisplay();
     28c:	ec 01       	movw	r28, r24
     28e:	22 96       	adiw	r28, 0x02	; 2
     290:	ce 01       	movw	r24, r28
     292:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <_ZN10LcdDisplay12clearDisplayEv>
	lcd.gotoXY(1,4)	;
     296:	44 e0       	ldi	r20, 0x04	; 4
     298:	50 e0       	ldi	r21, 0x00	; 0
     29a:	61 e0       	ldi	r22, 0x01	; 1
     29c:	ce 01       	movw	r24, r28
     29e:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <_ZN10LcdDisplay6gotoXYEhj>
	lcd.displayString("Welcome to ");
     2a2:	6e e0       	ldi	r22, 0x0E	; 14
     2a4:	71 e0       	ldi	r23, 0x01	; 1
     2a6:	ce 01       	movw	r24, r28
     2a8:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <_ZN10LcdDisplay13displayStringEPKc>
	lcd.gotoXY(2,4)	;
     2ac:	44 e0       	ldi	r20, 0x04	; 4
     2ae:	50 e0       	ldi	r21, 0x00	; 0
     2b0:	62 e0       	ldi	r22, 0x02	; 2
     2b2:	ce 01       	movw	r24, r28
     2b4:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <_ZN10LcdDisplay6gotoXYEhj>
	lcd.displayString("Johny's Proj");
     2b8:	6a e1       	ldi	r22, 0x1A	; 26
     2ba:	71 e0       	ldi	r23, 0x01	; 1
     2bc:	ce 01       	movw	r24, r28
     2be:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <_ZN10LcdDisplay13displayStringEPKc>
     2c2:	2f ef       	ldi	r18, 0xFF	; 255
     2c4:	87 ea       	ldi	r24, 0xA7	; 167
     2c6:	91 e6       	ldi	r25, 0x61	; 97
     2c8:	21 50       	subi	r18, 0x01	; 1
     2ca:	80 40       	sbci	r24, 0x00	; 0
     2cc:	90 40       	sbci	r25, 0x00	; 0
     2ce:	e1 f7       	brne	.-8      	; 0x2c8 <_ZN5Pages9introPageEv+0x46>
     2d0:	00 c0       	rjmp	.+0      	; 0x2d2 <_ZN5Pages9introPageEv+0x50>
     2d2:	00 00       	nop
	_delay_ms(2000);
	this->dispPage1();
     2d4:	c8 01       	movw	r24, r16
     2d6:	0e 94 24 01 	call	0x248	; 0x248 <_ZN5Pages9dispPage1Ev>
}
     2da:	df 91       	pop	r29
     2dc:	cf 91       	pop	r28
     2de:	1f 91       	pop	r17
     2e0:	0f 91       	pop	r16
     2e2:	08 95       	ret

000002e4 <_ZN5Pages9dispPage2Ev>:
	this->lcd.displayString("Stepper");
//	_delay_ms(500);
}

void Pages::dispPage2()
{
     2e4:	cf 93       	push	r28
     2e6:	df 93       	push	r29
	this->pageNo = 2;
     2e8:	ec 01       	movw	r28, r24
     2ea:	82 e0       	ldi	r24, 0x02	; 2
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	89 93       	st	Y+, r24
     2f0:	99 93       	st	Y+, r25
	this->lcd.clearDisplay();
     2f2:	ce 01       	movw	r24, r28
     2f4:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <_ZN10LcdDisplay12clearDisplayEv>
	this->lcd.displayString("CW");
     2f8:	6d e2       	ldi	r22, 0x2D	; 45
     2fa:	71 e0       	ldi	r23, 0x01	; 1
     2fc:	ce 01       	movw	r24, r28
     2fe:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(2,7);
     302:	47 e0       	ldi	r20, 0x07	; 7
     304:	50 e0       	ldi	r21, 0x00	; 0
     306:	62 e0       	ldi	r22, 0x02	; 2
     308:	ce 01       	movw	r24, r28
     30a:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("Home");
     30e:	67 e2       	ldi	r22, 0x27	; 39
     310:	71 e0       	ldi	r23, 0x01	; 1
     312:	ce 01       	movw	r24, r28
     314:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(1,14);
     318:	4e e0       	ldi	r20, 0x0E	; 14
     31a:	50 e0       	ldi	r21, 0x00	; 0
     31c:	61 e0       	ldi	r22, 0x01	; 1
     31e:	ce 01       	movw	r24, r28
     320:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("CCW");
     324:	6c e2       	ldi	r22, 0x2C	; 44
     326:	71 e0       	ldi	r23, 0x01	; 1
     328:	ce 01       	movw	r24, r28
     32a:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <_ZN10LcdDisplay13displayStringEPKc>
//	_delay_ms(500);

}
     32e:	df 91       	pop	r29
     330:	cf 91       	pop	r28
     332:	08 95       	ret

00000334 <_ZN5Pages9dispPage4Ev>:

void Pages::dispPage4()
{
     334:	cf 93       	push	r28
     336:	df 93       	push	r29
	this->pageNo = 4;
     338:	ec 01       	movw	r28, r24
     33a:	84 e0       	ldi	r24, 0x04	; 4
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	89 93       	st	Y+, r24
     340:	99 93       	st	Y+, r25
	this->lcd.clearDisplay();
     342:	ce 01       	movw	r24, r28
     344:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <_ZN10LcdDisplay12clearDisplayEv>
	this->lcd.displayString("Servo");
     348:	60 e0       	ldi	r22, 0x00	; 0
     34a:	71 e0       	ldi	r23, 0x01	; 1
     34c:	ce 01       	movw	r24, r28
     34e:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(1,13);
     352:	4d e0       	ldi	r20, 0x0D	; 13
     354:	50 e0       	ldi	r21, 0x00	; 0
     356:	61 e0       	ldi	r22, 0x01	; 1
     358:	ce 01       	movw	r24, r28
     35a:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("Home");
     35e:	67 e2       	ldi	r22, 0x27	; 39
     360:	71 e0       	ldi	r23, 0x01	; 1
     362:	ce 01       	movw	r24, r28
     364:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(2,1);
     368:	41 e0       	ldi	r20, 0x01	; 1
     36a:	50 e0       	ldi	r21, 0x00	; 0
     36c:	62 e0       	ldi	r22, 0x02	; 2
     36e:	ce 01       	movw	r24, r28
     370:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("0 - - -");
     374:	60 e3       	ldi	r22, 0x30	; 48
     376:	71 e0       	ldi	r23, 0x01	; 1
     378:	ce 01       	movw	r24, r28
     37a:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(2,9);
     37e:	49 e0       	ldi	r20, 0x09	; 9
     380:	50 e0       	ldi	r21, 0x00	; 0
     382:	62 e0       	ldi	r22, 0x02	; 2
     384:	ce 01       	movw	r24, r28
     386:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("- - -160");
     38a:	68 e3       	ldi	r22, 0x38	; 56
     38c:	71 e0       	ldi	r23, 0x01	; 1
     38e:	ce 01       	movw	r24, r28
     390:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <_ZN10LcdDisplay13displayStringEPKc>
//	_delay_ms(500);
}
     394:	df 91       	pop	r29
     396:	cf 91       	pop	r28
     398:	08 95       	ret

0000039a <_ZN5Pages11page1ActionEjj>:
	_delay_ms(2000);
	this->dispPage1();
}

void Pages::page1Action(uint16_t posx,uint16_t posy)
{
     39a:	cf 93       	push	r28
     39c:	df 93       	push	r29
     39e:	ec 01       	movw	r28, r24
//	_delay_ms(500);
}

bool Pages::range(int num,int max,int min)
{
	return (num<max && num>min)?true:false;
     3a0:	9b 01       	movw	r18, r22
     3a2:	21 53       	subi	r18, 0x31	; 49
     3a4:	32 40       	sbci	r19, 0x02	; 2
     3a6:	25 38       	cpi	r18, 0x85	; 133
     3a8:	31 40       	sbci	r19, 0x01	; 1
     3aa:	30 f4       	brcc	.+12     	; 0x3b8 <_ZN5Pages11page1ActionEjj+0x1e>
     3ac:	ca 01       	movw	r24, r20
     3ae:	81 52       	subi	r24, 0x21	; 33
     3b0:	93 40       	sbci	r25, 0x03	; 3
     3b2:	85 39       	cpi	r24, 0x95	; 149
     3b4:	91 05       	cpc	r25, r1
     3b6:	58 f0       	brcs	.+22     	; 0x3ce <_ZN5Pages11page1ActionEjj+0x34>
     3b8:	65 56       	subi	r22, 0x65	; 101
     3ba:	71 09       	sbc	r23, r1
     3bc:	6d 35       	cpi	r22, 0x5D	; 93
     3be:	71 40       	sbci	r23, 0x01	; 1
     3c0:	18 f5       	brcc	.+70     	; 0x408 <_ZN5Pages11page1ActionEjj+0x6e>
     3c2:	4b 58       	subi	r20, 0x8B	; 139
     3c4:	52 40       	sbci	r21, 0x02	; 2
     3c6:	4b 38       	cpi	r20, 0x8B	; 139
     3c8:	51 05       	cpc	r21, r1
     3ca:	f0 f4       	brcc	.+60     	; 0x408 <_ZN5Pages11page1ActionEjj+0x6e>
     3cc:	11 c0       	rjmp	.+34     	; 0x3f0 <_ZN5Pages11page1ActionEjj+0x56>
void Pages::page1Action(uint16_t posx,uint16_t posy)
{
	if(range(posx,950,560) && range(posy,950,800))
	{
		
		dispPage4();
     3ce:	ce 01       	movw	r24, r28
     3d0:	0e 94 9a 01 	call	0x334	; 0x334 <_ZN5Pages9dispPage4Ev>
		this->servo.initAttachTimer();
     3d4:	ce 01       	movw	r24, r28
     3d6:	03 96       	adiw	r24, 0x03	; 3
     3d8:	0e 94 4b 04 	call	0x896	; 0x896 <_ZN5Servo15initAttachTimerEv>
     3dc:	2f ef       	ldi	r18, 0xFF	; 255
     3de:	89 e6       	ldi	r24, 0x69	; 105
     3e0:	98 e1       	ldi	r25, 0x18	; 24
     3e2:	21 50       	subi	r18, 0x01	; 1
     3e4:	80 40       	sbci	r24, 0x00	; 0
     3e6:	90 40       	sbci	r25, 0x00	; 0
     3e8:	e1 f7       	brne	.-8      	; 0x3e2 <_ZN5Pages11page1ActionEjj+0x48>
     3ea:	00 c0       	rjmp	.+0      	; 0x3ec <_ZN5Pages11page1ActionEjj+0x52>
     3ec:	00 00       	nop
     3ee:	0c c0       	rjmp	.+24     	; 0x408 <_ZN5Pages11page1ActionEjj+0x6e>
		_delay_ms(500);
	}
	else if(range(posx,450,100) && range(posy,790,650))
	{
		dispPage2();
     3f0:	ce 01       	movw	r24, r28
     3f2:	0e 94 72 01 	call	0x2e4	; 0x2e4 <_ZN5Pages9dispPage2Ev>
     3f6:	2f ef       	ldi	r18, 0xFF	; 255
     3f8:	89 e6       	ldi	r24, 0x69	; 105
     3fa:	98 e1       	ldi	r25, 0x18	; 24
     3fc:	21 50       	subi	r18, 0x01	; 1
     3fe:	80 40       	sbci	r24, 0x00	; 0
     400:	90 40       	sbci	r25, 0x00	; 0
     402:	e1 f7       	brne	.-8      	; 0x3fc <_ZN5Pages11page1ActionEjj+0x62>
     404:	00 c0       	rjmp	.+0      	; 0x406 <_ZN5Pages11page1ActionEjj+0x6c>
     406:	00 00       	nop
		_delay_ms(500);
	}
}
     408:	df 91       	pop	r29
     40a:	cf 91       	pop	r28
     40c:	08 95       	ret

0000040e <_ZN5Pages11page4ActionEjj>:
		_delay_ms(1000);
	}
}

void Pages::page4Action(uint16_t posx,uint16_t posy)
{
     40e:	ef 92       	push	r14
     410:	ff 92       	push	r15
     412:	0f 93       	push	r16
     414:	1f 93       	push	r17
     416:	cf 93       	push	r28
     418:	df 93       	push	r29
     41a:	ec 01       	movw	r28, r24
     41c:	fb 01       	movw	r30, r22
//	_delay_ms(500);
}

bool Pages::range(int num,int max,int min)
{
	return (num<max && num>min)?true:false;
     41e:	9b 01       	movw	r18, r22
     420:	25 56       	subi	r18, 0x65	; 101
     422:	31 09       	sbc	r19, r1
     424:	2d 30       	cpi	r18, 0x0D	; 13
     426:	31 40       	sbci	r19, 0x01	; 1
     428:	30 f4       	brcc	.+12     	; 0x436 <_ZN5Pages11page4ActionEjj+0x28>
     42a:	ca 01       	movw	r24, r20
     42c:	81 52       	subi	r24, 0x21	; 33
     42e:	93 40       	sbci	r25, 0x03	; 3
     430:	85 39       	cpi	r24, 0x95	; 149
     432:	91 05       	cpc	r25, r1
     434:	68 f0       	brcs	.+26     	; 0x450 <_ZN5Pages11page4ActionEjj+0x42>
     436:	cf 01       	movw	r24, r30
     438:	83 58       	subi	r24, 0x83	; 131
     43a:	91 09       	sbc	r25, r1
     43c:	81 30       	cpi	r24, 0x01	; 1
     43e:	93 40       	sbci	r25, 0x03	; 3
     440:	08 f0       	brcs	.+2      	; 0x444 <_ZN5Pages11page4ActionEjj+0x36>
     442:	42 c0       	rjmp	.+132    	; 0x4c8 <_ZN5Pages11page4ActionEjj+0xba>
     444:	4b 58       	subi	r20, 0x8B	; 139
     446:	52 40       	sbci	r21, 0x02	; 2
     448:	4b 38       	cpi	r20, 0x8B	; 139
     44a:	51 05       	cpc	r21, r1
     44c:	e8 f5       	brcc	.+122    	; 0x4c8 <_ZN5Pages11page4ActionEjj+0xba>
     44e:	11 c0       	rjmp	.+34     	; 0x472 <_ZN5Pages11page4ActionEjj+0x64>

void Pages::page4Action(uint16_t posx,uint16_t posy)
{
	if(range(posx,370,100) && range(posy,950,800))
	{
		dispPage1();
     450:	ce 01       	movw	r24, r28
     452:	0e 94 24 01 	call	0x248	; 0x248 <_ZN5Pages9dispPage1Ev>
     456:	8f ef       	ldi	r24, 0xFF	; 255
     458:	99 e6       	ldi	r25, 0x69	; 105
     45a:	28 e1       	ldi	r18, 0x18	; 24
     45c:	81 50       	subi	r24, 0x01	; 1
     45e:	90 40       	sbci	r25, 0x00	; 0
     460:	20 40       	sbci	r18, 0x00	; 0
     462:	e1 f7       	brne	.-8      	; 0x45c <_ZN5Pages11page4ActionEjj+0x4e>
     464:	00 c0       	rjmp	.+0      	; 0x466 <_ZN5Pages11page4ActionEjj+0x58>
     466:	00 00       	nop
		_delay_ms(500);
		this->servo.stopTimer();
     468:	ce 01       	movw	r24, r28
     46a:	03 96       	adiw	r24, 0x03	; 3
     46c:	0e 94 40 04 	call	0x880	; 0x880 <_ZN5Servo9stopTimerEv>
     470:	2b c0       	rjmp	.+86     	; 0x4c8 <_ZN5Pages11page4ActionEjj+0xba>
	}
	else if(range(posx,900,130) && range(posy,790,650))
	{
		
		uint16_t angle = angleConversion(posx,165,870,0,160);
     472:	00 ea       	ldi	r16, 0xA0	; 160
     474:	10 e0       	ldi	r17, 0x00	; 0
     476:	20 e0       	ldi	r18, 0x00	; 0
     478:	30 e0       	ldi	r19, 0x00	; 0
     47a:	46 e6       	ldi	r20, 0x66	; 102
     47c:	53 e0       	ldi	r21, 0x03	; 3
     47e:	65 ea       	ldi	r22, 0xA5	; 165
     480:	70 e0       	ldi	r23, 0x00	; 0
     482:	cf 01       	movw	r24, r30
     484:	0e 94 9d 00 	call	0x13a	; 0x13a <_Z15angleConversionjjjjj>
     488:	8c 01       	movw	r16, r24
		dispPage4();
     48a:	ce 01       	movw	r24, r28
     48c:	0e 94 9a 01 	call	0x334	; 0x334 <_ZN5Pages9dispPage4Ev>
		
		this->lcd.gotoXY(1,9);
     490:	7e 01       	movw	r14, r28
     492:	82 e0       	ldi	r24, 0x02	; 2
     494:	e8 0e       	add	r14, r24
     496:	f1 1c       	adc	r15, r1
     498:	49 e0       	ldi	r20, 0x09	; 9
     49a:	50 e0       	ldi	r21, 0x00	; 0
     49c:	61 e0       	ldi	r22, 0x01	; 1
     49e:	c7 01       	movw	r24, r14
     4a0:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <_ZN10LcdDisplay6gotoXYEhj>
		
		this->lcd.displayInt(angle);
     4a4:	b8 01       	movw	r22, r16
     4a6:	c7 01       	movw	r24, r14
     4a8:	0e 94 ee 04 	call	0x9dc	; 0x9dc <_ZN10LcdDisplay10displayIntEi>
     4ac:	9f ef       	ldi	r25, 0xFF	; 255
     4ae:	29 e6       	ldi	r18, 0x69	; 105
     4b0:	88 e1       	ldi	r24, 0x18	; 24
     4b2:	91 50       	subi	r25, 0x01	; 1
     4b4:	20 40       	sbci	r18, 0x00	; 0
     4b6:	80 40       	sbci	r24, 0x00	; 0
     4b8:	e1 f7       	brne	.-8      	; 0x4b2 <_ZN5Pages11page4ActionEjj+0xa4>
     4ba:	00 c0       	rjmp	.+0      	; 0x4bc <_ZN5Pages11page4ActionEjj+0xae>
     4bc:	00 00       	nop

		_delay_ms(500);
		this->servo.setDegree(angle);
     4be:	b8 01       	movw	r22, r16
     4c0:	ce 01       	movw	r24, r28
     4c2:	03 96       	adiw	r24, 0x03	; 3
     4c4:	0e 94 24 04 	call	0x848	; 0x848 <_ZN5Servo9setDegreeEj>
	}
}
     4c8:	df 91       	pop	r29
     4ca:	cf 91       	pop	r28
     4cc:	1f 91       	pop	r17
     4ce:	0f 91       	pop	r16
     4d0:	ff 90       	pop	r15
     4d2:	ef 90       	pop	r14
     4d4:	08 95       	ret

000004d6 <_ZN5Pages9dispPage3Ev>:
}



void Pages::dispPage3()
{
     4d6:	cf 93       	push	r28
     4d8:	df 93       	push	r29
	this->pageNo = 3;
     4da:	ec 01       	movw	r28, r24
     4dc:	83 e0       	ldi	r24, 0x03	; 3
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	89 93       	st	Y+, r24
     4e2:	99 93       	st	Y+, r25
	this->lcd.clearDisplay();
     4e4:	ce 01       	movw	r24, r28
     4e6:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <_ZN10LcdDisplay12clearDisplayEv>
	this->lcd.displayString("Stepper");
     4ea:	66 e0       	ldi	r22, 0x06	; 6
     4ec:	71 e0       	ldi	r23, 0x01	; 1
     4ee:	ce 01       	movw	r24, r28
     4f0:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(1,13);
     4f4:	4d e0       	ldi	r20, 0x0D	; 13
     4f6:	50 e0       	ldi	r21, 0x00	; 0
     4f8:	61 e0       	ldi	r22, 0x01	; 1
     4fa:	ce 01       	movw	r24, r28
     4fc:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("Home");
     500:	67 e2       	ldi	r22, 0x27	; 39
     502:	71 e0       	ldi	r23, 0x01	; 1
     504:	ce 01       	movw	r24, r28
     506:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <_ZN10LcdDisplay13displayStringEPKc>

	this->lcd.gotoXY(2,1);
     50a:	41 e0       	ldi	r20, 0x01	; 1
     50c:	50 e0       	ldi	r21, 0x00	; 0
     50e:	62 e0       	ldi	r22, 0x02	; 2
     510:	ce 01       	movw	r24, r28
     512:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("0 - - -");
     516:	60 e3       	ldi	r22, 0x30	; 48
     518:	71 e0       	ldi	r23, 0x01	; 1
     51a:	ce 01       	movw	r24, r28
     51c:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <_ZN10LcdDisplay13displayStringEPKc>
	this->lcd.gotoXY(2,9);
     520:	49 e0       	ldi	r20, 0x09	; 9
     522:	50 e0       	ldi	r21, 0x00	; 0
     524:	62 e0       	ldi	r22, 0x02	; 2
     526:	ce 01       	movw	r24, r28
     528:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <_ZN10LcdDisplay6gotoXYEhj>
	this->lcd.displayString("- - -359");
     52c:	61 e4       	ldi	r22, 0x41	; 65
     52e:	71 e0       	ldi	r23, 0x01	; 1
     530:	ce 01       	movw	r24, r28
     532:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <_ZN10LcdDisplay13displayStringEPKc>
	
}
     536:	df 91       	pop	r29
     538:	cf 91       	pop	r28
     53a:	08 95       	ret

0000053c <_ZN5Pages11page2ActionEjj>:
		_delay_ms(500);
	}
}

void Pages::page2Action(uint16_t posx,uint16_t posy)
{
     53c:	cf 93       	push	r28
     53e:	df 93       	push	r29
     540:	ec 01       	movw	r28, r24
//	_delay_ms(500);
}

bool Pages::range(int num,int max,int min)
{
	return (num<max && num>min)?true:false;
     542:	9b 01       	movw	r18, r22
     544:	21 52       	subi	r18, 0x21	; 33
     546:	33 40       	sbci	r19, 0x03	; 3
     548:	25 39       	cpi	r18, 0x95	; 149
     54a:	31 05       	cpc	r19, r1
     54c:	30 f4       	brcc	.+12     	; 0x55a <_ZN5Pages11page2ActionEjj+0x1e>
     54e:	ca 01       	movw	r24, r20
     550:	81 52       	subi	r24, 0x21	; 33
     552:	93 40       	sbci	r25, 0x03	; 3
     554:	85 39       	cpi	r24, 0x95	; 149
     556:	91 05       	cpc	r25, r1
     558:	b8 f0       	brcs	.+46     	; 0x588 <_ZN5Pages11page2ActionEjj+0x4c>
     55a:	cb 01       	movw	r24, r22
     55c:	85 56       	subi	r24, 0x65	; 101
     55e:	91 09       	sbc	r25, r1
     560:	83 3b       	cpi	r24, 0xB3	; 179
     562:	91 05       	cpc	r25, r1
     564:	30 f4       	brcc	.+12     	; 0x572 <_ZN5Pages11page2ActionEjj+0x36>
     566:	ca 01       	movw	r24, r20
     568:	81 52       	subi	r24, 0x21	; 33
     56a:	93 40       	sbci	r25, 0x03	; 3
     56c:	85 39       	cpi	r24, 0x95	; 149
     56e:	91 05       	cpc	r25, r1
     570:	e0 f0       	brcs	.+56     	; 0x5aa <_ZN5Pages11page2ActionEjj+0x6e>
     572:	61 59       	subi	r22, 0x91	; 145
     574:	71 40       	sbci	r23, 0x01	; 1
     576:	63 30       	cpi	r22, 0x03	; 3
     578:	71 40       	sbci	r23, 0x01	; 1
     57a:	a0 f5       	brcc	.+104    	; 0x5e4 <_ZN5Pages11page2ActionEjj+0xa8>
     57c:	4b 58       	subi	r20, 0x8B	; 139
     57e:	52 40       	sbci	r21, 0x02	; 2
     580:	4b 38       	cpi	r20, 0x8B	; 139
     582:	51 05       	cpc	r21, r1
     584:	78 f5       	brcc	.+94     	; 0x5e4 <_ZN5Pages11page2ActionEjj+0xa8>
     586:	22 c0       	rjmp	.+68     	; 0x5cc <_ZN5Pages11page2ActionEjj+0x90>

void Pages::page2Action(uint16_t posx,uint16_t posy)
{
	if(range(posx,950,800) && range(posy,950,800))
	{
		this->stepper.setForward();
     588:	ce 01       	movw	r24, r28
     58a:	05 96       	adiw	r24, 0x05	; 5
     58c:	0e 94 d7 04 	call	0x9ae	; 0x9ae <_ZN12StepperMotor10setForwardEv>
		dispPage3();
     590:	ce 01       	movw	r24, r28
     592:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <_ZN5Pages9dispPage3Ev>
     596:	8f ef       	ldi	r24, 0xFF	; 255
     598:	99 e6       	ldi	r25, 0x69	; 105
     59a:	28 e1       	ldi	r18, 0x18	; 24
     59c:	81 50       	subi	r24, 0x01	; 1
     59e:	90 40       	sbci	r25, 0x00	; 0
     5a0:	20 40       	sbci	r18, 0x00	; 0
     5a2:	e1 f7       	brne	.-8      	; 0x59c <_ZN5Pages11page2ActionEjj+0x60>
     5a4:	00 c0       	rjmp	.+0      	; 0x5a6 <_ZN5Pages11page2ActionEjj+0x6a>
     5a6:	00 00       	nop
     5a8:	1d c0       	rjmp	.+58     	; 0x5e4 <_ZN5Pages11page2ActionEjj+0xa8>
		
	}
	else if(range(posx,280,100) && range(posy,950,800))
	{
		
		this->stepper.setReverse();
     5aa:	ce 01       	movw	r24, r28
     5ac:	05 96       	adiw	r24, 0x05	; 5
     5ae:	0e 94 db 04 	call	0x9b6	; 0x9b6 <_ZN12StepperMotor10setReverseEv>
		dispPage3();
     5b2:	ce 01       	movw	r24, r28
     5b4:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <_ZN5Pages9dispPage3Ev>
     5b8:	8f ef       	ldi	r24, 0xFF	; 255
     5ba:	99 e6       	ldi	r25, 0x69	; 105
     5bc:	28 e1       	ldi	r18, 0x18	; 24
     5be:	81 50       	subi	r24, 0x01	; 1
     5c0:	90 40       	sbci	r25, 0x00	; 0
     5c2:	20 40       	sbci	r18, 0x00	; 0
     5c4:	e1 f7       	brne	.-8      	; 0x5be <_ZN5Pages11page2ActionEjj+0x82>
     5c6:	00 c0       	rjmp	.+0      	; 0x5c8 <_ZN5Pages11page2ActionEjj+0x8c>
     5c8:	00 00       	nop
     5ca:	0c c0       	rjmp	.+24     	; 0x5e4 <_ZN5Pages11page2ActionEjj+0xa8>
		_delay_ms(500);
		
	}
	else if(range(posx,660,400) && range(posy,790,650))
	{
		dispPage1();
     5cc:	ce 01       	movw	r24, r28
     5ce:	0e 94 24 01 	call	0x248	; 0x248 <_ZN5Pages9dispPage1Ev>
     5d2:	8f ef       	ldi	r24, 0xFF	; 255
     5d4:	99 e6       	ldi	r25, 0x69	; 105
     5d6:	28 e1       	ldi	r18, 0x18	; 24
     5d8:	81 50       	subi	r24, 0x01	; 1
     5da:	90 40       	sbci	r25, 0x00	; 0
     5dc:	20 40       	sbci	r18, 0x00	; 0
     5de:	e1 f7       	brne	.-8      	; 0x5d8 <_ZN5Pages11page2ActionEjj+0x9c>
     5e0:	00 c0       	rjmp	.+0      	; 0x5e2 <_ZN5Pages11page2ActionEjj+0xa6>
     5e2:	00 00       	nop
		_delay_ms(500);
		
	}
	
	
}
     5e4:	df 91       	pop	r29
     5e6:	cf 91       	pop	r28
     5e8:	08 95       	ret

000005ea <_ZN5Pages11page3ActionEjj>:

void Pages::page3Action(uint16_t posx,uint16_t posy)
{
     5ea:	ef 92       	push	r14
     5ec:	ff 92       	push	r15
     5ee:	0f 93       	push	r16
     5f0:	1f 93       	push	r17
     5f2:	cf 93       	push	r28
     5f4:	df 93       	push	r29
     5f6:	ec 01       	movw	r28, r24
     5f8:	fb 01       	movw	r30, r22
//	_delay_ms(500);
}

bool Pages::range(int num,int max,int min)
{
	return (num<max && num>min)?true:false;
     5fa:	9b 01       	movw	r18, r22
     5fc:	25 56       	subi	r18, 0x65	; 101
     5fe:	31 09       	sbc	r19, r1
     600:	2d 30       	cpi	r18, 0x0D	; 13
     602:	31 40       	sbci	r19, 0x01	; 1
     604:	30 f4       	brcc	.+12     	; 0x612 <_ZN5Pages11page3ActionEjj+0x28>
     606:	ca 01       	movw	r24, r20
     608:	81 52       	subi	r24, 0x21	; 33
     60a:	93 40       	sbci	r25, 0x03	; 3
     60c:	85 39       	cpi	r24, 0x95	; 149
     60e:	91 05       	cpc	r25, r1
     610:	70 f0       	brcs	.+28     	; 0x62e <_ZN5Pages11page3ActionEjj+0x44>
     612:	cf 01       	movw	r24, r30
     614:	83 58       	subi	r24, 0x83	; 131
     616:	91 09       	sbc	r25, r1
     618:	81 30       	cpi	r24, 0x01	; 1
     61a:	93 40       	sbci	r25, 0x03	; 3
     61c:	08 f0       	brcs	.+2      	; 0x620 <_ZN5Pages11page3ActionEjj+0x36>
     61e:	4a c0       	rjmp	.+148    	; 0x6b4 <_ZN5Pages11page3ActionEjj+0xca>
     620:	4b 58       	subi	r20, 0x8B	; 139
     622:	52 40       	sbci	r21, 0x02	; 2
     624:	4b 38       	cpi	r20, 0x8B	; 139
     626:	51 05       	cpc	r21, r1
     628:	08 f0       	brcs	.+2      	; 0x62c <_ZN5Pages11page3ActionEjj+0x42>
     62a:	44 c0       	rjmp	.+136    	; 0x6b4 <_ZN5Pages11page3ActionEjj+0xca>
     62c:	0d c0       	rjmp	.+26     	; 0x648 <_ZN5Pages11page3ActionEjj+0x5e>

void Pages::page3Action(uint16_t posx,uint16_t posy)
{
	if(range(posx,370,100) && range(posy,950,800))
	{
		dispPage1();
     62e:	ce 01       	movw	r24, r28
     630:	0e 94 24 01 	call	0x248	; 0x248 <_ZN5Pages9dispPage1Ev>
     634:	8f ef       	ldi	r24, 0xFF	; 255
     636:	99 e6       	ldi	r25, 0x69	; 105
     638:	28 e1       	ldi	r18, 0x18	; 24
     63a:	81 50       	subi	r24, 0x01	; 1
     63c:	90 40       	sbci	r25, 0x00	; 0
     63e:	20 40       	sbci	r18, 0x00	; 0
     640:	e1 f7       	brne	.-8      	; 0x63a <_ZN5Pages11page3ActionEjj+0x50>
     642:	00 c0       	rjmp	.+0      	; 0x644 <_ZN5Pages11page3ActionEjj+0x5a>
     644:	00 00       	nop
     646:	36 c0       	rjmp	.+108    	; 0x6b4 <_ZN5Pages11page3ActionEjj+0xca>
		_delay_ms(500);
	}
	else if(range(posx,900,130) && range(posy,790,650))
	{
		uint16_t angle = angleConversion(posx,165,870,0,359);
     648:	07 e6       	ldi	r16, 0x67	; 103
     64a:	11 e0       	ldi	r17, 0x01	; 1
     64c:	20 e0       	ldi	r18, 0x00	; 0
     64e:	30 e0       	ldi	r19, 0x00	; 0
     650:	46 e6       	ldi	r20, 0x66	; 102
     652:	53 e0       	ldi	r21, 0x03	; 3
     654:	65 ea       	ldi	r22, 0xA5	; 165
     656:	70 e0       	ldi	r23, 0x00	; 0
     658:	cf 01       	movw	r24, r30
     65a:	0e 94 9d 00 	call	0x13a	; 0x13a <_Z15angleConversionjjjjj>
     65e:	8c 01       	movw	r16, r24
		
		dispPage3();
     660:	ce 01       	movw	r24, r28
     662:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <_ZN5Pages9dispPage3Ev>
		
		this->lcd.gotoXY(1,9);
     666:	7e 01       	movw	r14, r28
     668:	82 e0       	ldi	r24, 0x02	; 2
     66a:	e8 0e       	add	r14, r24
     66c:	f1 1c       	adc	r15, r1
     66e:	49 e0       	ldi	r20, 0x09	; 9
     670:	50 e0       	ldi	r21, 0x00	; 0
     672:	61 e0       	ldi	r22, 0x01	; 1
     674:	c7 01       	movw	r24, r14
     676:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <_ZN10LcdDisplay6gotoXYEhj>
		this->lcd.displayInt(angle);
     67a:	b8 01       	movw	r22, r16
     67c:	c7 01       	movw	r24, r14
     67e:	0e 94 ee 04 	call	0x9dc	; 0x9dc <_ZN10LcdDisplay10displayIntEi>
     682:	9f ef       	ldi	r25, 0xFF	; 255
     684:	29 e6       	ldi	r18, 0x69	; 105
     686:	88 e1       	ldi	r24, 0x18	; 24
     688:	91 50       	subi	r25, 0x01	; 1
     68a:	20 40       	sbci	r18, 0x00	; 0
     68c:	80 40       	sbci	r24, 0x00	; 0
     68e:	e1 f7       	brne	.-8      	; 0x688 <_ZN5Pages11page3ActionEjj+0x9e>
     690:	00 c0       	rjmp	.+0      	; 0x692 <_ZN5Pages11page3ActionEjj+0xa8>
     692:	00 00       	nop
		_delay_ms(500);
		this->stepper.moveDegree(angle,5000);
     694:	48 e8       	ldi	r20, 0x88	; 136
     696:	53 e1       	ldi	r21, 0x13	; 19
     698:	b8 01       	movw	r22, r16
     69a:	ce 01       	movw	r24, r28
     69c:	05 96       	adiw	r24, 0x05	; 5
     69e:	0e 94 ae 04 	call	0x95c	; 0x95c <_ZN12StepperMotor10moveDegreeEii>
     6a2:	9f ef       	ldi	r25, 0xFF	; 255
     6a4:	23 ed       	ldi	r18, 0xD3	; 211
     6a6:	80 e3       	ldi	r24, 0x30	; 48
     6a8:	91 50       	subi	r25, 0x01	; 1
     6aa:	20 40       	sbci	r18, 0x00	; 0
     6ac:	80 40       	sbci	r24, 0x00	; 0
     6ae:	e1 f7       	brne	.-8      	; 0x6a8 <_ZN5Pages11page3ActionEjj+0xbe>
     6b0:	00 c0       	rjmp	.+0      	; 0x6b2 <_ZN5Pages11page3ActionEjj+0xc8>
     6b2:	00 00       	nop
		_delay_ms(1000);
	}
}
     6b4:	df 91       	pop	r29
     6b6:	cf 91       	pop	r28
     6b8:	1f 91       	pop	r17
     6ba:	0f 91       	pop	r16
     6bc:	ff 90       	pop	r15
     6be:	ef 90       	pop	r14
     6c0:	08 95       	ret

000006c2 <_ZN5Pages12chooseActionEjj>:
//	_delay_ms(500);
}

bool Pages::range(int num,int max,int min)
{
	return (num<max && num>min)?true:false;
     6c2:	9b 01       	movw	r18, r22
     6c4:	26 50       	subi	r18, 0x06	; 6
     6c6:	31 09       	sbc	r19, r1
     6c8:	20 3b       	cpi	r18, 0xB0	; 176
     6ca:	33 40       	sbci	r19, 0x03	; 3
     6cc:	18 f5       	brcc	.+70     	; 0x714 <_ZN5Pages12chooseActionEjj+0x52>
     6ce:	9a 01       	movw	r18, r20
     6d0:	26 50       	subi	r18, 0x06	; 6
     6d2:	31 09       	sbc	r19, r1
     6d4:	20 3b       	cpi	r18, 0xB0	; 176
     6d6:	33 40       	sbci	r19, 0x03	; 3
     6d8:	e8 f4       	brcc	.+58     	; 0x714 <_ZN5Pages12chooseActionEjj+0x52>
     6da:	15 c0       	rjmp	.+42     	; 0x706 <_ZN5Pages12chooseActionEjj+0x44>
void Pages::chooseAction(uint16_t posx,uint16_t posy)
{
	if(this->range(posx,950,5) && range(posy,950,5))
	{
		if(pageNo == 1)
			this->page1Action(posx,posy);
     6dc:	0e 94 cd 01 	call	0x39a	; 0x39a <_ZN5Pages11page1ActionEjj>
     6e0:	08 95       	ret
		else if(pageNo == 2)
     6e2:	22 30       	cpi	r18, 0x02	; 2
     6e4:	31 05       	cpc	r19, r1
     6e6:	19 f4       	brne	.+6      	; 0x6ee <_ZN5Pages12chooseActionEjj+0x2c>
			this->page2Action(posx,posy);
     6e8:	0e 94 9e 02 	call	0x53c	; 0x53c <_ZN5Pages11page2ActionEjj>
     6ec:	08 95       	ret
		else if(pageNo == 3)
     6ee:	23 30       	cpi	r18, 0x03	; 3
     6f0:	31 05       	cpc	r19, r1
     6f2:	19 f4       	brne	.+6      	; 0x6fa <_ZN5Pages12chooseActionEjj+0x38>
			this->page3Action(posx,posy);
     6f4:	0e 94 f5 02 	call	0x5ea	; 0x5ea <_ZN5Pages11page3ActionEjj>
     6f8:	08 95       	ret
		else if(pageNo== 4)
     6fa:	24 30       	cpi	r18, 0x04	; 4
     6fc:	31 05       	cpc	r19, r1
     6fe:	51 f4       	brne	.+20     	; 0x714 <_ZN5Pages12chooseActionEjj+0x52>
			this->page4Action(posx,posy);
     700:	0e 94 07 02 	call	0x40e	; 0x40e <_ZN5Pages11page4ActionEjj>
     704:	08 95       	ret

void Pages::chooseAction(uint16_t posx,uint16_t posy)
{
	if(this->range(posx,950,5) && range(posy,950,5))
	{
		if(pageNo == 1)
     706:	fc 01       	movw	r30, r24
     708:	20 81       	ld	r18, Z
     70a:	31 81       	ldd	r19, Z+1	; 0x01
     70c:	21 30       	cpi	r18, 0x01	; 1
     70e:	31 05       	cpc	r19, r1
     710:	41 f7       	brne	.-48     	; 0x6e2 <_ZN5Pages12chooseActionEjj+0x20>
     712:	e4 cf       	rjmp	.-56     	; 0x6dc <_ZN5Pages12chooseActionEjj+0x1a>
     714:	08 95       	ret

00000716 <main>:
	//	OCR0A = number;
	
}*/

int main(void)
{
     716:	cf 93       	push	r28
     718:	df 93       	push	r29
     71a:	cd b7       	in	r28, 0x3d	; 61
     71c:	de b7       	in	r29, 0x3e	; 62
     71e:	2c 97       	sbiw	r28, 0x0c	; 12
     720:	0f b6       	in	r0, 0x3f	; 63
     722:	f8 94       	cli
     724:	de bf       	out	0x3e, r29	; 62
     726:	0f be       	out	0x3f, r0	; 63
     728:	cd bf       	out	0x3d, r28	; 61
	sei();
     72a:	78 94       	sei
	//count = 0;
	LcdDisplay lcd;
	
	touchscreen.init();
     72c:	80 e5       	ldi	r24, 0x50	; 80
     72e:	91 e0       	ldi	r25, 0x01	; 1
     730:	0e 94 11 04 	call	0x822	; 0x822 <_ZN11TouchScreen4initEv>
	lcd.init_lcd();
     734:	ce 01       	movw	r24, r28
     736:	0c 96       	adiw	r24, 0x0c	; 12
     738:	0e 94 de 04 	call	0x9bc	; 0x9bc <_ZN10LcdDisplay8init_lcdEv>
	USART_Init(MYUBRR);
     73c:	87 e6       	ldi	r24, 0x67	; 103
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	0e 94 09 05 	call	0xa12	; 0xa12 <_Z10USART_Initj>
	timer0_interrupt_init();
     744:	0e 94 5e 00 	call	0xbc	; 0xbc <_Z21timer0_interrupt_initv>
	lcd.clearDisplay();
     748:	ce 01       	movw	r24, r28
     74a:	0c 96       	adiw	r24, 0x0c	; 12
     74c:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <_ZN10LcdDisplay12clearDisplayEv>
	StepperMotor stepper;
     750:	ce 01       	movw	r24, r28
     752:	09 96       	adiw	r24, 0x09	; 9
     754:	0e 94 98 04 	call	0x930	; 0x930 <_ZN12StepperMotorC1Ev>
	Pages page;
     758:	ce 01       	movw	r24, r28
     75a:	01 96       	adiw	r24, 0x01	; 1
     75c:	0e 94 14 01 	call	0x228	; 0x228 <_ZN5PagesC1Ev>
	page.introPage();
     760:	ce 01       	movw	r24, r28
     762:	01 96       	adiw	r24, 0x01	; 1
     764:	0e 94 41 01 	call	0x282	; 0x282 <_ZN5Pages9introPageEv>
     768:	2f ef       	ldi	r18, 0xFF	; 255
     76a:	83 ec       	ldi	r24, 0xC3	; 195
     76c:	99 e0       	ldi	r25, 0x09	; 9
     76e:	21 50       	subi	r18, 0x01	; 1
     770:	80 40       	sbci	r24, 0x00	; 0
     772:	90 40       	sbci	r25, 0x00	; 0
     774:	e1 f7       	brne	.-8      	; 0x76e <main+0x58>
     776:	00 c0       	rjmp	.+0      	; 0x778 <main+0x62>
     778:	00 00       	nop
	
	 while (1)
	 {
		 _delay_ms(200);
		page.chooseAction(touchscreen.getPosX(),touchscreen.getPosY());
     77a:	80 e5       	ldi	r24, 0x50	; 80
     77c:	91 e0       	ldi	r25, 0x01	; 1
     77e:	0e 94 18 04 	call	0x830	; 0x830 <_ZN11TouchScreen7getPosYEv>
     782:	8c 01       	movw	r16, r24
     784:	80 e5       	ldi	r24, 0x50	; 80
     786:	91 e0       	ldi	r25, 0x01	; 1
     788:	0e 94 14 04 	call	0x828	; 0x828 <_ZN11TouchScreen7getPosXEv>
     78c:	a8 01       	movw	r20, r16
     78e:	bc 01       	movw	r22, r24
     790:	ce 01       	movw	r24, r28
     792:	01 96       	adiw	r24, 0x01	; 1
     794:	0e 94 61 03 	call	0x6c2	; 0x6c2 <_ZN5Pages12chooseActionEjj>
     798:	e7 cf       	rjmp	.-50     	; 0x768 <main+0x52>

0000079a <__vector_14>:


}*/

ISR(TIMER0_COMPA_vect)
{
     79a:	1f 92       	push	r1
     79c:	0f 92       	push	r0
     79e:	0f b6       	in	r0, 0x3f	; 63
     7a0:	0f 92       	push	r0
     7a2:	11 24       	eor	r1, r1
     7a4:	2f 93       	push	r18
     7a6:	3f 93       	push	r19
     7a8:	4f 93       	push	r20
     7aa:	5f 93       	push	r21
     7ac:	6f 93       	push	r22
     7ae:	7f 93       	push	r23
     7b0:	8f 93       	push	r24
     7b2:	9f 93       	push	r25
     7b4:	af 93       	push	r26
     7b6:	bf 93       	push	r27
     7b8:	ef 93       	push	r30
     7ba:	ff 93       	push	r31

static uint16_t count = 0;
	if(count == 500)
     7bc:	80 91 4e 01 	lds	r24, 0x014E
     7c0:	90 91 4f 01 	lds	r25, 0x014F
     7c4:	84 3f       	cpi	r24, 0xF4	; 244
     7c6:	91 40       	sbci	r25, 0x01	; 1
     7c8:	91 f4       	brne	.+36     	; 0x7ee <__vector_14+0x54>
	{
	touchscreen.setPosX(readX());
     7ca:	0e 94 79 00 	call	0xf2	; 0xf2 <_Z5readXv>
     7ce:	bc 01       	movw	r22, r24
     7d0:	80 e5       	ldi	r24, 0x50	; 80
     7d2:	91 e0       	ldi	r25, 0x01	; 1
     7d4:	0e 94 1c 04 	call	0x838	; 0x838 <_ZN11TouchScreen7setPosXEj>
	touchscreen.setPosY(readY());	
     7d8:	0e 94 8b 00 	call	0x116	; 0x116 <_Z5readYv>
     7dc:	bc 01       	movw	r22, r24
     7de:	80 e5       	ldi	r24, 0x50	; 80
     7e0:	91 e0       	ldi	r25, 0x01	; 1
     7e2:	0e 94 20 04 	call	0x840	; 0x840 <_ZN11TouchScreen7setPosYEj>
	count=0;
     7e6:	10 92 4f 01 	sts	0x014F, r1
     7ea:	10 92 4e 01 	sts	0x014E, r1

	}
	count++;
     7ee:	80 91 4e 01 	lds	r24, 0x014E
     7f2:	90 91 4f 01 	lds	r25, 0x014F
     7f6:	01 96       	adiw	r24, 0x01	; 1
     7f8:	90 93 4f 01 	sts	0x014F, r25
     7fc:	80 93 4e 01 	sts	0x014E, r24
}
     800:	ff 91       	pop	r31
     802:	ef 91       	pop	r30
     804:	bf 91       	pop	r27
     806:	af 91       	pop	r26
     808:	9f 91       	pop	r25
     80a:	8f 91       	pop	r24
     80c:	7f 91       	pop	r23
     80e:	6f 91       	pop	r22
     810:	5f 91       	pop	r21
     812:	4f 91       	pop	r20
     814:	3f 91       	pop	r19
     816:	2f 91       	pop	r18
     818:	0f 90       	pop	r0
     81a:	0f be       	out	0x3f, r0	; 63
     81c:	0f 90       	pop	r0
     81e:	1f 90       	pop	r1
     820:	18 95       	reti

00000822 <_ZN11TouchScreen4initEv>:
}*/
//---------------------------Touch Screen-----------------

void TouchScreen::init()
{
	adc_init();
     822:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z8adc_initv>
     826:	08 95       	ret

00000828 <_ZN11TouchScreen7getPosXEv>:
}

uint16_t TouchScreen::getPosX()
{
	return this->posX;
}
     828:	fc 01       	movw	r30, r24
     82a:	80 81       	ld	r24, Z
     82c:	91 81       	ldd	r25, Z+1	; 0x01
     82e:	08 95       	ret

00000830 <_ZN11TouchScreen7getPosYEv>:

uint16_t TouchScreen::getPosY()
{
	return this->posY;
}
     830:	fc 01       	movw	r30, r24
     832:	82 81       	ldd	r24, Z+2	; 0x02
     834:	93 81       	ldd	r25, Z+3	; 0x03
     836:	08 95       	ret

00000838 <_ZN11TouchScreen7setPosXEj>:

void TouchScreen::setPosX(uint16_t x)
{
	this->posX = x;
     838:	fc 01       	movw	r30, r24
     83a:	71 83       	std	Z+1, r23	; 0x01
     83c:	60 83       	st	Z, r22
     83e:	08 95       	ret

00000840 <_ZN11TouchScreen7setPosYEj>:
}

void TouchScreen::setPosY(uint16_t y)
{
	this->posY = y;
     840:	fc 01       	movw	r30, r24
     842:	73 83       	std	Z+3, r23	; 0x03
     844:	62 83       	std	Z+2, r22	; 0x02
     846:	08 95       	ret

00000848 <_ZN5Servo9setDegreeEj>:

//--------------------Servo--------------------------

void Servo::setDegree(uint16_t degree)
{
	this->degree = degree;
     848:	fc 01       	movw	r30, r24
     84a:	71 83       	std	Z+1, r23	; 0x01
     84c:	60 83       	st	Z, r22
	
	OCR1A = (int)(330*this->degree/140)+140;
     84e:	8a e4       	ldi	r24, 0x4A	; 74
     850:	91 e0       	ldi	r25, 0x01	; 1
     852:	68 9f       	mul	r22, r24
     854:	90 01       	movw	r18, r0
     856:	69 9f       	mul	r22, r25
     858:	30 0d       	add	r19, r0
     85a:	78 9f       	mul	r23, r24
     85c:	30 0d       	add	r19, r0
     85e:	11 24       	eor	r1, r1
     860:	af e0       	ldi	r26, 0x0F	; 15
     862:	ba ee       	ldi	r27, 0xEA	; 234
     864:	0e 94 42 07 	call	0xe84	; 0xe84 <__umulhisi3>
     868:	88 0f       	add	r24, r24
     86a:	89 2f       	mov	r24, r25
     86c:	88 1f       	adc	r24, r24
     86e:	99 0b       	sbc	r25, r25
     870:	91 95       	neg	r25
     872:	84 57       	subi	r24, 0x74	; 116
     874:	9f 4f       	sbci	r25, 0xFF	; 255
     876:	90 93 89 00 	sts	0x0089, r25
     87a:	80 93 88 00 	sts	0x0088, r24
     87e:	08 95       	ret

00000880 <_ZN5Servo9stopTimerEv>:
	return this->degree;
}

void Servo::stopTimer()
{
	TCCR1B &= ~(1<<CS10|1<<CS11|1<<CS12);
     880:	e1 e8       	ldi	r30, 0x81	; 129
     882:	f0 e0       	ldi	r31, 0x00	; 0
     884:	80 81       	ld	r24, Z
     886:	88 7f       	andi	r24, 0xF8	; 248
     888:	80 83       	st	Z, r24
	TCCR1A &= ~(1<<COM1A0|1<<COM1A1|1<<COM1B0|1<<COM1B1);
     88a:	e0 e8       	ldi	r30, 0x80	; 128
     88c:	f0 e0       	ldi	r31, 0x00	; 0
     88e:	80 81       	ld	r24, Z
     890:	8f 70       	andi	r24, 0x0F	; 15
     892:	80 83       	st	Z, r24
     894:	08 95       	ret

00000896 <_ZN5Servo15initAttachTimerEv>:
}

void Servo::initAttachTimer()
{
	DDRB |= 1<<DDB1;
     896:	21 9a       	sbi	0x04, 1	; 4
	TCCR1A|=(1<<COM1A1)|(1<<COM1B1)|(1<<WGM11);        //NON Inverted PWM
     898:	e0 e8       	ldi	r30, 0x80	; 128
     89a:	f0 e0       	ldi	r31, 0x00	; 0
     89c:	20 81       	ld	r18, Z
     89e:	22 6a       	ori	r18, 0xA2	; 162
     8a0:	20 83       	st	Z, r18
	TCCR1B|=(1<<WGM13)|(1<<WGM12)|(1<<CS11)|(1<<CS10); //PRESCALER=64 MODE 14(FAST PWM)
     8a2:	e1 e8       	ldi	r30, 0x81	; 129
     8a4:	f0 e0       	ldi	r31, 0x00	; 0
     8a6:	20 81       	ld	r18, Z
     8a8:	2b 61       	ori	r18, 0x1B	; 27
     8aa:	20 83       	st	Z, r18
	
	ICR1=4999;  //fPWM=50Hz (Period = 20ms Standard).
     8ac:	27 e8       	ldi	r18, 0x87	; 135
     8ae:	33 e1       	ldi	r19, 0x13	; 19
     8b0:	30 93 87 00 	sts	0x0087, r19
     8b4:	20 93 86 00 	sts	0x0086, r18

//--------------------Servo--------------------------

void Servo::setDegree(uint16_t degree)
{
	this->degree = degree;
     8b8:	fc 01       	movw	r30, r24
     8ba:	11 82       	std	Z+1, r1	; 0x01
     8bc:	10 82       	st	Z, r1
	
	OCR1A = (int)(330*this->degree/140)+140;
     8be:	8c e8       	ldi	r24, 0x8C	; 140
     8c0:	90 e0       	ldi	r25, 0x00	; 0
     8c2:	90 93 89 00 	sts	0x0089, r25
     8c6:	80 93 88 00 	sts	0x0088, r24
     8ca:	08 95       	ret

000008cc <_ZN12StepperMotor11moveForwardEii>:

void StepperMotor::moveForward(int steps,int utime)
{
//	this->forward = true;
	
	PORTD &= ~(1<<DDD2);
     8cc:	5a 98       	cbi	0x0b, 2	; 11
	
	for(int i=0 ; i<steps ; i++)
     8ce:	16 16       	cp	r1, r22
     8d0:	17 06       	cpc	r1, r23
     8d2:	a4 f4       	brge	.+40     	; 0x8fc <_ZN12StepperMotor11moveForwardEii+0x30>
     8d4:	80 e0       	ldi	r24, 0x00	; 0
     8d6:	90 e0       	ldi	r25, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     8d8:	ef e3       	ldi	r30, 0x3F	; 63
     8da:	ff e1       	ldi	r31, 0x1F	; 31
     8dc:	31 97       	sbiw	r30, 0x01	; 1
     8de:	f1 f7       	brne	.-4      	; 0x8dc <_ZN12StepperMotor11moveForwardEii+0x10>
     8e0:	00 c0       	rjmp	.+0      	; 0x8e2 <_ZN12StepperMotor11moveForwardEii+0x16>
     8e2:	00 00       	nop
	{
		_delay_us(2000);
		PORTD |= (1<<DDD4);
     8e4:	5c 9a       	sbi	0x0b, 4	; 11
     8e6:	ef e3       	ldi	r30, 0x3F	; 63
     8e8:	ff e1       	ldi	r31, 0x1F	; 31
     8ea:	31 97       	sbiw	r30, 0x01	; 1
     8ec:	f1 f7       	brne	.-4      	; 0x8ea <_ZN12StepperMotor11moveForwardEii+0x1e>
     8ee:	00 c0       	rjmp	.+0      	; 0x8f0 <_ZN12StepperMotor11moveForwardEii+0x24>
     8f0:	00 00       	nop
		_delay_us(2000);
		PORTD &= ~(1<<DDD4);
     8f2:	5c 98       	cbi	0x0b, 4	; 11
{
//	this->forward = true;
	
	PORTD &= ~(1<<DDD2);
	
	for(int i=0 ; i<steps ; i++)
     8f4:	01 96       	adiw	r24, 0x01	; 1
     8f6:	86 17       	cp	r24, r22
     8f8:	97 07       	cpc	r25, r23
     8fa:	71 f7       	brne	.-36     	; 0x8d8 <_ZN12StepperMotor11moveForwardEii+0xc>
     8fc:	08 95       	ret

000008fe <_ZN12StepperMotor12moveBackwardEii>:

void StepperMotor::moveBackward(int steps,int utime)
{
//	this->forward = false;
	
	PORTD |= (1<<DDD2);
     8fe:	5a 9a       	sbi	0x0b, 2	; 11
	
	for(int i=0 ; i<steps ; i++)
     900:	16 16       	cp	r1, r22
     902:	17 06       	cpc	r1, r23
     904:	a4 f4       	brge	.+40     	; 0x92e <__stack+0x2f>
     906:	80 e0       	ldi	r24, 0x00	; 0
     908:	90 e0       	ldi	r25, 0x00	; 0
     90a:	ef e3       	ldi	r30, 0x3F	; 63
     90c:	ff e1       	ldi	r31, 0x1F	; 31
     90e:	31 97       	sbiw	r30, 0x01	; 1
     910:	f1 f7       	brne	.-4      	; 0x90e <__stack+0xf>
     912:	00 c0       	rjmp	.+0      	; 0x914 <__stack+0x15>
     914:	00 00       	nop
	{
		_delay_us(2000);
		PORTD |= (1<<DDD4);
     916:	5c 9a       	sbi	0x0b, 4	; 11
     918:	ef e3       	ldi	r30, 0x3F	; 63
     91a:	ff e1       	ldi	r31, 0x1F	; 31
     91c:	31 97       	sbiw	r30, 0x01	; 1
     91e:	f1 f7       	brne	.-4      	; 0x91c <__stack+0x1d>
     920:	00 c0       	rjmp	.+0      	; 0x922 <__stack+0x23>
     922:	00 00       	nop
		_delay_us(2000);
		PORTD &= ~(1<<DDD4);
     924:	5c 98       	cbi	0x0b, 4	; 11
{
//	this->forward = false;
	
	PORTD |= (1<<DDD2);
	
	for(int i=0 ; i<steps ; i++)
     926:	01 96       	adiw	r24, 0x01	; 1
     928:	86 17       	cp	r24, r22
     92a:	97 07       	cpc	r25, r23
     92c:	71 f7       	brne	.-36     	; 0x90a <__stack+0xb>
     92e:	08 95       	ret

00000930 <_ZN12StepperMotorC1Ev>:
//	this->degree-=steps;
}

StepperMotor::StepperMotor()
{
	this->degree = 0;
     930:	fc 01       	movw	r30, r24
     932:	11 82       	std	Z+1, r1	; 0x01
     934:	10 82       	st	Z, r1
	this->forward = true;
     936:	21 e0       	ldi	r18, 0x01	; 1
     938:	22 83       	std	Z+2, r18	; 0x02
	DDRD |= (1<<DDD2 | 1<<DDD4);
     93a:	8a b1       	in	r24, 0x0a	; 10
     93c:	84 61       	ori	r24, 0x14	; 20
     93e:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<DDD2|1<<DDD4);
     940:	8b b1       	in	r24, 0x0b	; 11
     942:	8b 7e       	andi	r24, 0xEB	; 235
     944:	8b b9       	out	0x0b, r24	; 11
     946:	08 95       	ret

00000948 <_ZN12StepperMotor4moveEii>:
}

void StepperMotor::move(int steps,int utime)
{
	if(this->forward)
     948:	fc 01       	movw	r30, r24
     94a:	22 81       	ldd	r18, Z+2	; 0x02
     94c:	22 23       	and	r18, r18
     94e:	19 f0       	breq	.+6      	; 0x956 <_ZN12StepperMotor4moveEii+0xe>
		moveForward(steps,utime);
     950:	0e 94 66 04 	call	0x8cc	; 0x8cc <_ZN12StepperMotor11moveForwardEii>
     954:	08 95       	ret
	else
		moveBackward(steps,utime);
     956:	0e 94 7f 04 	call	0x8fe	; 0x8fe <_ZN12StepperMotor12moveBackwardEii>
     95a:	08 95       	ret

0000095c <_ZN12StepperMotor10moveDegreeEii>:
}

void StepperMotor::moveDegree(int degre,int utime)
{
     95c:	0f 93       	push	r16
     95e:	1f 93       	push	r17
     960:	cf 93       	push	r28
     962:	df 93       	push	r29
     964:	ec 01       	movw	r28, r24
     966:	8a 01       	movw	r16, r20
	int moveDeg;
	
	if(this->forward)
     968:	8a 81       	ldd	r24, Y+2	; 0x02
     96a:	88 23       	and	r24, r24
     96c:	41 f0       	breq	.+16     	; 0x97e <_ZN12StepperMotor10moveDegreeEii+0x22>
	{
		moveDeg = this->degree - degre;
     96e:	88 81       	ld	r24, Y
     970:	99 81       	ldd	r25, Y+1	; 0x01
     972:	86 1b       	sub	r24, r22
     974:	97 0b       	sbc	r25, r23
		
		if(moveDeg < 0)
     976:	6a f4       	brpl	.+26     	; 0x992 <_ZN12StepperMotor10moveDegreeEii+0x36>
			moveDeg += 360;
     978:	88 59       	subi	r24, 0x98	; 152
     97a:	9e 4f       	sbci	r25, 0xFE	; 254
     97c:	0a c0       	rjmp	.+20     	; 0x992 <_ZN12StepperMotor10moveDegreeEii+0x36>
		
	}else
	{
		moveDeg = degre - this->degree;
     97e:	88 81       	ld	r24, Y
     980:	99 81       	ldd	r25, Y+1	; 0x01
     982:	9b 01       	movw	r18, r22
     984:	28 1b       	sub	r18, r24
     986:	39 0b       	sbc	r19, r25
     988:	c9 01       	movw	r24, r18
		
		if(moveDeg < 0)	
     98a:	99 23       	and	r25, r25
     98c:	14 f4       	brge	.+4      	; 0x992 <_ZN12StepperMotor10moveDegreeEii+0x36>
			moveDeg+=360;
     98e:	88 59       	subi	r24, 0x98	; 152
     990:	9e 4f       	sbci	r25, 0xFE	; 254
	}
	
//	float steps = ((float)moveDeg)*200/360;
	this->degree = degre;
     992:	79 83       	std	Y+1, r23	; 0x01
     994:	68 83       	st	Y, r22
		
	this->move(stepss(moveDeg) , utime);
     996:	0e 94 fd 00 	call	0x1fa	; 0x1fa <_Z6stepssi>
     99a:	a8 01       	movw	r20, r16
     99c:	bc 01       	movw	r22, r24
     99e:	ce 01       	movw	r24, r28
     9a0:	0e 94 a4 04 	call	0x948	; 0x948 <_ZN12StepperMotor4moveEii>
	
}
     9a4:	df 91       	pop	r29
     9a6:	cf 91       	pop	r28
     9a8:	1f 91       	pop	r17
     9aa:	0f 91       	pop	r16
     9ac:	08 95       	ret

000009ae <_ZN12StepperMotor10setForwardEv>:

void StepperMotor::setForward()
{
	this->forward = true;	
     9ae:	21 e0       	ldi	r18, 0x01	; 1
     9b0:	fc 01       	movw	r30, r24
     9b2:	22 83       	std	Z+2, r18	; 0x02
     9b4:	08 95       	ret

000009b6 <_ZN12StepperMotor10setReverseEv>:
}

void StepperMotor::setReverse()
{
	this->forward = false;	
     9b6:	fc 01       	movw	r30, r24
     9b8:	12 82       	std	Z+2, r1	; 0x02
     9ba:	08 95       	ret

000009bc <_ZN10LcdDisplay8init_lcdEv>:

//---------------------------LCD Screen------------------

void LcdDisplay::init_lcd()
{
	USART_Init(MYUBRR);
     9bc:	87 e6       	ldi	r24, 0x67	; 103
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	0e 94 09 05 	call	0xa12	; 0xa12 <_Z10USART_Initj>
     9c4:	08 95       	ret

000009c6 <_ZN10LcdDisplay12clearDisplayEv>:
}

void LcdDisplay::clearDisplay()
{
	USART_Sendbyte(0xFE);
     9c6:	8e ef       	ldi	r24, 0xFE	; 254
     9c8:	0e 94 14 05 	call	0xa28	; 0xa28 <_Z14USART_Sendbyteh>
	USART_Sendbyte(0x01);
     9cc:	81 e0       	ldi	r24, 0x01	; 1
     9ce:	0e 94 14 05 	call	0xa28	; 0xa28 <_Z14USART_Sendbyteh>
     9d2:	08 95       	ret

000009d4 <_ZN10LcdDisplay13displayStringEPKc>:
}

void LcdDisplay::displayString(const char *str)
{
     9d4:	cb 01       	movw	r24, r22
	USART_Send_string(str);
     9d6:	0e 94 1c 05 	call	0xa38	; 0xa38 <_Z17USART_Send_stringPKc>
     9da:	08 95       	ret

000009dc <_ZN10LcdDisplay10displayIntEi>:
}

void LcdDisplay::displayInt(int num)
{
     9dc:	cb 01       	movw	r24, r22
	USART_Send_int(num);
     9de:	0e 94 2b 05 	call	0xa56	; 0xa56 <_Z14USART_Send_intj>
     9e2:	08 95       	ret

000009e4 <_ZN10LcdDisplay6gotoXYEhj>:
		USART_Sendbyte(0x1C);
	}
}

void LcdDisplay::gotoXY(unsigned char row, unsigned int col)
{
     9e4:	cf 93       	push	r28
     9e6:	df 93       	push	r29
     9e8:	c6 2f       	mov	r28, r22
     9ea:	d4 2f       	mov	r29, r20
	USART_Sendbyte(0xFE);
     9ec:	8e ef       	ldi	r24, 0xFE	; 254
     9ee:	0e 94 14 05 	call	0xa28	; 0xa28 <_Z14USART_Sendbyteh>
	if(row==1)
     9f2:	c1 30       	cpi	r28, 0x01	; 1
     9f4:	29 f4       	brne	.+10     	; 0xa00 <_ZN10LcdDisplay6gotoXYEhj+0x1c>
	{
		USART_Sendbyte(0+(col-1)+128);
     9f6:	8f e7       	ldi	r24, 0x7F	; 127
     9f8:	8d 0f       	add	r24, r29
     9fa:	0e 94 14 05 	call	0xa28	; 0xa28 <_Z14USART_Sendbyteh>
     9fe:	06 c0       	rjmp	.+12     	; 0xa0c <_ZN10LcdDisplay6gotoXYEhj+0x28>
	}else if(row==2)
     a00:	c2 30       	cpi	r28, 0x02	; 2
     a02:	21 f4       	brne	.+8      	; 0xa0c <_ZN10LcdDisplay6gotoXYEhj+0x28>
	{
		USART_Sendbyte(64+(col-1)+128);
     a04:	8f eb       	ldi	r24, 0xBF	; 191
     a06:	8d 0f       	add	r24, r29
     a08:	0e 94 14 05 	call	0xa28	; 0xa28 <_Z14USART_Sendbyteh>
	}
}
     a0c:	df 91       	pop	r29
     a0e:	cf 91       	pop	r28
     a10:	08 95       	ret

00000a12 <_Z10USART_Initj>:
#include <stdio.h>			// Conversions

void USART_Init( unsigned int ubrr)
{
	/*Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
     a12:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
     a16:	80 93 c4 00 	sts	0x00C4, r24
	//Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     a1a:	88 e1       	ldi	r24, 0x18	; 24
     a1c:	80 93 c1 00 	sts	0x00C1, r24
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<USBS0)|(3<<UCSZ00);
     a20:	8e e0       	ldi	r24, 0x0E	; 14
     a22:	80 93 c2 00 	sts	0x00C2, r24
     a26:	08 95       	ret

00000a28 <_Z14USART_Sendbyteh>:


void USART_Sendbyte( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
     a28:	e0 ec       	ldi	r30, 0xC0	; 192
     a2a:	f0 e0       	ldi	r31, 0x00	; 0
     a2c:	90 81       	ld	r25, Z
     a2e:	95 ff       	sbrs	r25, 5
     a30:	fd cf       	rjmp	.-6      	; 0xa2c <_Z14USART_Sendbyteh+0x4>
	;
	/* Put data into buffer, sends the data */
	UDR0 = char(data);
     a32:	80 93 c6 00 	sts	0x00C6, r24
     a36:	08 95       	ret

00000a38 <_Z17USART_Send_stringPKc>:
}

void USART_Send_string(const char *str)
{
     a38:	cf 93       	push	r28
     a3a:	df 93       	push	r29
     a3c:	ec 01       	movw	r28, r24

	while (*str)
     a3e:	88 81       	ld	r24, Y
     a40:	88 23       	and	r24, r24
     a42:	31 f0       	breq	.+12     	; 0xa50 <_Z17USART_Send_stringPKc+0x18>
     a44:	21 96       	adiw	r28, 0x01	; 1
	USART_Sendbyte(*str++);
     a46:	0e 94 14 05 	call	0xa28	; 0xa28 <_Z14USART_Sendbyteh>
}

void USART_Send_string(const char *str)
{

	while (*str)
     a4a:	89 91       	ld	r24, Y+
     a4c:	81 11       	cpse	r24, r1
     a4e:	fb cf       	rjmp	.-10     	; 0xa46 <_Z17USART_Send_stringPKc+0xe>
	USART_Sendbyte(*str++);
	
}
     a50:	df 91       	pop	r29
     a52:	cf 91       	pop	r28
     a54:	08 95       	ret

00000a56 <_Z14USART_Send_intj>:

void USART_Send_int(unsigned int d )
{
     a56:	0f 93       	push	r16
     a58:	1f 93       	push	r17
     a5a:	cf 93       	push	r28
     a5c:	df 93       	push	r29
     a5e:	cd b7       	in	r28, 0x3d	; 61
     a60:	de b7       	in	r29, 0x3e	; 62
     a62:	2a 97       	sbiw	r28, 0x0a	; 10
     a64:	0f b6       	in	r0, 0x3f	; 63
     a66:	f8 94       	cli
     a68:	de bf       	out	0x3e, r29	; 62
     a6a:	0f be       	out	0x3f, r0	; 63
     a6c:	cd bf       	out	0x3d, r28	; 61
	char str[10];
	sprintf(str,"%u",d);
     a6e:	9f 93       	push	r25
     a70:	8f 93       	push	r24
     a72:	8a e4       	ldi	r24, 0x4A	; 74
     a74:	91 e0       	ldi	r25, 0x01	; 1
     a76:	9f 93       	push	r25
     a78:	8f 93       	push	r24
     a7a:	8e 01       	movw	r16, r28
     a7c:	0f 5f       	subi	r16, 0xFF	; 255
     a7e:	1f 4f       	sbci	r17, 0xFF	; 255
     a80:	1f 93       	push	r17
     a82:	0f 93       	push	r16
     a84:	0e 94 51 07 	call	0xea2	; 0xea2 <sprintf>
	USART_Send_string(str);
     a88:	c8 01       	movw	r24, r16
     a8a:	0e 94 1c 05 	call	0xa38	; 0xa38 <_Z17USART_Send_stringPKc>
     a8e:	0f 90       	pop	r0
     a90:	0f 90       	pop	r0
     a92:	0f 90       	pop	r0
     a94:	0f 90       	pop	r0
     a96:	0f 90       	pop	r0
     a98:	0f 90       	pop	r0
	
}
     a9a:	2a 96       	adiw	r28, 0x0a	; 10
     a9c:	0f b6       	in	r0, 0x3f	; 63
     a9e:	f8 94       	cli
     aa0:	de bf       	out	0x3e, r29	; 62
     aa2:	0f be       	out	0x3f, r0	; 63
     aa4:	cd bf       	out	0x3d, r28	; 61
     aa6:	df 91       	pop	r29
     aa8:	cf 91       	pop	r28
     aaa:	1f 91       	pop	r17
     aac:	0f 91       	pop	r16
     aae:	08 95       	ret

00000ab0 <__subsf3>:
     ab0:	50 58       	subi	r21, 0x80	; 128

00000ab2 <__addsf3>:
     ab2:	bb 27       	eor	r27, r27
     ab4:	aa 27       	eor	r26, r26
     ab6:	0e d0       	rcall	.+28     	; 0xad4 <__addsf3x>
     ab8:	48 c1       	rjmp	.+656    	; 0xd4a <__fp_round>
     aba:	39 d1       	rcall	.+626    	; 0xd2e <__fp_pscA>
     abc:	30 f0       	brcs	.+12     	; 0xaca <__addsf3+0x18>
     abe:	3e d1       	rcall	.+636    	; 0xd3c <__fp_pscB>
     ac0:	20 f0       	brcs	.+8      	; 0xaca <__addsf3+0x18>
     ac2:	31 f4       	brne	.+12     	; 0xad0 <__addsf3+0x1e>
     ac4:	9f 3f       	cpi	r25, 0xFF	; 255
     ac6:	11 f4       	brne	.+4      	; 0xacc <__addsf3+0x1a>
     ac8:	1e f4       	brtc	.+6      	; 0xad0 <__addsf3+0x1e>
     aca:	2e c1       	rjmp	.+604    	; 0xd28 <__fp_nan>
     acc:	0e f4       	brtc	.+2      	; 0xad0 <__addsf3+0x1e>
     ace:	e0 95       	com	r30
     ad0:	e7 fb       	bst	r30, 7
     ad2:	24 c1       	rjmp	.+584    	; 0xd1c <__fp_inf>

00000ad4 <__addsf3x>:
     ad4:	e9 2f       	mov	r30, r25
     ad6:	4a d1       	rcall	.+660    	; 0xd6c <__fp_split3>
     ad8:	80 f3       	brcs	.-32     	; 0xaba <__addsf3+0x8>
     ada:	ba 17       	cp	r27, r26
     adc:	62 07       	cpc	r22, r18
     ade:	73 07       	cpc	r23, r19
     ae0:	84 07       	cpc	r24, r20
     ae2:	95 07       	cpc	r25, r21
     ae4:	18 f0       	brcs	.+6      	; 0xaec <__addsf3x+0x18>
     ae6:	71 f4       	brne	.+28     	; 0xb04 <__addsf3x+0x30>
     ae8:	9e f5       	brtc	.+102    	; 0xb50 <__addsf3x+0x7c>
     aea:	62 c1       	rjmp	.+708    	; 0xdb0 <__fp_zero>
     aec:	0e f4       	brtc	.+2      	; 0xaf0 <__addsf3x+0x1c>
     aee:	e0 95       	com	r30
     af0:	0b 2e       	mov	r0, r27
     af2:	ba 2f       	mov	r27, r26
     af4:	a0 2d       	mov	r26, r0
     af6:	0b 01       	movw	r0, r22
     af8:	b9 01       	movw	r22, r18
     afa:	90 01       	movw	r18, r0
     afc:	0c 01       	movw	r0, r24
     afe:	ca 01       	movw	r24, r20
     b00:	a0 01       	movw	r20, r0
     b02:	11 24       	eor	r1, r1
     b04:	ff 27       	eor	r31, r31
     b06:	59 1b       	sub	r21, r25
     b08:	99 f0       	breq	.+38     	; 0xb30 <__addsf3x+0x5c>
     b0a:	59 3f       	cpi	r21, 0xF9	; 249
     b0c:	50 f4       	brcc	.+20     	; 0xb22 <__addsf3x+0x4e>
     b0e:	50 3e       	cpi	r21, 0xE0	; 224
     b10:	68 f1       	brcs	.+90     	; 0xb6c <__addsf3x+0x98>
     b12:	1a 16       	cp	r1, r26
     b14:	f0 40       	sbci	r31, 0x00	; 0
     b16:	a2 2f       	mov	r26, r18
     b18:	23 2f       	mov	r18, r19
     b1a:	34 2f       	mov	r19, r20
     b1c:	44 27       	eor	r20, r20
     b1e:	58 5f       	subi	r21, 0xF8	; 248
     b20:	f3 cf       	rjmp	.-26     	; 0xb08 <__addsf3x+0x34>
     b22:	46 95       	lsr	r20
     b24:	37 95       	ror	r19
     b26:	27 95       	ror	r18
     b28:	a7 95       	ror	r26
     b2a:	f0 40       	sbci	r31, 0x00	; 0
     b2c:	53 95       	inc	r21
     b2e:	c9 f7       	brne	.-14     	; 0xb22 <__addsf3x+0x4e>
     b30:	7e f4       	brtc	.+30     	; 0xb50 <__addsf3x+0x7c>
     b32:	1f 16       	cp	r1, r31
     b34:	ba 0b       	sbc	r27, r26
     b36:	62 0b       	sbc	r22, r18
     b38:	73 0b       	sbc	r23, r19
     b3a:	84 0b       	sbc	r24, r20
     b3c:	ba f0       	brmi	.+46     	; 0xb6c <__addsf3x+0x98>
     b3e:	91 50       	subi	r25, 0x01	; 1
     b40:	a1 f0       	breq	.+40     	; 0xb6a <__addsf3x+0x96>
     b42:	ff 0f       	add	r31, r31
     b44:	bb 1f       	adc	r27, r27
     b46:	66 1f       	adc	r22, r22
     b48:	77 1f       	adc	r23, r23
     b4a:	88 1f       	adc	r24, r24
     b4c:	c2 f7       	brpl	.-16     	; 0xb3e <__addsf3x+0x6a>
     b4e:	0e c0       	rjmp	.+28     	; 0xb6c <__addsf3x+0x98>
     b50:	ba 0f       	add	r27, r26
     b52:	62 1f       	adc	r22, r18
     b54:	73 1f       	adc	r23, r19
     b56:	84 1f       	adc	r24, r20
     b58:	48 f4       	brcc	.+18     	; 0xb6c <__addsf3x+0x98>
     b5a:	87 95       	ror	r24
     b5c:	77 95       	ror	r23
     b5e:	67 95       	ror	r22
     b60:	b7 95       	ror	r27
     b62:	f7 95       	ror	r31
     b64:	9e 3f       	cpi	r25, 0xFE	; 254
     b66:	08 f0       	brcs	.+2      	; 0xb6a <__addsf3x+0x96>
     b68:	b3 cf       	rjmp	.-154    	; 0xad0 <__addsf3+0x1e>
     b6a:	93 95       	inc	r25
     b6c:	88 0f       	add	r24, r24
     b6e:	08 f0       	brcs	.+2      	; 0xb72 <__addsf3x+0x9e>
     b70:	99 27       	eor	r25, r25
     b72:	ee 0f       	add	r30, r30
     b74:	97 95       	ror	r25
     b76:	87 95       	ror	r24
     b78:	08 95       	ret

00000b7a <__divsf3>:
     b7a:	0c d0       	rcall	.+24     	; 0xb94 <__divsf3x>
     b7c:	e6 c0       	rjmp	.+460    	; 0xd4a <__fp_round>
     b7e:	de d0       	rcall	.+444    	; 0xd3c <__fp_pscB>
     b80:	40 f0       	brcs	.+16     	; 0xb92 <__divsf3+0x18>
     b82:	d5 d0       	rcall	.+426    	; 0xd2e <__fp_pscA>
     b84:	30 f0       	brcs	.+12     	; 0xb92 <__divsf3+0x18>
     b86:	21 f4       	brne	.+8      	; 0xb90 <__divsf3+0x16>
     b88:	5f 3f       	cpi	r21, 0xFF	; 255
     b8a:	19 f0       	breq	.+6      	; 0xb92 <__divsf3+0x18>
     b8c:	c7 c0       	rjmp	.+398    	; 0xd1c <__fp_inf>
     b8e:	51 11       	cpse	r21, r1
     b90:	10 c1       	rjmp	.+544    	; 0xdb2 <__fp_szero>
     b92:	ca c0       	rjmp	.+404    	; 0xd28 <__fp_nan>

00000b94 <__divsf3x>:
     b94:	eb d0       	rcall	.+470    	; 0xd6c <__fp_split3>
     b96:	98 f3       	brcs	.-26     	; 0xb7e <__divsf3+0x4>

00000b98 <__divsf3_pse>:
     b98:	99 23       	and	r25, r25
     b9a:	c9 f3       	breq	.-14     	; 0xb8e <__divsf3+0x14>
     b9c:	55 23       	and	r21, r21
     b9e:	b1 f3       	breq	.-20     	; 0xb8c <__divsf3+0x12>
     ba0:	95 1b       	sub	r25, r21
     ba2:	55 0b       	sbc	r21, r21
     ba4:	bb 27       	eor	r27, r27
     ba6:	aa 27       	eor	r26, r26
     ba8:	62 17       	cp	r22, r18
     baa:	73 07       	cpc	r23, r19
     bac:	84 07       	cpc	r24, r20
     bae:	38 f0       	brcs	.+14     	; 0xbbe <__divsf3_pse+0x26>
     bb0:	9f 5f       	subi	r25, 0xFF	; 255
     bb2:	5f 4f       	sbci	r21, 0xFF	; 255
     bb4:	22 0f       	add	r18, r18
     bb6:	33 1f       	adc	r19, r19
     bb8:	44 1f       	adc	r20, r20
     bba:	aa 1f       	adc	r26, r26
     bbc:	a9 f3       	breq	.-22     	; 0xba8 <__divsf3_pse+0x10>
     bbe:	33 d0       	rcall	.+102    	; 0xc26 <__divsf3_pse+0x8e>
     bc0:	0e 2e       	mov	r0, r30
     bc2:	3a f0       	brmi	.+14     	; 0xbd2 <__divsf3_pse+0x3a>
     bc4:	e0 e8       	ldi	r30, 0x80	; 128
     bc6:	30 d0       	rcall	.+96     	; 0xc28 <__divsf3_pse+0x90>
     bc8:	91 50       	subi	r25, 0x01	; 1
     bca:	50 40       	sbci	r21, 0x00	; 0
     bcc:	e6 95       	lsr	r30
     bce:	00 1c       	adc	r0, r0
     bd0:	ca f7       	brpl	.-14     	; 0xbc4 <__divsf3_pse+0x2c>
     bd2:	29 d0       	rcall	.+82     	; 0xc26 <__divsf3_pse+0x8e>
     bd4:	fe 2f       	mov	r31, r30
     bd6:	27 d0       	rcall	.+78     	; 0xc26 <__divsf3_pse+0x8e>
     bd8:	66 0f       	add	r22, r22
     bda:	77 1f       	adc	r23, r23
     bdc:	88 1f       	adc	r24, r24
     bde:	bb 1f       	adc	r27, r27
     be0:	26 17       	cp	r18, r22
     be2:	37 07       	cpc	r19, r23
     be4:	48 07       	cpc	r20, r24
     be6:	ab 07       	cpc	r26, r27
     be8:	b0 e8       	ldi	r27, 0x80	; 128
     bea:	09 f0       	breq	.+2      	; 0xbee <__divsf3_pse+0x56>
     bec:	bb 0b       	sbc	r27, r27
     bee:	80 2d       	mov	r24, r0
     bf0:	bf 01       	movw	r22, r30
     bf2:	ff 27       	eor	r31, r31
     bf4:	93 58       	subi	r25, 0x83	; 131
     bf6:	5f 4f       	sbci	r21, 0xFF	; 255
     bf8:	2a f0       	brmi	.+10     	; 0xc04 <__divsf3_pse+0x6c>
     bfa:	9e 3f       	cpi	r25, 0xFE	; 254
     bfc:	51 05       	cpc	r21, r1
     bfe:	68 f0       	brcs	.+26     	; 0xc1a <__divsf3_pse+0x82>
     c00:	8d c0       	rjmp	.+282    	; 0xd1c <__fp_inf>
     c02:	d7 c0       	rjmp	.+430    	; 0xdb2 <__fp_szero>
     c04:	5f 3f       	cpi	r21, 0xFF	; 255
     c06:	ec f3       	brlt	.-6      	; 0xc02 <__divsf3_pse+0x6a>
     c08:	98 3e       	cpi	r25, 0xE8	; 232
     c0a:	dc f3       	brlt	.-10     	; 0xc02 <__divsf3_pse+0x6a>
     c0c:	86 95       	lsr	r24
     c0e:	77 95       	ror	r23
     c10:	67 95       	ror	r22
     c12:	b7 95       	ror	r27
     c14:	f7 95       	ror	r31
     c16:	9f 5f       	subi	r25, 0xFF	; 255
     c18:	c9 f7       	brne	.-14     	; 0xc0c <__divsf3_pse+0x74>
     c1a:	88 0f       	add	r24, r24
     c1c:	91 1d       	adc	r25, r1
     c1e:	96 95       	lsr	r25
     c20:	87 95       	ror	r24
     c22:	97 f9       	bld	r25, 7
     c24:	08 95       	ret
     c26:	e1 e0       	ldi	r30, 0x01	; 1
     c28:	66 0f       	add	r22, r22
     c2a:	77 1f       	adc	r23, r23
     c2c:	88 1f       	adc	r24, r24
     c2e:	bb 1f       	adc	r27, r27
     c30:	62 17       	cp	r22, r18
     c32:	73 07       	cpc	r23, r19
     c34:	84 07       	cpc	r24, r20
     c36:	ba 07       	cpc	r27, r26
     c38:	20 f0       	brcs	.+8      	; 0xc42 <__divsf3_pse+0xaa>
     c3a:	62 1b       	sub	r22, r18
     c3c:	73 0b       	sbc	r23, r19
     c3e:	84 0b       	sbc	r24, r20
     c40:	ba 0b       	sbc	r27, r26
     c42:	ee 1f       	adc	r30, r30
     c44:	88 f7       	brcc	.-30     	; 0xc28 <__divsf3_pse+0x90>
     c46:	e0 95       	com	r30
     c48:	08 95       	ret

00000c4a <__fixunssfsi>:
     c4a:	98 d0       	rcall	.+304    	; 0xd7c <__fp_splitA>
     c4c:	88 f0       	brcs	.+34     	; 0xc70 <__fixunssfsi+0x26>
     c4e:	9f 57       	subi	r25, 0x7F	; 127
     c50:	90 f0       	brcs	.+36     	; 0xc76 <__fixunssfsi+0x2c>
     c52:	b9 2f       	mov	r27, r25
     c54:	99 27       	eor	r25, r25
     c56:	b7 51       	subi	r27, 0x17	; 23
     c58:	a0 f0       	brcs	.+40     	; 0xc82 <__fixunssfsi+0x38>
     c5a:	d1 f0       	breq	.+52     	; 0xc90 <__fixunssfsi+0x46>
     c5c:	66 0f       	add	r22, r22
     c5e:	77 1f       	adc	r23, r23
     c60:	88 1f       	adc	r24, r24
     c62:	99 1f       	adc	r25, r25
     c64:	1a f0       	brmi	.+6      	; 0xc6c <__fixunssfsi+0x22>
     c66:	ba 95       	dec	r27
     c68:	c9 f7       	brne	.-14     	; 0xc5c <__fixunssfsi+0x12>
     c6a:	12 c0       	rjmp	.+36     	; 0xc90 <__fixunssfsi+0x46>
     c6c:	b1 30       	cpi	r27, 0x01	; 1
     c6e:	81 f0       	breq	.+32     	; 0xc90 <__fixunssfsi+0x46>
     c70:	9f d0       	rcall	.+318    	; 0xdb0 <__fp_zero>
     c72:	b1 e0       	ldi	r27, 0x01	; 1
     c74:	08 95       	ret
     c76:	9c c0       	rjmp	.+312    	; 0xdb0 <__fp_zero>
     c78:	67 2f       	mov	r22, r23
     c7a:	78 2f       	mov	r23, r24
     c7c:	88 27       	eor	r24, r24
     c7e:	b8 5f       	subi	r27, 0xF8	; 248
     c80:	39 f0       	breq	.+14     	; 0xc90 <__fixunssfsi+0x46>
     c82:	b9 3f       	cpi	r27, 0xF9	; 249
     c84:	cc f3       	brlt	.-14     	; 0xc78 <__fixunssfsi+0x2e>
     c86:	86 95       	lsr	r24
     c88:	77 95       	ror	r23
     c8a:	67 95       	ror	r22
     c8c:	b3 95       	inc	r27
     c8e:	d9 f7       	brne	.-10     	; 0xc86 <__fixunssfsi+0x3c>
     c90:	3e f4       	brtc	.+14     	; 0xca0 <__fixunssfsi+0x56>
     c92:	90 95       	com	r25
     c94:	80 95       	com	r24
     c96:	70 95       	com	r23
     c98:	61 95       	neg	r22
     c9a:	7f 4f       	sbci	r23, 0xFF	; 255
     c9c:	8f 4f       	sbci	r24, 0xFF	; 255
     c9e:	9f 4f       	sbci	r25, 0xFF	; 255
     ca0:	08 95       	ret

00000ca2 <__floatunsisf>:
     ca2:	e8 94       	clt
     ca4:	09 c0       	rjmp	.+18     	; 0xcb8 <__floatsisf+0x12>

00000ca6 <__floatsisf>:
     ca6:	97 fb       	bst	r25, 7
     ca8:	3e f4       	brtc	.+14     	; 0xcb8 <__floatsisf+0x12>
     caa:	90 95       	com	r25
     cac:	80 95       	com	r24
     cae:	70 95       	com	r23
     cb0:	61 95       	neg	r22
     cb2:	7f 4f       	sbci	r23, 0xFF	; 255
     cb4:	8f 4f       	sbci	r24, 0xFF	; 255
     cb6:	9f 4f       	sbci	r25, 0xFF	; 255
     cb8:	99 23       	and	r25, r25
     cba:	a9 f0       	breq	.+42     	; 0xce6 <__floatsisf+0x40>
     cbc:	f9 2f       	mov	r31, r25
     cbe:	96 e9       	ldi	r25, 0x96	; 150
     cc0:	bb 27       	eor	r27, r27
     cc2:	93 95       	inc	r25
     cc4:	f6 95       	lsr	r31
     cc6:	87 95       	ror	r24
     cc8:	77 95       	ror	r23
     cca:	67 95       	ror	r22
     ccc:	b7 95       	ror	r27
     cce:	f1 11       	cpse	r31, r1
     cd0:	f8 cf       	rjmp	.-16     	; 0xcc2 <__floatsisf+0x1c>
     cd2:	fa f4       	brpl	.+62     	; 0xd12 <__floatsisf+0x6c>
     cd4:	bb 0f       	add	r27, r27
     cd6:	11 f4       	brne	.+4      	; 0xcdc <__floatsisf+0x36>
     cd8:	60 ff       	sbrs	r22, 0
     cda:	1b c0       	rjmp	.+54     	; 0xd12 <__floatsisf+0x6c>
     cdc:	6f 5f       	subi	r22, 0xFF	; 255
     cde:	7f 4f       	sbci	r23, 0xFF	; 255
     ce0:	8f 4f       	sbci	r24, 0xFF	; 255
     ce2:	9f 4f       	sbci	r25, 0xFF	; 255
     ce4:	16 c0       	rjmp	.+44     	; 0xd12 <__floatsisf+0x6c>
     ce6:	88 23       	and	r24, r24
     ce8:	11 f0       	breq	.+4      	; 0xcee <__floatsisf+0x48>
     cea:	96 e9       	ldi	r25, 0x96	; 150
     cec:	11 c0       	rjmp	.+34     	; 0xd10 <__floatsisf+0x6a>
     cee:	77 23       	and	r23, r23
     cf0:	21 f0       	breq	.+8      	; 0xcfa <__floatsisf+0x54>
     cf2:	9e e8       	ldi	r25, 0x8E	; 142
     cf4:	87 2f       	mov	r24, r23
     cf6:	76 2f       	mov	r23, r22
     cf8:	05 c0       	rjmp	.+10     	; 0xd04 <__floatsisf+0x5e>
     cfa:	66 23       	and	r22, r22
     cfc:	71 f0       	breq	.+28     	; 0xd1a <__floatsisf+0x74>
     cfe:	96 e8       	ldi	r25, 0x86	; 134
     d00:	86 2f       	mov	r24, r22
     d02:	70 e0       	ldi	r23, 0x00	; 0
     d04:	60 e0       	ldi	r22, 0x00	; 0
     d06:	2a f0       	brmi	.+10     	; 0xd12 <__floatsisf+0x6c>
     d08:	9a 95       	dec	r25
     d0a:	66 0f       	add	r22, r22
     d0c:	77 1f       	adc	r23, r23
     d0e:	88 1f       	adc	r24, r24
     d10:	da f7       	brpl	.-10     	; 0xd08 <__floatsisf+0x62>
     d12:	88 0f       	add	r24, r24
     d14:	96 95       	lsr	r25
     d16:	87 95       	ror	r24
     d18:	97 f9       	bld	r25, 7
     d1a:	08 95       	ret

00000d1c <__fp_inf>:
     d1c:	97 f9       	bld	r25, 7
     d1e:	9f 67       	ori	r25, 0x7F	; 127
     d20:	80 e8       	ldi	r24, 0x80	; 128
     d22:	70 e0       	ldi	r23, 0x00	; 0
     d24:	60 e0       	ldi	r22, 0x00	; 0
     d26:	08 95       	ret

00000d28 <__fp_nan>:
     d28:	9f ef       	ldi	r25, 0xFF	; 255
     d2a:	80 ec       	ldi	r24, 0xC0	; 192
     d2c:	08 95       	ret

00000d2e <__fp_pscA>:
     d2e:	00 24       	eor	r0, r0
     d30:	0a 94       	dec	r0
     d32:	16 16       	cp	r1, r22
     d34:	17 06       	cpc	r1, r23
     d36:	18 06       	cpc	r1, r24
     d38:	09 06       	cpc	r0, r25
     d3a:	08 95       	ret

00000d3c <__fp_pscB>:
     d3c:	00 24       	eor	r0, r0
     d3e:	0a 94       	dec	r0
     d40:	12 16       	cp	r1, r18
     d42:	13 06       	cpc	r1, r19
     d44:	14 06       	cpc	r1, r20
     d46:	05 06       	cpc	r0, r21
     d48:	08 95       	ret

00000d4a <__fp_round>:
     d4a:	09 2e       	mov	r0, r25
     d4c:	03 94       	inc	r0
     d4e:	00 0c       	add	r0, r0
     d50:	11 f4       	brne	.+4      	; 0xd56 <__fp_round+0xc>
     d52:	88 23       	and	r24, r24
     d54:	52 f0       	brmi	.+20     	; 0xd6a <__fp_round+0x20>
     d56:	bb 0f       	add	r27, r27
     d58:	40 f4       	brcc	.+16     	; 0xd6a <__fp_round+0x20>
     d5a:	bf 2b       	or	r27, r31
     d5c:	11 f4       	brne	.+4      	; 0xd62 <__fp_round+0x18>
     d5e:	60 ff       	sbrs	r22, 0
     d60:	04 c0       	rjmp	.+8      	; 0xd6a <__fp_round+0x20>
     d62:	6f 5f       	subi	r22, 0xFF	; 255
     d64:	7f 4f       	sbci	r23, 0xFF	; 255
     d66:	8f 4f       	sbci	r24, 0xFF	; 255
     d68:	9f 4f       	sbci	r25, 0xFF	; 255
     d6a:	08 95       	ret

00000d6c <__fp_split3>:
     d6c:	57 fd       	sbrc	r21, 7
     d6e:	90 58       	subi	r25, 0x80	; 128
     d70:	44 0f       	add	r20, r20
     d72:	55 1f       	adc	r21, r21
     d74:	59 f0       	breq	.+22     	; 0xd8c <__fp_splitA+0x10>
     d76:	5f 3f       	cpi	r21, 0xFF	; 255
     d78:	71 f0       	breq	.+28     	; 0xd96 <__fp_splitA+0x1a>
     d7a:	47 95       	ror	r20

00000d7c <__fp_splitA>:
     d7c:	88 0f       	add	r24, r24
     d7e:	97 fb       	bst	r25, 7
     d80:	99 1f       	adc	r25, r25
     d82:	61 f0       	breq	.+24     	; 0xd9c <__fp_splitA+0x20>
     d84:	9f 3f       	cpi	r25, 0xFF	; 255
     d86:	79 f0       	breq	.+30     	; 0xda6 <__fp_splitA+0x2a>
     d88:	87 95       	ror	r24
     d8a:	08 95       	ret
     d8c:	12 16       	cp	r1, r18
     d8e:	13 06       	cpc	r1, r19
     d90:	14 06       	cpc	r1, r20
     d92:	55 1f       	adc	r21, r21
     d94:	f2 cf       	rjmp	.-28     	; 0xd7a <__fp_split3+0xe>
     d96:	46 95       	lsr	r20
     d98:	f1 df       	rcall	.-30     	; 0xd7c <__fp_splitA>
     d9a:	08 c0       	rjmp	.+16     	; 0xdac <__fp_splitA+0x30>
     d9c:	16 16       	cp	r1, r22
     d9e:	17 06       	cpc	r1, r23
     da0:	18 06       	cpc	r1, r24
     da2:	99 1f       	adc	r25, r25
     da4:	f1 cf       	rjmp	.-30     	; 0xd88 <__fp_splitA+0xc>
     da6:	86 95       	lsr	r24
     da8:	71 05       	cpc	r23, r1
     daa:	61 05       	cpc	r22, r1
     dac:	08 94       	sec
     dae:	08 95       	ret

00000db0 <__fp_zero>:
     db0:	e8 94       	clt

00000db2 <__fp_szero>:
     db2:	bb 27       	eor	r27, r27
     db4:	66 27       	eor	r22, r22
     db6:	77 27       	eor	r23, r23
     db8:	cb 01       	movw	r24, r22
     dba:	97 f9       	bld	r25, 7
     dbc:	08 95       	ret

00000dbe <__mulsf3>:
     dbe:	0b d0       	rcall	.+22     	; 0xdd6 <__mulsf3x>
     dc0:	c4 cf       	rjmp	.-120    	; 0xd4a <__fp_round>
     dc2:	b5 df       	rcall	.-150    	; 0xd2e <__fp_pscA>
     dc4:	28 f0       	brcs	.+10     	; 0xdd0 <__mulsf3+0x12>
     dc6:	ba df       	rcall	.-140    	; 0xd3c <__fp_pscB>
     dc8:	18 f0       	brcs	.+6      	; 0xdd0 <__mulsf3+0x12>
     dca:	95 23       	and	r25, r21
     dcc:	09 f0       	breq	.+2      	; 0xdd0 <__mulsf3+0x12>
     dce:	a6 cf       	rjmp	.-180    	; 0xd1c <__fp_inf>
     dd0:	ab cf       	rjmp	.-170    	; 0xd28 <__fp_nan>
     dd2:	11 24       	eor	r1, r1
     dd4:	ee cf       	rjmp	.-36     	; 0xdb2 <__fp_szero>

00000dd6 <__mulsf3x>:
     dd6:	ca df       	rcall	.-108    	; 0xd6c <__fp_split3>
     dd8:	a0 f3       	brcs	.-24     	; 0xdc2 <__mulsf3+0x4>

00000dda <__mulsf3_pse>:
     dda:	95 9f       	mul	r25, r21
     ddc:	d1 f3       	breq	.-12     	; 0xdd2 <__mulsf3+0x14>
     dde:	95 0f       	add	r25, r21
     de0:	50 e0       	ldi	r21, 0x00	; 0
     de2:	55 1f       	adc	r21, r21
     de4:	62 9f       	mul	r22, r18
     de6:	f0 01       	movw	r30, r0
     de8:	72 9f       	mul	r23, r18
     dea:	bb 27       	eor	r27, r27
     dec:	f0 0d       	add	r31, r0
     dee:	b1 1d       	adc	r27, r1
     df0:	63 9f       	mul	r22, r19
     df2:	aa 27       	eor	r26, r26
     df4:	f0 0d       	add	r31, r0
     df6:	b1 1d       	adc	r27, r1
     df8:	aa 1f       	adc	r26, r26
     dfa:	64 9f       	mul	r22, r20
     dfc:	66 27       	eor	r22, r22
     dfe:	b0 0d       	add	r27, r0
     e00:	a1 1d       	adc	r26, r1
     e02:	66 1f       	adc	r22, r22
     e04:	82 9f       	mul	r24, r18
     e06:	22 27       	eor	r18, r18
     e08:	b0 0d       	add	r27, r0
     e0a:	a1 1d       	adc	r26, r1
     e0c:	62 1f       	adc	r22, r18
     e0e:	73 9f       	mul	r23, r19
     e10:	b0 0d       	add	r27, r0
     e12:	a1 1d       	adc	r26, r1
     e14:	62 1f       	adc	r22, r18
     e16:	83 9f       	mul	r24, r19
     e18:	a0 0d       	add	r26, r0
     e1a:	61 1d       	adc	r22, r1
     e1c:	22 1f       	adc	r18, r18
     e1e:	74 9f       	mul	r23, r20
     e20:	33 27       	eor	r19, r19
     e22:	a0 0d       	add	r26, r0
     e24:	61 1d       	adc	r22, r1
     e26:	23 1f       	adc	r18, r19
     e28:	84 9f       	mul	r24, r20
     e2a:	60 0d       	add	r22, r0
     e2c:	21 1d       	adc	r18, r1
     e2e:	82 2f       	mov	r24, r18
     e30:	76 2f       	mov	r23, r22
     e32:	6a 2f       	mov	r22, r26
     e34:	11 24       	eor	r1, r1
     e36:	9f 57       	subi	r25, 0x7F	; 127
     e38:	50 40       	sbci	r21, 0x00	; 0
     e3a:	8a f0       	brmi	.+34     	; 0xe5e <__mulsf3_pse+0x84>
     e3c:	e1 f0       	breq	.+56     	; 0xe76 <__mulsf3_pse+0x9c>
     e3e:	88 23       	and	r24, r24
     e40:	4a f0       	brmi	.+18     	; 0xe54 <__mulsf3_pse+0x7a>
     e42:	ee 0f       	add	r30, r30
     e44:	ff 1f       	adc	r31, r31
     e46:	bb 1f       	adc	r27, r27
     e48:	66 1f       	adc	r22, r22
     e4a:	77 1f       	adc	r23, r23
     e4c:	88 1f       	adc	r24, r24
     e4e:	91 50       	subi	r25, 0x01	; 1
     e50:	50 40       	sbci	r21, 0x00	; 0
     e52:	a9 f7       	brne	.-22     	; 0xe3e <__mulsf3_pse+0x64>
     e54:	9e 3f       	cpi	r25, 0xFE	; 254
     e56:	51 05       	cpc	r21, r1
     e58:	70 f0       	brcs	.+28     	; 0xe76 <__mulsf3_pse+0x9c>
     e5a:	60 cf       	rjmp	.-320    	; 0xd1c <__fp_inf>
     e5c:	aa cf       	rjmp	.-172    	; 0xdb2 <__fp_szero>
     e5e:	5f 3f       	cpi	r21, 0xFF	; 255
     e60:	ec f3       	brlt	.-6      	; 0xe5c <__mulsf3_pse+0x82>
     e62:	98 3e       	cpi	r25, 0xE8	; 232
     e64:	dc f3       	brlt	.-10     	; 0xe5c <__mulsf3_pse+0x82>
     e66:	86 95       	lsr	r24
     e68:	77 95       	ror	r23
     e6a:	67 95       	ror	r22
     e6c:	b7 95       	ror	r27
     e6e:	f7 95       	ror	r31
     e70:	e7 95       	ror	r30
     e72:	9f 5f       	subi	r25, 0xFF	; 255
     e74:	c1 f7       	brne	.-16     	; 0xe66 <__mulsf3_pse+0x8c>
     e76:	fe 2b       	or	r31, r30
     e78:	88 0f       	add	r24, r24
     e7a:	91 1d       	adc	r25, r1
     e7c:	96 95       	lsr	r25
     e7e:	87 95       	ror	r24
     e80:	97 f9       	bld	r25, 7
     e82:	08 95       	ret

00000e84 <__umulhisi3>:
     e84:	a2 9f       	mul	r26, r18
     e86:	b0 01       	movw	r22, r0
     e88:	b3 9f       	mul	r27, r19
     e8a:	c0 01       	movw	r24, r0
     e8c:	a3 9f       	mul	r26, r19
     e8e:	70 0d       	add	r23, r0
     e90:	81 1d       	adc	r24, r1
     e92:	11 24       	eor	r1, r1
     e94:	91 1d       	adc	r25, r1
     e96:	b2 9f       	mul	r27, r18
     e98:	70 0d       	add	r23, r0
     e9a:	81 1d       	adc	r24, r1
     e9c:	11 24       	eor	r1, r1
     e9e:	91 1d       	adc	r25, r1
     ea0:	08 95       	ret

00000ea2 <sprintf>:
     ea2:	ae e0       	ldi	r26, 0x0E	; 14
     ea4:	b0 e0       	ldi	r27, 0x00	; 0
     ea6:	e7 e5       	ldi	r30, 0x57	; 87
     ea8:	f7 e0       	ldi	r31, 0x07	; 7
     eaa:	0c 94 f9 09 	jmp	0x13f2	; 0x13f2 <__prologue_saves__+0x1c>
     eae:	0d 89       	ldd	r16, Y+21	; 0x15
     eb0:	1e 89       	ldd	r17, Y+22	; 0x16
     eb2:	86 e0       	ldi	r24, 0x06	; 6
     eb4:	8c 83       	std	Y+4, r24	; 0x04
     eb6:	1a 83       	std	Y+2, r17	; 0x02
     eb8:	09 83       	std	Y+1, r16	; 0x01
     eba:	8f ef       	ldi	r24, 0xFF	; 255
     ebc:	9f e7       	ldi	r25, 0x7F	; 127
     ebe:	9e 83       	std	Y+6, r25	; 0x06
     ec0:	8d 83       	std	Y+5, r24	; 0x05
     ec2:	ae 01       	movw	r20, r28
     ec4:	47 5e       	subi	r20, 0xE7	; 231
     ec6:	5f 4f       	sbci	r21, 0xFF	; 255
     ec8:	6f 89       	ldd	r22, Y+23	; 0x17
     eca:	78 8d       	ldd	r23, Y+24	; 0x18
     ecc:	ce 01       	movw	r24, r28
     ece:	01 96       	adiw	r24, 0x01	; 1
     ed0:	0e 94 73 07 	call	0xee6	; 0xee6 <vfprintf>
     ed4:	ef 81       	ldd	r30, Y+7	; 0x07
     ed6:	f8 85       	ldd	r31, Y+8	; 0x08
     ed8:	e0 0f       	add	r30, r16
     eda:	f1 1f       	adc	r31, r17
     edc:	10 82       	st	Z, r1
     ede:	2e 96       	adiw	r28, 0x0e	; 14
     ee0:	e4 e0       	ldi	r30, 0x04	; 4
     ee2:	0c 94 15 0a 	jmp	0x142a	; 0x142a <__epilogue_restores__+0x1c>

00000ee6 <vfprintf>:
     ee6:	ac e0       	ldi	r26, 0x0C	; 12
     ee8:	b0 e0       	ldi	r27, 0x00	; 0
     eea:	e9 e7       	ldi	r30, 0x79	; 121
     eec:	f7 e0       	ldi	r31, 0x07	; 7
     eee:	0c 94 eb 09 	jmp	0x13d6	; 0x13d6 <__prologue_saves__>
     ef2:	7c 01       	movw	r14, r24
     ef4:	6b 01       	movw	r12, r22
     ef6:	8a 01       	movw	r16, r20
     ef8:	fc 01       	movw	r30, r24
     efa:	17 82       	std	Z+7, r1	; 0x07
     efc:	16 82       	std	Z+6, r1	; 0x06
     efe:	83 81       	ldd	r24, Z+3	; 0x03
     f00:	81 ff       	sbrs	r24, 1
     f02:	bd c1       	rjmp	.+890    	; 0x127e <vfprintf+0x398>
     f04:	ce 01       	movw	r24, r28
     f06:	01 96       	adiw	r24, 0x01	; 1
     f08:	4c 01       	movw	r8, r24
     f0a:	f7 01       	movw	r30, r14
     f0c:	93 81       	ldd	r25, Z+3	; 0x03
     f0e:	f6 01       	movw	r30, r12
     f10:	93 fd       	sbrc	r25, 3
     f12:	85 91       	lpm	r24, Z+
     f14:	93 ff       	sbrs	r25, 3
     f16:	81 91       	ld	r24, Z+
     f18:	6f 01       	movw	r12, r30
     f1a:	88 23       	and	r24, r24
     f1c:	09 f4       	brne	.+2      	; 0xf20 <vfprintf+0x3a>
     f1e:	ab c1       	rjmp	.+854    	; 0x1276 <vfprintf+0x390>
     f20:	85 32       	cpi	r24, 0x25	; 37
     f22:	39 f4       	brne	.+14     	; 0xf32 <vfprintf+0x4c>
     f24:	93 fd       	sbrc	r25, 3
     f26:	85 91       	lpm	r24, Z+
     f28:	93 ff       	sbrs	r25, 3
     f2a:	81 91       	ld	r24, Z+
     f2c:	6f 01       	movw	r12, r30
     f2e:	85 32       	cpi	r24, 0x25	; 37
     f30:	29 f4       	brne	.+10     	; 0xf3c <vfprintf+0x56>
     f32:	b7 01       	movw	r22, r14
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <fputc>
     f3a:	e7 cf       	rjmp	.-50     	; 0xf0a <vfprintf+0x24>
     f3c:	51 2c       	mov	r5, r1
     f3e:	31 2c       	mov	r3, r1
     f40:	20 e0       	ldi	r18, 0x00	; 0
     f42:	20 32       	cpi	r18, 0x20	; 32
     f44:	a0 f4       	brcc	.+40     	; 0xf6e <vfprintf+0x88>
     f46:	8b 32       	cpi	r24, 0x2B	; 43
     f48:	69 f0       	breq	.+26     	; 0xf64 <vfprintf+0x7e>
     f4a:	30 f4       	brcc	.+12     	; 0xf58 <vfprintf+0x72>
     f4c:	80 32       	cpi	r24, 0x20	; 32
     f4e:	59 f0       	breq	.+22     	; 0xf66 <vfprintf+0x80>
     f50:	83 32       	cpi	r24, 0x23	; 35
     f52:	69 f4       	brne	.+26     	; 0xf6e <vfprintf+0x88>
     f54:	20 61       	ori	r18, 0x10	; 16
     f56:	2c c0       	rjmp	.+88     	; 0xfb0 <vfprintf+0xca>
     f58:	8d 32       	cpi	r24, 0x2D	; 45
     f5a:	39 f0       	breq	.+14     	; 0xf6a <vfprintf+0x84>
     f5c:	80 33       	cpi	r24, 0x30	; 48
     f5e:	39 f4       	brne	.+14     	; 0xf6e <vfprintf+0x88>
     f60:	21 60       	ori	r18, 0x01	; 1
     f62:	26 c0       	rjmp	.+76     	; 0xfb0 <vfprintf+0xca>
     f64:	22 60       	ori	r18, 0x02	; 2
     f66:	24 60       	ori	r18, 0x04	; 4
     f68:	23 c0       	rjmp	.+70     	; 0xfb0 <vfprintf+0xca>
     f6a:	28 60       	ori	r18, 0x08	; 8
     f6c:	21 c0       	rjmp	.+66     	; 0xfb0 <vfprintf+0xca>
     f6e:	27 fd       	sbrc	r18, 7
     f70:	27 c0       	rjmp	.+78     	; 0xfc0 <vfprintf+0xda>
     f72:	30 ed       	ldi	r19, 0xD0	; 208
     f74:	38 0f       	add	r19, r24
     f76:	3a 30       	cpi	r19, 0x0A	; 10
     f78:	78 f4       	brcc	.+30     	; 0xf98 <vfprintf+0xb2>
     f7a:	26 ff       	sbrs	r18, 6
     f7c:	06 c0       	rjmp	.+12     	; 0xf8a <vfprintf+0xa4>
     f7e:	fa e0       	ldi	r31, 0x0A	; 10
     f80:	5f 9e       	mul	r5, r31
     f82:	30 0d       	add	r19, r0
     f84:	11 24       	eor	r1, r1
     f86:	53 2e       	mov	r5, r19
     f88:	13 c0       	rjmp	.+38     	; 0xfb0 <vfprintf+0xca>
     f8a:	8a e0       	ldi	r24, 0x0A	; 10
     f8c:	38 9e       	mul	r3, r24
     f8e:	30 0d       	add	r19, r0
     f90:	11 24       	eor	r1, r1
     f92:	33 2e       	mov	r3, r19
     f94:	20 62       	ori	r18, 0x20	; 32
     f96:	0c c0       	rjmp	.+24     	; 0xfb0 <vfprintf+0xca>
     f98:	8e 32       	cpi	r24, 0x2E	; 46
     f9a:	21 f4       	brne	.+8      	; 0xfa4 <vfprintf+0xbe>
     f9c:	26 fd       	sbrc	r18, 6
     f9e:	6b c1       	rjmp	.+726    	; 0x1276 <vfprintf+0x390>
     fa0:	20 64       	ori	r18, 0x40	; 64
     fa2:	06 c0       	rjmp	.+12     	; 0xfb0 <vfprintf+0xca>
     fa4:	8c 36       	cpi	r24, 0x6C	; 108
     fa6:	11 f4       	brne	.+4      	; 0xfac <vfprintf+0xc6>
     fa8:	20 68       	ori	r18, 0x80	; 128
     faa:	02 c0       	rjmp	.+4      	; 0xfb0 <vfprintf+0xca>
     fac:	88 36       	cpi	r24, 0x68	; 104
     fae:	41 f4       	brne	.+16     	; 0xfc0 <vfprintf+0xda>
     fb0:	f6 01       	movw	r30, r12
     fb2:	93 fd       	sbrc	r25, 3
     fb4:	85 91       	lpm	r24, Z+
     fb6:	93 ff       	sbrs	r25, 3
     fb8:	81 91       	ld	r24, Z+
     fba:	6f 01       	movw	r12, r30
     fbc:	81 11       	cpse	r24, r1
     fbe:	c1 cf       	rjmp	.-126    	; 0xf42 <vfprintf+0x5c>
     fc0:	98 2f       	mov	r25, r24
     fc2:	9f 7d       	andi	r25, 0xDF	; 223
     fc4:	95 54       	subi	r25, 0x45	; 69
     fc6:	93 30       	cpi	r25, 0x03	; 3
     fc8:	28 f4       	brcc	.+10     	; 0xfd4 <vfprintf+0xee>
     fca:	0c 5f       	subi	r16, 0xFC	; 252
     fcc:	1f 4f       	sbci	r17, 0xFF	; 255
     fce:	ff e3       	ldi	r31, 0x3F	; 63
     fd0:	f9 83       	std	Y+1, r31	; 0x01
     fd2:	0d c0       	rjmp	.+26     	; 0xfee <vfprintf+0x108>
     fd4:	83 36       	cpi	r24, 0x63	; 99
     fd6:	31 f0       	breq	.+12     	; 0xfe4 <vfprintf+0xfe>
     fd8:	83 37       	cpi	r24, 0x73	; 115
     fda:	71 f0       	breq	.+28     	; 0xff8 <vfprintf+0x112>
     fdc:	83 35       	cpi	r24, 0x53	; 83
     fde:	09 f0       	breq	.+2      	; 0xfe2 <vfprintf+0xfc>
     fe0:	5b c0       	rjmp	.+182    	; 0x1098 <vfprintf+0x1b2>
     fe2:	22 c0       	rjmp	.+68     	; 0x1028 <vfprintf+0x142>
     fe4:	f8 01       	movw	r30, r16
     fe6:	80 81       	ld	r24, Z
     fe8:	89 83       	std	Y+1, r24	; 0x01
     fea:	0e 5f       	subi	r16, 0xFE	; 254
     fec:	1f 4f       	sbci	r17, 0xFF	; 255
     fee:	44 24       	eor	r4, r4
     ff0:	43 94       	inc	r4
     ff2:	51 2c       	mov	r5, r1
     ff4:	54 01       	movw	r10, r8
     ff6:	15 c0       	rjmp	.+42     	; 0x1022 <vfprintf+0x13c>
     ff8:	38 01       	movw	r6, r16
     ffa:	f2 e0       	ldi	r31, 0x02	; 2
     ffc:	6f 0e       	add	r6, r31
     ffe:	71 1c       	adc	r7, r1
    1000:	f8 01       	movw	r30, r16
    1002:	a0 80       	ld	r10, Z
    1004:	b1 80       	ldd	r11, Z+1	; 0x01
    1006:	26 ff       	sbrs	r18, 6
    1008:	03 c0       	rjmp	.+6      	; 0x1010 <vfprintf+0x12a>
    100a:	65 2d       	mov	r22, r5
    100c:	70 e0       	ldi	r23, 0x00	; 0
    100e:	02 c0       	rjmp	.+4      	; 0x1014 <vfprintf+0x12e>
    1010:	6f ef       	ldi	r22, 0xFF	; 255
    1012:	7f ef       	ldi	r23, 0xFF	; 255
    1014:	c5 01       	movw	r24, r10
    1016:	2c 87       	std	Y+12, r18	; 0x0c
    1018:	0e 94 50 09 	call	0x12a0	; 0x12a0 <strnlen>
    101c:	2c 01       	movw	r4, r24
    101e:	83 01       	movw	r16, r6
    1020:	2c 85       	ldd	r18, Y+12	; 0x0c
    1022:	2f 77       	andi	r18, 0x7F	; 127
    1024:	22 2e       	mov	r2, r18
    1026:	17 c0       	rjmp	.+46     	; 0x1056 <vfprintf+0x170>
    1028:	38 01       	movw	r6, r16
    102a:	f2 e0       	ldi	r31, 0x02	; 2
    102c:	6f 0e       	add	r6, r31
    102e:	71 1c       	adc	r7, r1
    1030:	f8 01       	movw	r30, r16
    1032:	a0 80       	ld	r10, Z
    1034:	b1 80       	ldd	r11, Z+1	; 0x01
    1036:	26 ff       	sbrs	r18, 6
    1038:	03 c0       	rjmp	.+6      	; 0x1040 <vfprintf+0x15a>
    103a:	65 2d       	mov	r22, r5
    103c:	70 e0       	ldi	r23, 0x00	; 0
    103e:	02 c0       	rjmp	.+4      	; 0x1044 <vfprintf+0x15e>
    1040:	6f ef       	ldi	r22, 0xFF	; 255
    1042:	7f ef       	ldi	r23, 0xFF	; 255
    1044:	c5 01       	movw	r24, r10
    1046:	2c 87       	std	Y+12, r18	; 0x0c
    1048:	0e 94 45 09 	call	0x128a	; 0x128a <strnlen_P>
    104c:	2c 01       	movw	r4, r24
    104e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1050:	20 68       	ori	r18, 0x80	; 128
    1052:	22 2e       	mov	r2, r18
    1054:	83 01       	movw	r16, r6
    1056:	23 fc       	sbrc	r2, 3
    1058:	1b c0       	rjmp	.+54     	; 0x1090 <vfprintf+0x1aa>
    105a:	83 2d       	mov	r24, r3
    105c:	90 e0       	ldi	r25, 0x00	; 0
    105e:	48 16       	cp	r4, r24
    1060:	59 06       	cpc	r5, r25
    1062:	b0 f4       	brcc	.+44     	; 0x1090 <vfprintf+0x1aa>
    1064:	b7 01       	movw	r22, r14
    1066:	80 e2       	ldi	r24, 0x20	; 32
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <fputc>
    106e:	3a 94       	dec	r3
    1070:	f4 cf       	rjmp	.-24     	; 0x105a <vfprintf+0x174>
    1072:	f5 01       	movw	r30, r10
    1074:	27 fc       	sbrc	r2, 7
    1076:	85 91       	lpm	r24, Z+
    1078:	27 fe       	sbrs	r2, 7
    107a:	81 91       	ld	r24, Z+
    107c:	5f 01       	movw	r10, r30
    107e:	b7 01       	movw	r22, r14
    1080:	90 e0       	ldi	r25, 0x00	; 0
    1082:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <fputc>
    1086:	31 10       	cpse	r3, r1
    1088:	3a 94       	dec	r3
    108a:	f1 e0       	ldi	r31, 0x01	; 1
    108c:	4f 1a       	sub	r4, r31
    108e:	51 08       	sbc	r5, r1
    1090:	41 14       	cp	r4, r1
    1092:	51 04       	cpc	r5, r1
    1094:	71 f7       	brne	.-36     	; 0x1072 <vfprintf+0x18c>
    1096:	e5 c0       	rjmp	.+458    	; 0x1262 <vfprintf+0x37c>
    1098:	84 36       	cpi	r24, 0x64	; 100
    109a:	11 f0       	breq	.+4      	; 0x10a0 <vfprintf+0x1ba>
    109c:	89 36       	cpi	r24, 0x69	; 105
    109e:	39 f5       	brne	.+78     	; 0x10ee <vfprintf+0x208>
    10a0:	f8 01       	movw	r30, r16
    10a2:	27 ff       	sbrs	r18, 7
    10a4:	07 c0       	rjmp	.+14     	; 0x10b4 <vfprintf+0x1ce>
    10a6:	60 81       	ld	r22, Z
    10a8:	71 81       	ldd	r23, Z+1	; 0x01
    10aa:	82 81       	ldd	r24, Z+2	; 0x02
    10ac:	93 81       	ldd	r25, Z+3	; 0x03
    10ae:	0c 5f       	subi	r16, 0xFC	; 252
    10b0:	1f 4f       	sbci	r17, 0xFF	; 255
    10b2:	08 c0       	rjmp	.+16     	; 0x10c4 <vfprintf+0x1de>
    10b4:	60 81       	ld	r22, Z
    10b6:	71 81       	ldd	r23, Z+1	; 0x01
    10b8:	88 27       	eor	r24, r24
    10ba:	77 fd       	sbrc	r23, 7
    10bc:	80 95       	com	r24
    10be:	98 2f       	mov	r25, r24
    10c0:	0e 5f       	subi	r16, 0xFE	; 254
    10c2:	1f 4f       	sbci	r17, 0xFF	; 255
    10c4:	2f 76       	andi	r18, 0x6F	; 111
    10c6:	b2 2e       	mov	r11, r18
    10c8:	97 ff       	sbrs	r25, 7
    10ca:	09 c0       	rjmp	.+18     	; 0x10de <vfprintf+0x1f8>
    10cc:	90 95       	com	r25
    10ce:	80 95       	com	r24
    10d0:	70 95       	com	r23
    10d2:	61 95       	neg	r22
    10d4:	7f 4f       	sbci	r23, 0xFF	; 255
    10d6:	8f 4f       	sbci	r24, 0xFF	; 255
    10d8:	9f 4f       	sbci	r25, 0xFF	; 255
    10da:	20 68       	ori	r18, 0x80	; 128
    10dc:	b2 2e       	mov	r11, r18
    10de:	2a e0       	ldi	r18, 0x0A	; 10
    10e0:	30 e0       	ldi	r19, 0x00	; 0
    10e2:	a4 01       	movw	r20, r8
    10e4:	0e 94 8d 09 	call	0x131a	; 0x131a <__ultoa_invert>
    10e8:	a8 2e       	mov	r10, r24
    10ea:	a8 18       	sub	r10, r8
    10ec:	44 c0       	rjmp	.+136    	; 0x1176 <vfprintf+0x290>
    10ee:	85 37       	cpi	r24, 0x75	; 117
    10f0:	29 f4       	brne	.+10     	; 0x10fc <vfprintf+0x216>
    10f2:	2f 7e       	andi	r18, 0xEF	; 239
    10f4:	b2 2e       	mov	r11, r18
    10f6:	2a e0       	ldi	r18, 0x0A	; 10
    10f8:	30 e0       	ldi	r19, 0x00	; 0
    10fa:	25 c0       	rjmp	.+74     	; 0x1146 <vfprintf+0x260>
    10fc:	f2 2f       	mov	r31, r18
    10fe:	f9 7f       	andi	r31, 0xF9	; 249
    1100:	bf 2e       	mov	r11, r31
    1102:	8f 36       	cpi	r24, 0x6F	; 111
    1104:	c1 f0       	breq	.+48     	; 0x1136 <vfprintf+0x250>
    1106:	18 f4       	brcc	.+6      	; 0x110e <vfprintf+0x228>
    1108:	88 35       	cpi	r24, 0x58	; 88
    110a:	79 f0       	breq	.+30     	; 0x112a <vfprintf+0x244>
    110c:	b4 c0       	rjmp	.+360    	; 0x1276 <vfprintf+0x390>
    110e:	80 37       	cpi	r24, 0x70	; 112
    1110:	19 f0       	breq	.+6      	; 0x1118 <vfprintf+0x232>
    1112:	88 37       	cpi	r24, 0x78	; 120
    1114:	21 f0       	breq	.+8      	; 0x111e <vfprintf+0x238>
    1116:	af c0       	rjmp	.+350    	; 0x1276 <vfprintf+0x390>
    1118:	2f 2f       	mov	r18, r31
    111a:	20 61       	ori	r18, 0x10	; 16
    111c:	b2 2e       	mov	r11, r18
    111e:	b4 fe       	sbrs	r11, 4
    1120:	0d c0       	rjmp	.+26     	; 0x113c <vfprintf+0x256>
    1122:	8b 2d       	mov	r24, r11
    1124:	84 60       	ori	r24, 0x04	; 4
    1126:	b8 2e       	mov	r11, r24
    1128:	09 c0       	rjmp	.+18     	; 0x113c <vfprintf+0x256>
    112a:	24 ff       	sbrs	r18, 4
    112c:	0a c0       	rjmp	.+20     	; 0x1142 <vfprintf+0x25c>
    112e:	9f 2f       	mov	r25, r31
    1130:	96 60       	ori	r25, 0x06	; 6
    1132:	b9 2e       	mov	r11, r25
    1134:	06 c0       	rjmp	.+12     	; 0x1142 <vfprintf+0x25c>
    1136:	28 e0       	ldi	r18, 0x08	; 8
    1138:	30 e0       	ldi	r19, 0x00	; 0
    113a:	05 c0       	rjmp	.+10     	; 0x1146 <vfprintf+0x260>
    113c:	20 e1       	ldi	r18, 0x10	; 16
    113e:	30 e0       	ldi	r19, 0x00	; 0
    1140:	02 c0       	rjmp	.+4      	; 0x1146 <vfprintf+0x260>
    1142:	20 e1       	ldi	r18, 0x10	; 16
    1144:	32 e0       	ldi	r19, 0x02	; 2
    1146:	f8 01       	movw	r30, r16
    1148:	b7 fe       	sbrs	r11, 7
    114a:	07 c0       	rjmp	.+14     	; 0x115a <vfprintf+0x274>
    114c:	60 81       	ld	r22, Z
    114e:	71 81       	ldd	r23, Z+1	; 0x01
    1150:	82 81       	ldd	r24, Z+2	; 0x02
    1152:	93 81       	ldd	r25, Z+3	; 0x03
    1154:	0c 5f       	subi	r16, 0xFC	; 252
    1156:	1f 4f       	sbci	r17, 0xFF	; 255
    1158:	06 c0       	rjmp	.+12     	; 0x1166 <vfprintf+0x280>
    115a:	60 81       	ld	r22, Z
    115c:	71 81       	ldd	r23, Z+1	; 0x01
    115e:	80 e0       	ldi	r24, 0x00	; 0
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	0e 5f       	subi	r16, 0xFE	; 254
    1164:	1f 4f       	sbci	r17, 0xFF	; 255
    1166:	a4 01       	movw	r20, r8
    1168:	0e 94 8d 09 	call	0x131a	; 0x131a <__ultoa_invert>
    116c:	a8 2e       	mov	r10, r24
    116e:	a8 18       	sub	r10, r8
    1170:	fb 2d       	mov	r31, r11
    1172:	ff 77       	andi	r31, 0x7F	; 127
    1174:	bf 2e       	mov	r11, r31
    1176:	b6 fe       	sbrs	r11, 6
    1178:	0b c0       	rjmp	.+22     	; 0x1190 <vfprintf+0x2aa>
    117a:	2b 2d       	mov	r18, r11
    117c:	2e 7f       	andi	r18, 0xFE	; 254
    117e:	a5 14       	cp	r10, r5
    1180:	50 f4       	brcc	.+20     	; 0x1196 <vfprintf+0x2b0>
    1182:	b4 fe       	sbrs	r11, 4
    1184:	0a c0       	rjmp	.+20     	; 0x119a <vfprintf+0x2b4>
    1186:	b2 fc       	sbrc	r11, 2
    1188:	08 c0       	rjmp	.+16     	; 0x119a <vfprintf+0x2b4>
    118a:	2b 2d       	mov	r18, r11
    118c:	2e 7e       	andi	r18, 0xEE	; 238
    118e:	05 c0       	rjmp	.+10     	; 0x119a <vfprintf+0x2b4>
    1190:	7a 2c       	mov	r7, r10
    1192:	2b 2d       	mov	r18, r11
    1194:	03 c0       	rjmp	.+6      	; 0x119c <vfprintf+0x2b6>
    1196:	7a 2c       	mov	r7, r10
    1198:	01 c0       	rjmp	.+2      	; 0x119c <vfprintf+0x2b6>
    119a:	75 2c       	mov	r7, r5
    119c:	24 ff       	sbrs	r18, 4
    119e:	0d c0       	rjmp	.+26     	; 0x11ba <vfprintf+0x2d4>
    11a0:	fe 01       	movw	r30, r28
    11a2:	ea 0d       	add	r30, r10
    11a4:	f1 1d       	adc	r31, r1
    11a6:	80 81       	ld	r24, Z
    11a8:	80 33       	cpi	r24, 0x30	; 48
    11aa:	11 f4       	brne	.+4      	; 0x11b0 <vfprintf+0x2ca>
    11ac:	29 7e       	andi	r18, 0xE9	; 233
    11ae:	09 c0       	rjmp	.+18     	; 0x11c2 <vfprintf+0x2dc>
    11b0:	22 ff       	sbrs	r18, 2
    11b2:	06 c0       	rjmp	.+12     	; 0x11c0 <vfprintf+0x2da>
    11b4:	73 94       	inc	r7
    11b6:	73 94       	inc	r7
    11b8:	04 c0       	rjmp	.+8      	; 0x11c2 <vfprintf+0x2dc>
    11ba:	82 2f       	mov	r24, r18
    11bc:	86 78       	andi	r24, 0x86	; 134
    11be:	09 f0       	breq	.+2      	; 0x11c2 <vfprintf+0x2dc>
    11c0:	73 94       	inc	r7
    11c2:	23 fd       	sbrc	r18, 3
    11c4:	13 c0       	rjmp	.+38     	; 0x11ec <vfprintf+0x306>
    11c6:	20 ff       	sbrs	r18, 0
    11c8:	06 c0       	rjmp	.+12     	; 0x11d6 <vfprintf+0x2f0>
    11ca:	5a 2c       	mov	r5, r10
    11cc:	73 14       	cp	r7, r3
    11ce:	18 f4       	brcc	.+6      	; 0x11d6 <vfprintf+0x2f0>
    11d0:	53 0c       	add	r5, r3
    11d2:	57 18       	sub	r5, r7
    11d4:	73 2c       	mov	r7, r3
    11d6:	73 14       	cp	r7, r3
    11d8:	68 f4       	brcc	.+26     	; 0x11f4 <vfprintf+0x30e>
    11da:	b7 01       	movw	r22, r14
    11dc:	80 e2       	ldi	r24, 0x20	; 32
    11de:	90 e0       	ldi	r25, 0x00	; 0
    11e0:	2c 87       	std	Y+12, r18	; 0x0c
    11e2:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <fputc>
    11e6:	73 94       	inc	r7
    11e8:	2c 85       	ldd	r18, Y+12	; 0x0c
    11ea:	f5 cf       	rjmp	.-22     	; 0x11d6 <vfprintf+0x2f0>
    11ec:	73 14       	cp	r7, r3
    11ee:	10 f4       	brcc	.+4      	; 0x11f4 <vfprintf+0x30e>
    11f0:	37 18       	sub	r3, r7
    11f2:	01 c0       	rjmp	.+2      	; 0x11f6 <vfprintf+0x310>
    11f4:	31 2c       	mov	r3, r1
    11f6:	24 ff       	sbrs	r18, 4
    11f8:	12 c0       	rjmp	.+36     	; 0x121e <vfprintf+0x338>
    11fa:	b7 01       	movw	r22, r14
    11fc:	80 e3       	ldi	r24, 0x30	; 48
    11fe:	90 e0       	ldi	r25, 0x00	; 0
    1200:	2c 87       	std	Y+12, r18	; 0x0c
    1202:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <fputc>
    1206:	2c 85       	ldd	r18, Y+12	; 0x0c
    1208:	22 ff       	sbrs	r18, 2
    120a:	17 c0       	rjmp	.+46     	; 0x123a <vfprintf+0x354>
    120c:	21 ff       	sbrs	r18, 1
    120e:	03 c0       	rjmp	.+6      	; 0x1216 <vfprintf+0x330>
    1210:	88 e5       	ldi	r24, 0x58	; 88
    1212:	90 e0       	ldi	r25, 0x00	; 0
    1214:	02 c0       	rjmp	.+4      	; 0x121a <vfprintf+0x334>
    1216:	88 e7       	ldi	r24, 0x78	; 120
    1218:	90 e0       	ldi	r25, 0x00	; 0
    121a:	b7 01       	movw	r22, r14
    121c:	0c c0       	rjmp	.+24     	; 0x1236 <vfprintf+0x350>
    121e:	82 2f       	mov	r24, r18
    1220:	86 78       	andi	r24, 0x86	; 134
    1222:	59 f0       	breq	.+22     	; 0x123a <vfprintf+0x354>
    1224:	21 fd       	sbrc	r18, 1
    1226:	02 c0       	rjmp	.+4      	; 0x122c <vfprintf+0x346>
    1228:	80 e2       	ldi	r24, 0x20	; 32
    122a:	01 c0       	rjmp	.+2      	; 0x122e <vfprintf+0x348>
    122c:	8b e2       	ldi	r24, 0x2B	; 43
    122e:	27 fd       	sbrc	r18, 7
    1230:	8d e2       	ldi	r24, 0x2D	; 45
    1232:	b7 01       	movw	r22, r14
    1234:	90 e0       	ldi	r25, 0x00	; 0
    1236:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <fputc>
    123a:	a5 14       	cp	r10, r5
    123c:	38 f4       	brcc	.+14     	; 0x124c <vfprintf+0x366>
    123e:	b7 01       	movw	r22, r14
    1240:	80 e3       	ldi	r24, 0x30	; 48
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <fputc>
    1248:	5a 94       	dec	r5
    124a:	f7 cf       	rjmp	.-18     	; 0x123a <vfprintf+0x354>
    124c:	aa 94       	dec	r10
    124e:	f4 01       	movw	r30, r8
    1250:	ea 0d       	add	r30, r10
    1252:	f1 1d       	adc	r31, r1
    1254:	80 81       	ld	r24, Z
    1256:	b7 01       	movw	r22, r14
    1258:	90 e0       	ldi	r25, 0x00	; 0
    125a:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <fputc>
    125e:	a1 10       	cpse	r10, r1
    1260:	f5 cf       	rjmp	.-22     	; 0x124c <vfprintf+0x366>
    1262:	33 20       	and	r3, r3
    1264:	09 f4       	brne	.+2      	; 0x1268 <vfprintf+0x382>
    1266:	51 ce       	rjmp	.-862    	; 0xf0a <vfprintf+0x24>
    1268:	b7 01       	movw	r22, r14
    126a:	80 e2       	ldi	r24, 0x20	; 32
    126c:	90 e0       	ldi	r25, 0x00	; 0
    126e:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <fputc>
    1272:	3a 94       	dec	r3
    1274:	f6 cf       	rjmp	.-20     	; 0x1262 <vfprintf+0x37c>
    1276:	f7 01       	movw	r30, r14
    1278:	86 81       	ldd	r24, Z+6	; 0x06
    127a:	97 81       	ldd	r25, Z+7	; 0x07
    127c:	02 c0       	rjmp	.+4      	; 0x1282 <vfprintf+0x39c>
    127e:	8f ef       	ldi	r24, 0xFF	; 255
    1280:	9f ef       	ldi	r25, 0xFF	; 255
    1282:	2c 96       	adiw	r28, 0x0c	; 12
    1284:	e2 e1       	ldi	r30, 0x12	; 18
    1286:	0c 94 07 0a 	jmp	0x140e	; 0x140e <__epilogue_restores__>

0000128a <strnlen_P>:
    128a:	fc 01       	movw	r30, r24
    128c:	05 90       	lpm	r0, Z+
    128e:	61 50       	subi	r22, 0x01	; 1
    1290:	70 40       	sbci	r23, 0x00	; 0
    1292:	01 10       	cpse	r0, r1
    1294:	d8 f7       	brcc	.-10     	; 0x128c <strnlen_P+0x2>
    1296:	80 95       	com	r24
    1298:	90 95       	com	r25
    129a:	8e 0f       	add	r24, r30
    129c:	9f 1f       	adc	r25, r31
    129e:	08 95       	ret

000012a0 <strnlen>:
    12a0:	fc 01       	movw	r30, r24
    12a2:	61 50       	subi	r22, 0x01	; 1
    12a4:	70 40       	sbci	r23, 0x00	; 0
    12a6:	01 90       	ld	r0, Z+
    12a8:	01 10       	cpse	r0, r1
    12aa:	d8 f7       	brcc	.-10     	; 0x12a2 <strnlen+0x2>
    12ac:	80 95       	com	r24
    12ae:	90 95       	com	r25
    12b0:	8e 0f       	add	r24, r30
    12b2:	9f 1f       	adc	r25, r31
    12b4:	08 95       	ret

000012b6 <fputc>:
    12b6:	0f 93       	push	r16
    12b8:	1f 93       	push	r17
    12ba:	cf 93       	push	r28
    12bc:	df 93       	push	r29
    12be:	18 2f       	mov	r17, r24
    12c0:	09 2f       	mov	r16, r25
    12c2:	eb 01       	movw	r28, r22
    12c4:	8b 81       	ldd	r24, Y+3	; 0x03
    12c6:	81 fd       	sbrc	r24, 1
    12c8:	03 c0       	rjmp	.+6      	; 0x12d0 <fputc+0x1a>
    12ca:	8f ef       	ldi	r24, 0xFF	; 255
    12cc:	9f ef       	ldi	r25, 0xFF	; 255
    12ce:	20 c0       	rjmp	.+64     	; 0x1310 <fputc+0x5a>
    12d0:	82 ff       	sbrs	r24, 2
    12d2:	10 c0       	rjmp	.+32     	; 0x12f4 <fputc+0x3e>
    12d4:	4e 81       	ldd	r20, Y+6	; 0x06
    12d6:	5f 81       	ldd	r21, Y+7	; 0x07
    12d8:	2c 81       	ldd	r18, Y+4	; 0x04
    12da:	3d 81       	ldd	r19, Y+5	; 0x05
    12dc:	42 17       	cp	r20, r18
    12de:	53 07       	cpc	r21, r19
    12e0:	7c f4       	brge	.+30     	; 0x1300 <fputc+0x4a>
    12e2:	e8 81       	ld	r30, Y
    12e4:	f9 81       	ldd	r31, Y+1	; 0x01
    12e6:	9f 01       	movw	r18, r30
    12e8:	2f 5f       	subi	r18, 0xFF	; 255
    12ea:	3f 4f       	sbci	r19, 0xFF	; 255
    12ec:	39 83       	std	Y+1, r19	; 0x01
    12ee:	28 83       	st	Y, r18
    12f0:	10 83       	st	Z, r17
    12f2:	06 c0       	rjmp	.+12     	; 0x1300 <fputc+0x4a>
    12f4:	e8 85       	ldd	r30, Y+8	; 0x08
    12f6:	f9 85       	ldd	r31, Y+9	; 0x09
    12f8:	81 2f       	mov	r24, r17
    12fa:	09 95       	icall
    12fc:	89 2b       	or	r24, r25
    12fe:	29 f7       	brne	.-54     	; 0x12ca <fputc+0x14>
    1300:	2e 81       	ldd	r18, Y+6	; 0x06
    1302:	3f 81       	ldd	r19, Y+7	; 0x07
    1304:	2f 5f       	subi	r18, 0xFF	; 255
    1306:	3f 4f       	sbci	r19, 0xFF	; 255
    1308:	3f 83       	std	Y+7, r19	; 0x07
    130a:	2e 83       	std	Y+6, r18	; 0x06
    130c:	81 2f       	mov	r24, r17
    130e:	90 2f       	mov	r25, r16
    1310:	df 91       	pop	r29
    1312:	cf 91       	pop	r28
    1314:	1f 91       	pop	r17
    1316:	0f 91       	pop	r16
    1318:	08 95       	ret

0000131a <__ultoa_invert>:
    131a:	fa 01       	movw	r30, r20
    131c:	aa 27       	eor	r26, r26
    131e:	28 30       	cpi	r18, 0x08	; 8
    1320:	51 f1       	breq	.+84     	; 0x1376 <__ultoa_invert+0x5c>
    1322:	20 31       	cpi	r18, 0x10	; 16
    1324:	81 f1       	breq	.+96     	; 0x1386 <__ultoa_invert+0x6c>
    1326:	e8 94       	clt
    1328:	6f 93       	push	r22
    132a:	6e 7f       	andi	r22, 0xFE	; 254
    132c:	6e 5f       	subi	r22, 0xFE	; 254
    132e:	7f 4f       	sbci	r23, 0xFF	; 255
    1330:	8f 4f       	sbci	r24, 0xFF	; 255
    1332:	9f 4f       	sbci	r25, 0xFF	; 255
    1334:	af 4f       	sbci	r26, 0xFF	; 255
    1336:	b1 e0       	ldi	r27, 0x01	; 1
    1338:	3e d0       	rcall	.+124    	; 0x13b6 <__ultoa_invert+0x9c>
    133a:	b4 e0       	ldi	r27, 0x04	; 4
    133c:	3c d0       	rcall	.+120    	; 0x13b6 <__ultoa_invert+0x9c>
    133e:	67 0f       	add	r22, r23
    1340:	78 1f       	adc	r23, r24
    1342:	89 1f       	adc	r24, r25
    1344:	9a 1f       	adc	r25, r26
    1346:	a1 1d       	adc	r26, r1
    1348:	68 0f       	add	r22, r24
    134a:	79 1f       	adc	r23, r25
    134c:	8a 1f       	adc	r24, r26
    134e:	91 1d       	adc	r25, r1
    1350:	a1 1d       	adc	r26, r1
    1352:	6a 0f       	add	r22, r26
    1354:	71 1d       	adc	r23, r1
    1356:	81 1d       	adc	r24, r1
    1358:	91 1d       	adc	r25, r1
    135a:	a1 1d       	adc	r26, r1
    135c:	20 d0       	rcall	.+64     	; 0x139e <__ultoa_invert+0x84>
    135e:	09 f4       	brne	.+2      	; 0x1362 <__ultoa_invert+0x48>
    1360:	68 94       	set
    1362:	3f 91       	pop	r19
    1364:	2a e0       	ldi	r18, 0x0A	; 10
    1366:	26 9f       	mul	r18, r22
    1368:	11 24       	eor	r1, r1
    136a:	30 19       	sub	r19, r0
    136c:	30 5d       	subi	r19, 0xD0	; 208
    136e:	31 93       	st	Z+, r19
    1370:	de f6       	brtc	.-74     	; 0x1328 <__ultoa_invert+0xe>
    1372:	cf 01       	movw	r24, r30
    1374:	08 95       	ret
    1376:	46 2f       	mov	r20, r22
    1378:	47 70       	andi	r20, 0x07	; 7
    137a:	40 5d       	subi	r20, 0xD0	; 208
    137c:	41 93       	st	Z+, r20
    137e:	b3 e0       	ldi	r27, 0x03	; 3
    1380:	0f d0       	rcall	.+30     	; 0x13a0 <__ultoa_invert+0x86>
    1382:	c9 f7       	brne	.-14     	; 0x1376 <__ultoa_invert+0x5c>
    1384:	f6 cf       	rjmp	.-20     	; 0x1372 <__ultoa_invert+0x58>
    1386:	46 2f       	mov	r20, r22
    1388:	4f 70       	andi	r20, 0x0F	; 15
    138a:	40 5d       	subi	r20, 0xD0	; 208
    138c:	4a 33       	cpi	r20, 0x3A	; 58
    138e:	18 f0       	brcs	.+6      	; 0x1396 <__ultoa_invert+0x7c>
    1390:	49 5d       	subi	r20, 0xD9	; 217
    1392:	31 fd       	sbrc	r19, 1
    1394:	40 52       	subi	r20, 0x20	; 32
    1396:	41 93       	st	Z+, r20
    1398:	02 d0       	rcall	.+4      	; 0x139e <__ultoa_invert+0x84>
    139a:	a9 f7       	brne	.-22     	; 0x1386 <__ultoa_invert+0x6c>
    139c:	ea cf       	rjmp	.-44     	; 0x1372 <__ultoa_invert+0x58>
    139e:	b4 e0       	ldi	r27, 0x04	; 4
    13a0:	a6 95       	lsr	r26
    13a2:	97 95       	ror	r25
    13a4:	87 95       	ror	r24
    13a6:	77 95       	ror	r23
    13a8:	67 95       	ror	r22
    13aa:	ba 95       	dec	r27
    13ac:	c9 f7       	brne	.-14     	; 0x13a0 <__ultoa_invert+0x86>
    13ae:	00 97       	sbiw	r24, 0x00	; 0
    13b0:	61 05       	cpc	r22, r1
    13b2:	71 05       	cpc	r23, r1
    13b4:	08 95       	ret
    13b6:	9b 01       	movw	r18, r22
    13b8:	ac 01       	movw	r20, r24
    13ba:	0a 2e       	mov	r0, r26
    13bc:	06 94       	lsr	r0
    13be:	57 95       	ror	r21
    13c0:	47 95       	ror	r20
    13c2:	37 95       	ror	r19
    13c4:	27 95       	ror	r18
    13c6:	ba 95       	dec	r27
    13c8:	c9 f7       	brne	.-14     	; 0x13bc <__ultoa_invert+0xa2>
    13ca:	62 0f       	add	r22, r18
    13cc:	73 1f       	adc	r23, r19
    13ce:	84 1f       	adc	r24, r20
    13d0:	95 1f       	adc	r25, r21
    13d2:	a0 1d       	adc	r26, r0
    13d4:	08 95       	ret

000013d6 <__prologue_saves__>:
    13d6:	2f 92       	push	r2
    13d8:	3f 92       	push	r3
    13da:	4f 92       	push	r4
    13dc:	5f 92       	push	r5
    13de:	6f 92       	push	r6
    13e0:	7f 92       	push	r7
    13e2:	8f 92       	push	r8
    13e4:	9f 92       	push	r9
    13e6:	af 92       	push	r10
    13e8:	bf 92       	push	r11
    13ea:	cf 92       	push	r12
    13ec:	df 92       	push	r13
    13ee:	ef 92       	push	r14
    13f0:	ff 92       	push	r15
    13f2:	0f 93       	push	r16
    13f4:	1f 93       	push	r17
    13f6:	cf 93       	push	r28
    13f8:	df 93       	push	r29
    13fa:	cd b7       	in	r28, 0x3d	; 61
    13fc:	de b7       	in	r29, 0x3e	; 62
    13fe:	ca 1b       	sub	r28, r26
    1400:	db 0b       	sbc	r29, r27
    1402:	0f b6       	in	r0, 0x3f	; 63
    1404:	f8 94       	cli
    1406:	de bf       	out	0x3e, r29	; 62
    1408:	0f be       	out	0x3f, r0	; 63
    140a:	cd bf       	out	0x3d, r28	; 61
    140c:	09 94       	ijmp

0000140e <__epilogue_restores__>:
    140e:	2a 88       	ldd	r2, Y+18	; 0x12
    1410:	39 88       	ldd	r3, Y+17	; 0x11
    1412:	48 88       	ldd	r4, Y+16	; 0x10
    1414:	5f 84       	ldd	r5, Y+15	; 0x0f
    1416:	6e 84       	ldd	r6, Y+14	; 0x0e
    1418:	7d 84       	ldd	r7, Y+13	; 0x0d
    141a:	8c 84       	ldd	r8, Y+12	; 0x0c
    141c:	9b 84       	ldd	r9, Y+11	; 0x0b
    141e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1420:	b9 84       	ldd	r11, Y+9	; 0x09
    1422:	c8 84       	ldd	r12, Y+8	; 0x08
    1424:	df 80       	ldd	r13, Y+7	; 0x07
    1426:	ee 80       	ldd	r14, Y+6	; 0x06
    1428:	fd 80       	ldd	r15, Y+5	; 0x05
    142a:	0c 81       	ldd	r16, Y+4	; 0x04
    142c:	1b 81       	ldd	r17, Y+3	; 0x03
    142e:	aa 81       	ldd	r26, Y+2	; 0x02
    1430:	b9 81       	ldd	r27, Y+1	; 0x01
    1432:	ce 0f       	add	r28, r30
    1434:	d1 1d       	adc	r29, r1
    1436:	0f b6       	in	r0, 0x3f	; 63
    1438:	f8 94       	cli
    143a:	de bf       	out	0x3e, r29	; 62
    143c:	0f be       	out	0x3f, r0	; 63
    143e:	cd bf       	out	0x3d, r28	; 61
    1440:	ed 01       	movw	r28, r26
    1442:	08 95       	ret

00001444 <_exit>:
    1444:	f8 94       	cli

00001446 <__stop_program>:
    1446:	ff cf       	rjmp	.-2      	; 0x1446 <__stop_program>
